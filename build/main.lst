ARM GAS  C:\Temp\cciZdTos.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB249:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   * @authors        : Jesse Jabez Arendse
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <math.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** #include "7SegDisplay.h"
  28:Core/Src/main.c **** #include "CurrentMonitor.h"
  29:Core/Src/main.c **** #include "Pots.h"
  30:Core/Src/main.c **** #include "IMU.h"
  31:Core/Src/main.c **** #include "StepperMotor.h"
ARM GAS  C:\Temp\cciZdTos.s 			page 2


  32:Core/Src/main.c **** #include "ServoMotors.h"
  33:Core/Src/main.c **** #include "Relays.h"
  34:Core/Src/main.c **** #include "NeoPixels.h"
  35:Core/Src/main.c **** #include "USB.h"
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PTD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PD */
  48:Core/Src/main.c **** #define MPU_ADDRESS		0b1101001<<1
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PM */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  61:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  64:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  65:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_rx;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  68:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  69:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  70:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  71:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  72:Core/Src/main.c **** TIM_HandleTypeDef htim6;
  73:Core/Src/main.c **** TIM_HandleTypeDef htim7;
  74:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_up_ch3;
  75:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch3;
  76:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch4_up;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** UART_HandleTypeDef huart4;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE BEGIN PV */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** uint16_t POTS[ADC_CHANNEL_NUM];
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PV */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  88:Core/Src/main.c **** void SystemClock_Config(void);
ARM GAS  C:\Temp\cciZdTos.s 			page 3


  89:Core/Src/main.c **** static void MX_GPIO_Init(void);
  90:Core/Src/main.c **** static void MX_DMA_Init(void);
  91:Core/Src/main.c **** static void MX_TIM2_Init(void);
  92:Core/Src/main.c **** static void MX_UART4_Init(void);
  93:Core/Src/main.c **** static void MX_I2C1_Init(void);
  94:Core/Src/main.c **** static void MX_ADC1_Init(void);
  95:Core/Src/main.c **** static void MX_TIM7_Init(void);
  96:Core/Src/main.c **** static void MX_TIM6_Init(void);
  97:Core/Src/main.c **** static void MX_I2C2_Init(void);
  98:Core/Src/main.c **** static void MX_TIM4_Init(void);
  99:Core/Src/main.c **** static void MX_TIM1_Init(void);
 100:Core/Src/main.c **** static void MX_TIM3_Init(void);
 101:Core/Src/main.c **** static void MX_TIM5_Init(void);
 102:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PFP */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 108:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief  The application entry point.
 116:Core/Src/main.c ****   * @retval int
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** int main(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Initialize all configured peripherals */
 141:Core/Src/main.c ****   MX_GPIO_Init();
 142:Core/Src/main.c ****   MX_DMA_Init();
 143:Core/Src/main.c ****   MX_TIM2_Init();
 144:Core/Src/main.c ****   MX_UART4_Init();
 145:Core/Src/main.c ****   MX_I2C1_Init();
ARM GAS  C:\Temp\cciZdTos.s 			page 4


 146:Core/Src/main.c ****   MX_ADC1_Init();
 147:Core/Src/main.c ****   MX_TIM7_Init();
 148:Core/Src/main.c ****   MX_TIM6_Init();
 149:Core/Src/main.c ****   MX_I2C2_Init();
 150:Core/Src/main.c ****   MX_TIM4_Init();
 151:Core/Src/main.c ****   MX_TIM1_Init();
 152:Core/Src/main.c ****   MX_TIM3_Init();
 153:Core/Src/main.c ****   MX_TIM5_Init();
 154:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END 2 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* Infinite loop */
 161:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   init_7SegDisplay();
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   init_IMU();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   while (1)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     
 170:Core/Src/main.c ****    setFloatNumber(readAccel(IMU_Y_AXIS));
 171:Core/Src/main.c ****    HAL_Delay(200);
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c ****     /* USER CODE END WHILE */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 176:Core/Src/main.c ****   /* USER CODE END 3 */
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief System Clock Configuration
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void SystemClock_Config(void)
 184:Core/Src/main.c **** {
 185:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 191:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 194:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
ARM GAS  C:\Temp\cciZdTos.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 227:Core/Src/main.c ****   * @param None
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** static void MX_ADC1_Init(void)
 231:Core/Src/main.c **** {
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   hadc1.Instance = ADC1;
 246:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 247:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 248:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 249:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 250:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 251:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 252:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 253:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 254:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 255:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 256:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 257:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Temp\cciZdTos.s 			page 6


 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 265:Core/Src/main.c ****   sConfig.Rank = 1;
 266:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 267:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 275:Core/Src/main.c ****   sConfig.Rank = 2;
 276:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 284:Core/Src/main.c ****   sConfig.Rank = 3;
 285:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 293:Core/Src/main.c ****   sConfig.Rank = 4;
 294:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****     Error_Handler();
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /**
 305:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 306:Core/Src/main.c ****   * @param None
 307:Core/Src/main.c ****   * @retval None
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c **** static void MX_I2C1_Init(void)
 310:Core/Src/main.c **** {
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
ARM GAS  C:\Temp\cciZdTos.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 319:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 320:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 321:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 322:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 323:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 324:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 325:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 326:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 327:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 328:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /**
 339:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 340:Core/Src/main.c ****   * @param None
 341:Core/Src/main.c ****   * @retval None
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c **** static void MX_I2C2_Init(void)
 344:Core/Src/main.c **** {
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 353:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 354:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 355:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 356:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 357:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 358:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 359:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 360:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 361:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 362:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** }
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** /**
 373:Core/Src/main.c ****   * @brief TIM1 Initialization Function
ARM GAS  C:\Temp\cciZdTos.s 			page 8


 374:Core/Src/main.c ****   * @param None
 375:Core/Src/main.c ****   * @retval None
 376:Core/Src/main.c ****   */
 377:Core/Src/main.c **** static void MX_TIM1_Init(void)
 378:Core/Src/main.c **** {
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 385:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 386:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 391:Core/Src/main.c ****   htim1.Instance = TIM1;
 392:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 393:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 394:Core/Src/main.c ****   htim1.Init.Period = 65535;
 395:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 396:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 397:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 398:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 399:Core/Src/main.c ****   {
 400:Core/Src/main.c ****     Error_Handler();
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 403:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 412:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 413:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     Error_Handler();
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 418:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 419:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 420:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 421:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 422:Core/Src/main.c ****   {
 423:Core/Src/main.c ****     Error_Handler();
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 430:Core/Src/main.c ****   {
ARM GAS  C:\Temp\cciZdTos.s 			page 9


 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****     Error_Handler();
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** }
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /**
 444:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 445:Core/Src/main.c ****   * @param None
 446:Core/Src/main.c ****   * @retval None
 447:Core/Src/main.c ****   */
 448:Core/Src/main.c **** static void MX_TIM2_Init(void)
 449:Core/Src/main.c **** {
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 456:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 457:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 462:Core/Src/main.c ****   htim2.Instance = TIM2;
 463:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 464:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 465:Core/Src/main.c ****   htim2.Init.Period = 104;
 466:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 467:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 468:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 473:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     Error_Handler();
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 482:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 483:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     Error_Handler();
 486:Core/Src/main.c ****   }
 487:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  C:\Temp\cciZdTos.s 			page 10


 488:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 489:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 490:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 491:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 492:Core/Src/main.c ****   {
 493:Core/Src/main.c ****     Error_Handler();
 494:Core/Src/main.c ****   }
 495:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 498:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** }
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** /**
 503:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 504:Core/Src/main.c ****   * @param None
 505:Core/Src/main.c ****   * @retval None
 506:Core/Src/main.c ****   */
 507:Core/Src/main.c **** static void MX_TIM3_Init(void)
 508:Core/Src/main.c **** {
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 515:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 516:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 521:Core/Src/main.c ****   htim3.Instance = TIM3;
 522:Core/Src/main.c ****   htim3.Init.Prescaler = 83;
 523:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 524:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 525:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 526:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 527:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 532:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 533:Core/Src/main.c ****   {
 534:Core/Src/main.c ****     Error_Handler();
 535:Core/Src/main.c ****   }
 536:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 537:Core/Src/main.c ****   {
 538:Core/Src/main.c ****     Error_Handler();
 539:Core/Src/main.c ****   }
 540:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 541:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 543:Core/Src/main.c ****   {
 544:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Temp\cciZdTos.s 			page 11


 545:Core/Src/main.c ****   }
 546:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 547:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 548:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 549:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 550:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 551:Core/Src/main.c ****   {
 552:Core/Src/main.c ****     Error_Handler();
 553:Core/Src/main.c ****   }
 554:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 555:Core/Src/main.c ****   {
 556:Core/Src/main.c ****     Error_Handler();
 557:Core/Src/main.c ****   }
 558:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 559:Core/Src/main.c ****   {
 560:Core/Src/main.c ****     Error_Handler();
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 563:Core/Src/main.c ****   {
 564:Core/Src/main.c ****     Error_Handler();
 565:Core/Src/main.c ****   }
 566:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 569:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** }
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** /**
 574:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 575:Core/Src/main.c ****   * @param None
 576:Core/Src/main.c ****   * @retval None
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c **** static void MX_TIM4_Init(void)
 579:Core/Src/main.c **** {
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 586:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 589:Core/Src/main.c **** 
 590:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 591:Core/Src/main.c ****   htim4.Instance = TIM4;
 592:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 593:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 594:Core/Src/main.c ****   htim4.Init.Period = 8400;
 595:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 596:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 597:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 598:Core/Src/main.c ****   {
 599:Core/Src/main.c ****     Error_Handler();
 600:Core/Src/main.c ****   }
 601:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  C:\Temp\cciZdTos.s 			page 12


 602:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 603:Core/Src/main.c ****   {
 604:Core/Src/main.c ****     Error_Handler();
 605:Core/Src/main.c ****   }
 606:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 607:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 608:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 609:Core/Src/main.c ****   {
 610:Core/Src/main.c ****     Error_Handler();
 611:Core/Src/main.c ****   }
 612:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** }
 617:Core/Src/main.c **** 
 618:Core/Src/main.c **** /**
 619:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 620:Core/Src/main.c ****   * @param None
 621:Core/Src/main.c ****   * @retval None
 622:Core/Src/main.c ****   */
 623:Core/Src/main.c **** static void MX_TIM5_Init(void)
 624:Core/Src/main.c **** {
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 627:Core/Src/main.c **** 
 628:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 631:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 636:Core/Src/main.c ****   htim5.Instance = TIM5;
 637:Core/Src/main.c ****   htim5.Init.Prescaler = (8400/3/60)-1;
 638:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 639:Core/Src/main.c ****   htim5.Init.Period = 10000-1;
 640:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 641:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 642:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 643:Core/Src/main.c ****   {
 644:Core/Src/main.c ****     Error_Handler();
 645:Core/Src/main.c ****   }
 646:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 647:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 648:Core/Src/main.c ****   {
 649:Core/Src/main.c ****     Error_Handler();
 650:Core/Src/main.c ****   }
 651:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 652:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 653:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 654:Core/Src/main.c ****   {
 655:Core/Src/main.c ****     Error_Handler();
 656:Core/Src/main.c ****   }
 657:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 658:Core/Src/main.c **** 
ARM GAS  C:\Temp\cciZdTos.s 			page 13


 659:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** }
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** /**
 664:Core/Src/main.c ****   * @brief TIM6 Initialization Function
 665:Core/Src/main.c ****   * @param None
 666:Core/Src/main.c ****   * @retval None
 667:Core/Src/main.c ****   */
 668:Core/Src/main.c **** static void MX_TIM6_Init(void)
 669:Core/Src/main.c **** {
 670:Core/Src/main.c **** 
 671:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****   /* USER CODE END TIM6_Init 0 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE END TIM6_Init 1 */
 680:Core/Src/main.c ****   htim6.Instance = TIM6;
 681:Core/Src/main.c ****   htim6.Init.Prescaler = 8400-1;
 682:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 683:Core/Src/main.c ****   htim6.Init.Period = 10000-1;
 684:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 685:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 686:Core/Src/main.c ****   {
 687:Core/Src/main.c ****     Error_Handler();
 688:Core/Src/main.c ****   }
 689:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 690:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 691:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 692:Core/Src/main.c ****   {
 693:Core/Src/main.c ****     Error_Handler();
 694:Core/Src/main.c ****   }
 695:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE END TIM6_Init 2 */
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** }
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** /**
 702:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 703:Core/Src/main.c ****   * @param None
 704:Core/Src/main.c ****   * @retval None
 705:Core/Src/main.c ****   */
 706:Core/Src/main.c **** static void MX_TIM7_Init(void)
 707:Core/Src/main.c **** {
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 710:Core/Src/main.c **** 
 711:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 712:Core/Src/main.c **** 
 713:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
ARM GAS  C:\Temp\cciZdTos.s 			page 14


 716:Core/Src/main.c ****   
 717:Core/Src/main.c **** 
 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   // prescalar and ARR setup to theoretically achieve 240Hz display refresh rate
 720:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 721:Core/Src/main.c ****   htim7.Instance = TIM7;
 722:Core/Src/main.c ****   htim7.Init.Prescaler = (8400/3/60)-1;
 723:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 724:Core/Src/main.c ****   htim7.Init.Period = 10000-1;
 725:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 726:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 727:Core/Src/main.c ****   {
 728:Core/Src/main.c ****     Error_Handler();
 729:Core/Src/main.c ****   }
 730:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 731:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 732:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 733:Core/Src/main.c ****   {
 734:Core/Src/main.c ****     Error_Handler();
 735:Core/Src/main.c ****   }
 736:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
 739:Core/Src/main.c **** 
 740:Core/Src/main.c **** }
 741:Core/Src/main.c **** 
 742:Core/Src/main.c **** /**
 743:Core/Src/main.c ****   * @brief UART4 Initialization Function
 744:Core/Src/main.c ****   * @param None
 745:Core/Src/main.c ****   * @retval None
 746:Core/Src/main.c ****   */
 747:Core/Src/main.c **** static void MX_UART4_Init(void)
 748:Core/Src/main.c **** {
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 753:Core/Src/main.c **** 
 754:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 755:Core/Src/main.c **** 
 756:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 757:Core/Src/main.c ****   huart4.Instance = UART4;
 758:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 759:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 760:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 761:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 762:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 763:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 764:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 765:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 766:Core/Src/main.c ****   {
 767:Core/Src/main.c ****     Error_Handler();
 768:Core/Src/main.c ****   }
 769:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 772:Core/Src/main.c **** 
ARM GAS  C:\Temp\cciZdTos.s 			page 15


 773:Core/Src/main.c **** }
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** /**
 776:Core/Src/main.c ****   * Enable DMA controller clock
 777:Core/Src/main.c ****   */
 778:Core/Src/main.c **** static void MX_DMA_Init(void)
 779:Core/Src/main.c **** {
 780:Core/Src/main.c **** 
 781:Core/Src/main.c ****   /* DMA controller clock enable */
 782:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 783:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 784:Core/Src/main.c **** 
 785:Core/Src/main.c ****   /* DMA interrupt init */
 786:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
 787:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 788:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 789:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 790:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 791:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 792:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 793:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 794:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 795:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 796:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 797:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 798:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 799:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 801:Core/Src/main.c **** 
 802:Core/Src/main.c **** }
 803:Core/Src/main.c **** 
 804:Core/Src/main.c **** /**
 805:Core/Src/main.c ****   * @brief GPIO Initialization Function
 806:Core/Src/main.c ****   * @param None
 807:Core/Src/main.c ****   * @retval None
 808:Core/Src/main.c ****   */
 809:Core/Src/main.c **** static void MX_GPIO_Init(void)
 810:Core/Src/main.c **** {
  28              		.loc 1 810 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8CB0     		sub	sp, sp, #48
  41              		.cfi_def_cfa_offset 72
 811:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 811 3 view .LVU1
  43              		.loc 1 811 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0794     		str	r4, [sp, #28]
ARM GAS  C:\Temp\cciZdTos.s 			page 16


  46 000a 0894     		str	r4, [sp, #32]
  47 000c 0994     		str	r4, [sp, #36]
  48 000e 0A94     		str	r4, [sp, #40]
  49 0010 0B94     		str	r4, [sp, #44]
 812:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 813:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 814:Core/Src/main.c **** 
 815:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 816:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  50              		.loc 1 816 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 816 3 view .LVU4
  53 0012 0094     		str	r4, [sp]
  54              		.loc 1 816 3 view .LVU5
  55 0014 474B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F01002 		orr	r2, r2, #16
  58 001c 1A63     		str	r2, [r3, #48]
  59              		.loc 1 816 3 view .LVU6
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F01002 		and	r2, r2, #16
  62 0024 0092     		str	r2, [sp]
  63              		.loc 1 816 3 view .LVU7
  64 0026 009A     		ldr	r2, [sp]
  65              	.LBE4:
  66              		.loc 1 816 3 view .LVU8
 817:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  67              		.loc 1 817 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 817 3 view .LVU10
  70 0028 0194     		str	r4, [sp, #4]
  71              		.loc 1 817 3 view .LVU11
  72 002a 1A6B     		ldr	r2, [r3, #48]
  73 002c 42F02002 		orr	r2, r2, #32
  74 0030 1A63     		str	r2, [r3, #48]
  75              		.loc 1 817 3 view .LVU12
  76 0032 1A6B     		ldr	r2, [r3, #48]
  77 0034 02F02002 		and	r2, r2, #32
  78 0038 0192     		str	r2, [sp, #4]
  79              		.loc 1 817 3 view .LVU13
  80 003a 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
  82              		.loc 1 817 3 view .LVU14
 818:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 818 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 818 3 view .LVU16
  86 003c 0294     		str	r4, [sp, #8]
  87              		.loc 1 818 3 view .LVU17
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00102 		orr	r2, r2, #1
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 818 3 view .LVU18
  92 0046 1A6B     		ldr	r2, [r3, #48]
  93 0048 02F00102 		and	r2, r2, #1
  94 004c 0292     		str	r2, [sp, #8]
  95              		.loc 1 818 3 view .LVU19
ARM GAS  C:\Temp\cciZdTos.s 			page 17


  96 004e 029A     		ldr	r2, [sp, #8]
  97              	.LBE6:
  98              		.loc 1 818 3 view .LVU20
 819:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 819 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 819 3 view .LVU22
 102 0050 0394     		str	r4, [sp, #12]
 103              		.loc 1 819 3 view .LVU23
 104 0052 1A6B     		ldr	r2, [r3, #48]
 105 0054 42F00202 		orr	r2, r2, #2
 106 0058 1A63     		str	r2, [r3, #48]
 107              		.loc 1 819 3 view .LVU24
 108 005a 1A6B     		ldr	r2, [r3, #48]
 109 005c 02F00202 		and	r2, r2, #2
 110 0060 0392     		str	r2, [sp, #12]
 111              		.loc 1 819 3 view .LVU25
 112 0062 039A     		ldr	r2, [sp, #12]
 113              	.LBE7:
 114              		.loc 1 819 3 view .LVU26
 820:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 115              		.loc 1 820 3 view .LVU27
 116              	.LBB8:
 117              		.loc 1 820 3 view .LVU28
 118 0064 0494     		str	r4, [sp, #16]
 119              		.loc 1 820 3 view .LVU29
 120 0066 1A6B     		ldr	r2, [r3, #48]
 121 0068 42F00802 		orr	r2, r2, #8
 122 006c 1A63     		str	r2, [r3, #48]
 123              		.loc 1 820 3 view .LVU30
 124 006e 1A6B     		ldr	r2, [r3, #48]
 125 0070 02F00802 		and	r2, r2, #8
 126 0074 0492     		str	r2, [sp, #16]
 127              		.loc 1 820 3 view .LVU31
 128 0076 049A     		ldr	r2, [sp, #16]
 129              	.LBE8:
 130              		.loc 1 820 3 view .LVU32
 821:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 131              		.loc 1 821 3 view .LVU33
 132              	.LBB9:
 133              		.loc 1 821 3 view .LVU34
 134 0078 0594     		str	r4, [sp, #20]
 135              		.loc 1 821 3 view .LVU35
 136 007a 1A6B     		ldr	r2, [r3, #48]
 137 007c 42F04002 		orr	r2, r2, #64
 138 0080 1A63     		str	r2, [r3, #48]
 139              		.loc 1 821 3 view .LVU36
 140 0082 1A6B     		ldr	r2, [r3, #48]
 141 0084 02F04002 		and	r2, r2, #64
 142 0088 0592     		str	r2, [sp, #20]
 143              		.loc 1 821 3 view .LVU37
 144 008a 059A     		ldr	r2, [sp, #20]
 145              	.LBE9:
 146              		.loc 1 821 3 view .LVU38
 822:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 147              		.loc 1 822 3 view .LVU39
 148              	.LBB10:
ARM GAS  C:\Temp\cciZdTos.s 			page 18


 149              		.loc 1 822 3 view .LVU40
 150 008c 0694     		str	r4, [sp, #24]
 151              		.loc 1 822 3 view .LVU41
 152 008e 1A6B     		ldr	r2, [r3, #48]
 153 0090 42F00402 		orr	r2, r2, #4
 154 0094 1A63     		str	r2, [r3, #48]
 155              		.loc 1 822 3 view .LVU42
 156 0096 1B6B     		ldr	r3, [r3, #48]
 157 0098 03F00403 		and	r3, r3, #4
 158 009c 0693     		str	r3, [sp, #24]
 159              		.loc 1 822 3 view .LVU43
 160 009e 069B     		ldr	r3, [sp, #24]
 161              	.LBE10:
 162              		.loc 1 822 3 view .LVU44
 823:Core/Src/main.c **** 
 824:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 825:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 163              		.loc 1 825 3 view .LVU45
 164 00a0 254F     		ldr	r7, .L3+4
 165 00a2 2246     		mov	r2, r4
 166 00a4 FF21     		movs	r1, #255
 167 00a6 3846     		mov	r0, r7
 168 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL0:
 826:Core/Src/main.c ****                           |LED4_Pin|LED5_Pin|LED6_Pin|LED7_Pin, GPIO_PIN_RESET);
 827:Core/Src/main.c **** 
 828:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 829:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, Stepper_0_Pin|Stepper_2_Pin|Stepper_1_Pin|Stepper_3_Pin
 170              		.loc 1 829 3 view .LVU46
 171 00ac DFF89480 		ldr	r8, .L3+16
 172 00b0 2246     		mov	r2, r4
 173 00b2 4FF20C01 		movw	r1, #61452
 174 00b6 4046     		mov	r0, r8
 175 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 176              	.LVL1:
 830:Core/Src/main.c ****                           |Relay1_Pin|Relay2_Pin, GPIO_PIN_RESET);
 831:Core/Src/main.c **** 
 832:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 833:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, DISP_GRID0_Pin|DISP_GRID1_Pin|DISP_A_Pin|DISP_F_Pin
 177              		.loc 1 833 3 view .LVU47
 178 00bc 1F4E     		ldr	r6, .L3+8
 179 00be 2246     		mov	r2, r4
 180 00c0 41F6FC71 		movw	r1, #8188
 181 00c4 3046     		mov	r0, r6
 182 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 183              	.LVL2:
 834:Core/Src/main.c ****                           |DISP_B_Pin|DISP_GRID2_Pin|DISP_G_Pin|DISP_C_Pin
 835:Core/Src/main.c ****                           |DISP_DP_Pin|DISP_D_Pin|DISP_E_Pin, GPIO_PIN_RESET);
 836:Core/Src/main.c **** 
 837:Core/Src/main.c ****   /*Configure GPIO pins : SW0_Pin SW1_Pin SW2_Pin SW3_Pin
 838:Core/Src/main.c ****                            Toggle0_Pin Toggle1_Pin Toggle2_Pin Toggle3_Pin */
 839:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW0_Pin|SW1_Pin|SW2_Pin|SW3_Pin
 184              		.loc 1 839 3 view .LVU48
 185              		.loc 1 839 23 is_stmt 0 view .LVU49
 186 00ca 40F2BC73 		movw	r3, #1980
 187 00ce 0793     		str	r3, [sp, #28]
 840:Core/Src/main.c ****                           |Toggle0_Pin|Toggle1_Pin|Toggle2_Pin|Toggle3_Pin;
ARM GAS  C:\Temp\cciZdTos.s 			page 19


 841:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 188              		.loc 1 841 3 is_stmt 1 view .LVU50
 189              		.loc 1 841 24 is_stmt 0 view .LVU51
 190 00d0 0894     		str	r4, [sp, #32]
 842:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 191              		.loc 1 842 3 is_stmt 1 view .LVU52
 192              		.loc 1 842 24 is_stmt 0 view .LVU53
 193 00d2 0994     		str	r4, [sp, #36]
 843:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 194              		.loc 1 843 3 is_stmt 1 view .LVU54
 195 00d4 07A9     		add	r1, sp, #28
 196 00d6 1A48     		ldr	r0, .L3+12
 197 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL3:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c ****   /*Configure GPIO pins : LED0_Pin LED1_Pin LED2_Pin LED3_Pin
 846:Core/Src/main.c ****                            LED4_Pin LED5_Pin LED6_Pin LED7_Pin */
 847:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 199              		.loc 1 847 3 view .LVU55
 200              		.loc 1 847 23 is_stmt 0 view .LVU56
 201 00dc FF23     		movs	r3, #255
 202 00de 0793     		str	r3, [sp, #28]
 848:Core/Src/main.c ****                           |LED4_Pin|LED5_Pin|LED6_Pin|LED7_Pin;
 849:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 203              		.loc 1 849 3 is_stmt 1 view .LVU57
 204              		.loc 1 849 24 is_stmt 0 view .LVU58
 205 00e0 0125     		movs	r5, #1
 206 00e2 0895     		str	r5, [sp, #32]
 850:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 850 3 is_stmt 1 view .LVU59
 208              		.loc 1 850 24 is_stmt 0 view .LVU60
 209 00e4 0994     		str	r4, [sp, #36]
 851:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 210              		.loc 1 851 3 is_stmt 1 view .LVU61
 211              		.loc 1 851 25 is_stmt 0 view .LVU62
 212 00e6 0A94     		str	r4, [sp, #40]
 852:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213              		.loc 1 852 3 is_stmt 1 view .LVU63
 214 00e8 07A9     		add	r1, sp, #28
 215 00ea 3846     		mov	r0, r7
 216 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 217              	.LVL4:
 853:Core/Src/main.c **** 
 854:Core/Src/main.c ****   /*Configure GPIO pins : Stepper_0_Pin Stepper_2_Pin Stepper_1_Pin Stepper_3_Pin
 855:Core/Src/main.c ****                            Relay1_Pin Relay2_Pin */
 856:Core/Src/main.c ****   GPIO_InitStruct.Pin = Stepper_0_Pin|Stepper_2_Pin|Stepper_1_Pin|Stepper_3_Pin
 218              		.loc 1 856 3 view .LVU64
 219              		.loc 1 856 23 is_stmt 0 view .LVU65
 220 00f0 4FF20C03 		movw	r3, #61452
 221 00f4 0793     		str	r3, [sp, #28]
 857:Core/Src/main.c ****                           |Relay1_Pin|Relay2_Pin;
 858:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 222              		.loc 1 858 3 is_stmt 1 view .LVU66
 223              		.loc 1 858 24 is_stmt 0 view .LVU67
 224 00f6 0895     		str	r5, [sp, #32]
 859:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 225              		.loc 1 859 3 is_stmt 1 view .LVU68
ARM GAS  C:\Temp\cciZdTos.s 			page 20


 226              		.loc 1 859 24 is_stmt 0 view .LVU69
 227 00f8 0994     		str	r4, [sp, #36]
 860:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 228              		.loc 1 860 3 is_stmt 1 view .LVU70
 229              		.loc 1 860 25 is_stmt 0 view .LVU71
 230 00fa 0327     		movs	r7, #3
 231 00fc 0A97     		str	r7, [sp, #40]
 861:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 232              		.loc 1 861 3 is_stmt 1 view .LVU72
 233 00fe 07A9     		add	r1, sp, #28
 234 0100 4046     		mov	r0, r8
 235 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 236              	.LVL5:
 862:Core/Src/main.c **** 
 863:Core/Src/main.c ****   /*Configure GPIO pins : DISP_GRID0_Pin DISP_GRID1_Pin DISP_GRID2_Pin DISP_DP_Pin */
 864:Core/Src/main.c ****   GPIO_InitStruct.Pin = DISP_GRID0_Pin|DISP_GRID1_Pin|DISP_GRID2_Pin|DISP_DP_Pin;
 237              		.loc 1 864 3 view .LVU73
 238              		.loc 1 864 23 is_stmt 0 view .LVU74
 239 0106 40F28C43 		movw	r3, #1164
 240 010a 0793     		str	r3, [sp, #28]
 865:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 241              		.loc 1 865 3 is_stmt 1 view .LVU75
 242              		.loc 1 865 24 is_stmt 0 view .LVU76
 243 010c 0895     		str	r5, [sp, #32]
 866:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 244              		.loc 1 866 3 is_stmt 1 view .LVU77
 245              		.loc 1 866 24 is_stmt 0 view .LVU78
 246 010e 0994     		str	r4, [sp, #36]
 867:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 247              		.loc 1 867 3 is_stmt 1 view .LVU79
 248              		.loc 1 867 25 is_stmt 0 view .LVU80
 249 0110 0A94     		str	r4, [sp, #40]
 868:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 250              		.loc 1 868 3 is_stmt 1 view .LVU81
 251 0112 07A9     		add	r1, sp, #28
 252 0114 3046     		mov	r0, r6
 253 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 254              	.LVL6:
 869:Core/Src/main.c **** 
 870:Core/Src/main.c ****   /*Configure GPIO pins : DISP_A_Pin DISP_F_Pin DISP_B_Pin DISP_G_Pin
 871:Core/Src/main.c ****                            DISP_C_Pin DISP_D_Pin DISP_E_Pin */
 872:Core/Src/main.c ****   GPIO_InitStruct.Pin = DISP_A_Pin|DISP_F_Pin|DISP_B_Pin|DISP_G_Pin
 255              		.loc 1 872 3 view .LVU82
 256              		.loc 1 872 23 is_stmt 0 view .LVU83
 257 011a 41F67033 		movw	r3, #7024
 258 011e 0793     		str	r3, [sp, #28]
 873:Core/Src/main.c ****                           |DISP_C_Pin|DISP_D_Pin|DISP_E_Pin;
 874:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 259              		.loc 1 874 3 is_stmt 1 view .LVU84
 260              		.loc 1 874 24 is_stmt 0 view .LVU85
 261 0120 0895     		str	r5, [sp, #32]
 875:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 262              		.loc 1 875 3 is_stmt 1 view .LVU86
 263              		.loc 1 875 24 is_stmt 0 view .LVU87
 264 0122 0994     		str	r4, [sp, #36]
 876:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 265              		.loc 1 876 3 is_stmt 1 view .LVU88
ARM GAS  C:\Temp\cciZdTos.s 			page 21


 266              		.loc 1 876 25 is_stmt 0 view .LVU89
 267 0124 0A97     		str	r7, [sp, #40]
 877:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 268              		.loc 1 877 3 is_stmt 1 view .LVU90
 269 0126 07A9     		add	r1, sp, #28
 270 0128 3046     		mov	r0, r6
 271 012a FFF7FEFF 		bl	HAL_GPIO_Init
 272              	.LVL7:
 878:Core/Src/main.c **** 
 879:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 880:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 881:Core/Src/main.c **** }
 273              		.loc 1 881 1 is_stmt 0 view .LVU91
 274 012e 0CB0     		add	sp, sp, #48
 275              		.cfi_def_cfa_offset 24
 276              		@ sp needed
 277 0130 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 278              	.L4:
 279              		.align	2
 280              	.L3:
 281 0134 00380240 		.word	1073887232
 282 0138 00040240 		.word	1073873920
 283 013c 00180240 		.word	1073879040
 284 0140 00100240 		.word	1073876992
 285 0144 000C0240 		.word	1073875968
 286              		.cfi_endproc
 287              	.LFE249:
 289              		.section	.text.MX_DMA_Init,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	MX_DMA_Init:
 296              	.LFB248:
 779:Core/Src/main.c **** 
 297              		.loc 1 779 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 10B5     		push	{r4, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 305 0002 82B0     		sub	sp, sp, #8
 306              		.cfi_def_cfa_offset 16
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 307              		.loc 1 782 3 view .LVU93
 308              	.LBB11:
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 309              		.loc 1 782 3 view .LVU94
 310 0004 0024     		movs	r4, #0
 311 0006 0094     		str	r4, [sp]
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 312              		.loc 1 782 3 view .LVU95
 313 0008 1E4B     		ldr	r3, .L7
 314 000a 1A6B     		ldr	r2, [r3, #48]
 315 000c 42F40012 		orr	r2, r2, #2097152
ARM GAS  C:\Temp\cciZdTos.s 			page 22


 316 0010 1A63     		str	r2, [r3, #48]
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 317              		.loc 1 782 3 view .LVU96
 318 0012 1A6B     		ldr	r2, [r3, #48]
 319 0014 02F40012 		and	r2, r2, #2097152
 320 0018 0092     		str	r2, [sp]
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 321              		.loc 1 782 3 view .LVU97
 322 001a 009A     		ldr	r2, [sp]
 323              	.LBE11:
 782:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 324              		.loc 1 782 3 view .LVU98
 783:Core/Src/main.c **** 
 325              		.loc 1 783 3 view .LVU99
 326              	.LBB12:
 783:Core/Src/main.c **** 
 327              		.loc 1 783 3 view .LVU100
 328 001c 0194     		str	r4, [sp, #4]
 783:Core/Src/main.c **** 
 329              		.loc 1 783 3 view .LVU101
 330 001e 1A6B     		ldr	r2, [r3, #48]
 331 0020 42F48002 		orr	r2, r2, #4194304
 332 0024 1A63     		str	r2, [r3, #48]
 783:Core/Src/main.c **** 
 333              		.loc 1 783 3 view .LVU102
 334 0026 1B6B     		ldr	r3, [r3, #48]
 335 0028 03F48003 		and	r3, r3, #4194304
 336 002c 0193     		str	r3, [sp, #4]
 783:Core/Src/main.c **** 
 337              		.loc 1 783 3 view .LVU103
 338 002e 019B     		ldr	r3, [sp, #4]
 339              	.LBE12:
 783:Core/Src/main.c **** 
 340              		.loc 1 783 3 view .LVU104
 787:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 341              		.loc 1 787 3 view .LVU105
 342 0030 2246     		mov	r2, r4
 343 0032 2146     		mov	r1, r4
 344 0034 0B20     		movs	r0, #11
 345 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 346              	.LVL8:
 788:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 347              		.loc 1 788 3 view .LVU106
 348 003a 0B20     		movs	r0, #11
 349 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 350              	.LVL9:
 790:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 351              		.loc 1 790 3 view .LVU107
 352 0040 2246     		mov	r2, r4
 353 0042 2146     		mov	r1, r4
 354 0044 0C20     		movs	r0, #12
 355 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 356              	.LVL10:
 791:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 357              		.loc 1 791 3 view .LVU108
 358 004a 0C20     		movs	r0, #12
 359 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  C:\Temp\cciZdTos.s 			page 23


 360              	.LVL11:
 793:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 361              		.loc 1 793 3 view .LVU109
 362 0050 2246     		mov	r2, r4
 363 0052 2146     		mov	r1, r4
 364 0054 0D20     		movs	r0, #13
 365 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 366              	.LVL12:
 794:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 367              		.loc 1 794 3 view .LVU110
 368 005a 0D20     		movs	r0, #13
 369 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 370              	.LVL13:
 796:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 371              		.loc 1 796 3 view .LVU111
 372 0060 2246     		mov	r2, r4
 373 0062 2146     		mov	r1, r4
 374 0064 2F20     		movs	r0, #47
 375 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 376              	.LVL14:
 797:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 377              		.loc 1 797 3 view .LVU112
 378 006a 2F20     		movs	r0, #47
 379 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 380              	.LVL15:
 799:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 381              		.loc 1 799 3 view .LVU113
 382 0070 2246     		mov	r2, r4
 383 0072 2146     		mov	r1, r4
 384 0074 3820     		movs	r0, #56
 385 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 386              	.LVL16:
 800:Core/Src/main.c **** 
 387              		.loc 1 800 3 view .LVU114
 388 007a 3820     		movs	r0, #56
 389 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 390              	.LVL17:
 802:Core/Src/main.c **** 
 391              		.loc 1 802 1 is_stmt 0 view .LVU115
 392 0080 02B0     		add	sp, sp, #8
 393              		.cfi_def_cfa_offset 8
 394              		@ sp needed
 395 0082 10BD     		pop	{r4, pc}
 396              	.L8:
 397              		.align	2
 398              	.L7:
 399 0084 00380240 		.word	1073887232
 400              		.cfi_endproc
 401              	.LFE248:
 403              		.section	.text.Error_Handler,"ax",%progbits
 404              		.align	1
 405              		.global	Error_Handler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	Error_Handler:
 411              	.LFB250:
ARM GAS  C:\Temp\cciZdTos.s 			page 24


 882:Core/Src/main.c **** 
 883:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 884:Core/Src/main.c **** 
 885:Core/Src/main.c **** /* USER CODE END 4 */
 886:Core/Src/main.c **** 
 887:Core/Src/main.c **** /**
 888:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 889:Core/Src/main.c ****   * @retval None
 890:Core/Src/main.c ****   */
 891:Core/Src/main.c **** void Error_Handler(void)
 892:Core/Src/main.c **** {
 412              		.loc 1 892 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ Volatile: function does not return.
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 893:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 894:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 895:Core/Src/main.c ****   __disable_irq();
 418              		.loc 1 895 3 view .LVU117
 419              	.LBB13:
 420              	.LBI13:
 421              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Temp\cciZdTos.s 			page 25


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  C:\Temp\cciZdTos.s 			page 26


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 422              		.loc 2 140 27 view .LVU118
 423              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 424              		.loc 2 142 3 view .LVU119
 425              		.syntax unified
 426              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Temp\cciZdTos.s 			page 27


 427 0000 72B6     		cpsid i
 428              	@ 0 "" 2
 429              		.thumb
 430              		.syntax unified
 431              	.L10:
 432              	.LBE14:
 433              	.LBE13:
 896:Core/Src/main.c ****   while (1)
 434              		.loc 1 896 3 discriminator 1 view .LVU120
 897:Core/Src/main.c ****   {
 898:Core/Src/main.c ****   }
 435              		.loc 1 898 3 discriminator 1 view .LVU121
 896:Core/Src/main.c ****   while (1)
 436              		.loc 1 896 9 discriminator 1 view .LVU122
 437 0002 FEE7     		b	.L10
 438              		.cfi_endproc
 439              	.LFE250:
 441              		.section	.text.MX_TIM2_Init,"ax",%progbits
 442              		.align	1
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	MX_TIM2_Init:
 448              	.LFB241:
 449:Core/Src/main.c **** 
 449              		.loc 1 449 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 56
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 00B5     		push	{lr}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 14, -4
 456 0002 8FB0     		sub	sp, sp, #60
 457              		.cfi_def_cfa_offset 64
 455:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 458              		.loc 1 455 3 view .LVU124
 455:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 459              		.loc 1 455 26 is_stmt 0 view .LVU125
 460 0004 0023     		movs	r3, #0
 461 0006 0A93     		str	r3, [sp, #40]
 462 0008 0B93     		str	r3, [sp, #44]
 463 000a 0C93     		str	r3, [sp, #48]
 464 000c 0D93     		str	r3, [sp, #52]
 456:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 465              		.loc 1 456 3 is_stmt 1 view .LVU126
 456:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 466              		.loc 1 456 27 is_stmt 0 view .LVU127
 467 000e 0893     		str	r3, [sp, #32]
 468 0010 0993     		str	r3, [sp, #36]
 457:Core/Src/main.c **** 
 469              		.loc 1 457 3 is_stmt 1 view .LVU128
 457:Core/Src/main.c **** 
 470              		.loc 1 457 22 is_stmt 0 view .LVU129
 471 0012 0193     		str	r3, [sp, #4]
 472 0014 0293     		str	r3, [sp, #8]
 473 0016 0393     		str	r3, [sp, #12]
 474 0018 0493     		str	r3, [sp, #16]
ARM GAS  C:\Temp\cciZdTos.s 			page 28


 475 001a 0593     		str	r3, [sp, #20]
 476 001c 0693     		str	r3, [sp, #24]
 477 001e 0793     		str	r3, [sp, #28]
 462:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 478              		.loc 1 462 3 is_stmt 1 view .LVU130
 462:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 479              		.loc 1 462 18 is_stmt 0 view .LVU131
 480 0020 1E48     		ldr	r0, .L23
 481 0022 4FF08042 		mov	r2, #1073741824
 482 0026 0260     		str	r2, [r0]
 463:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 483              		.loc 1 463 3 is_stmt 1 view .LVU132
 463:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 484              		.loc 1 463 24 is_stmt 0 view .LVU133
 485 0028 4360     		str	r3, [r0, #4]
 464:Core/Src/main.c ****   htim2.Init.Period = 104;
 486              		.loc 1 464 3 is_stmt 1 view .LVU134
 464:Core/Src/main.c ****   htim2.Init.Period = 104;
 487              		.loc 1 464 26 is_stmt 0 view .LVU135
 488 002a 8360     		str	r3, [r0, #8]
 465:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 489              		.loc 1 465 3 is_stmt 1 view .LVU136
 465:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 490              		.loc 1 465 21 is_stmt 0 view .LVU137
 491 002c 6822     		movs	r2, #104
 492 002e C260     		str	r2, [r0, #12]
 466:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 493              		.loc 1 466 3 is_stmt 1 view .LVU138
 466:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 494              		.loc 1 466 28 is_stmt 0 view .LVU139
 495 0030 0361     		str	r3, [r0, #16]
 467:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 496              		.loc 1 467 3 is_stmt 1 view .LVU140
 467:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 497              		.loc 1 467 32 is_stmt 0 view .LVU141
 498 0032 8361     		str	r3, [r0, #24]
 468:Core/Src/main.c ****   {
 499              		.loc 1 468 3 is_stmt 1 view .LVU142
 468:Core/Src/main.c ****   {
 500              		.loc 1 468 7 is_stmt 0 view .LVU143
 501 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 502              	.LVL18:
 468:Core/Src/main.c ****   {
 503              		.loc 1 468 6 view .LVU144
 504 0038 28BB     		cbnz	r0, .L18
 472:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 505              		.loc 1 472 3 is_stmt 1 view .LVU145
 472:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 506              		.loc 1 472 34 is_stmt 0 view .LVU146
 507 003a 4FF48053 		mov	r3, #4096
 508 003e 0A93     		str	r3, [sp, #40]
 473:Core/Src/main.c ****   {
 509              		.loc 1 473 3 is_stmt 1 view .LVU147
 473:Core/Src/main.c ****   {
 510              		.loc 1 473 7 is_stmt 0 view .LVU148
 511 0040 0AA9     		add	r1, sp, #40
 512 0042 1648     		ldr	r0, .L23
ARM GAS  C:\Temp\cciZdTos.s 			page 29


 513 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 514              	.LVL19:
 473:Core/Src/main.c ****   {
 515              		.loc 1 473 6 view .LVU149
 516 0048 F8B9     		cbnz	r0, .L19
 477:Core/Src/main.c ****   {
 517              		.loc 1 477 3 is_stmt 1 view .LVU150
 477:Core/Src/main.c ****   {
 518              		.loc 1 477 7 is_stmt 0 view .LVU151
 519 004a 1448     		ldr	r0, .L23
 520 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 521              	.LVL20:
 477:Core/Src/main.c ****   {
 522              		.loc 1 477 6 view .LVU152
 523 0050 E8B9     		cbnz	r0, .L20
 481:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 524              		.loc 1 481 3 is_stmt 1 view .LVU153
 481:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 525              		.loc 1 481 37 is_stmt 0 view .LVU154
 526 0052 0023     		movs	r3, #0
 527 0054 0893     		str	r3, [sp, #32]
 482:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 528              		.loc 1 482 3 is_stmt 1 view .LVU155
 482:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 529              		.loc 1 482 33 is_stmt 0 view .LVU156
 530 0056 0993     		str	r3, [sp, #36]
 483:Core/Src/main.c ****   {
 531              		.loc 1 483 3 is_stmt 1 view .LVU157
 483:Core/Src/main.c ****   {
 532              		.loc 1 483 7 is_stmt 0 view .LVU158
 533 0058 08A9     		add	r1, sp, #32
 534 005a 1048     		ldr	r0, .L23
 535 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 536              	.LVL21:
 483:Core/Src/main.c ****   {
 537              		.loc 1 483 6 view .LVU159
 538 0060 B8B9     		cbnz	r0, .L21
 487:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 539              		.loc 1 487 3 is_stmt 1 view .LVU160
 487:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 540              		.loc 1 487 20 is_stmt 0 view .LVU161
 541 0062 6023     		movs	r3, #96
 542 0064 0193     		str	r3, [sp, #4]
 488:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 543              		.loc 1 488 3 is_stmt 1 view .LVU162
 488:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 544              		.loc 1 488 19 is_stmt 0 view .LVU163
 545 0066 0023     		movs	r3, #0
 546 0068 0293     		str	r3, [sp, #8]
 489:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 547              		.loc 1 489 3 is_stmt 1 view .LVU164
 489:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 548              		.loc 1 489 24 is_stmt 0 view .LVU165
 549 006a 0393     		str	r3, [sp, #12]
 490:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 550              		.loc 1 490 3 is_stmt 1 view .LVU166
 490:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
ARM GAS  C:\Temp\cciZdTos.s 			page 30


 551              		.loc 1 490 24 is_stmt 0 view .LVU167
 552 006c 0593     		str	r3, [sp, #20]
 491:Core/Src/main.c ****   {
 553              		.loc 1 491 3 is_stmt 1 view .LVU168
 491:Core/Src/main.c ****   {
 554              		.loc 1 491 7 is_stmt 0 view .LVU169
 555 006e 0822     		movs	r2, #8
 556 0070 01A9     		add	r1, sp, #4
 557 0072 0A48     		ldr	r0, .L23
 558 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 559              	.LVL22:
 491:Core/Src/main.c ****   {
 560              		.loc 1 491 6 view .LVU170
 561 0078 68B9     		cbnz	r0, .L22
 498:Core/Src/main.c **** 
 562              		.loc 1 498 3 is_stmt 1 view .LVU171
 563 007a 0848     		ldr	r0, .L23
 564 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 565              	.LVL23:
 500:Core/Src/main.c **** 
 566              		.loc 1 500 1 is_stmt 0 view .LVU172
 567 0080 0FB0     		add	sp, sp, #60
 568              		.cfi_remember_state
 569              		.cfi_def_cfa_offset 4
 570              		@ sp needed
 571 0082 5DF804FB 		ldr	pc, [sp], #4
 572              	.L18:
 573              		.cfi_restore_state
 470:Core/Src/main.c ****   }
 574              		.loc 1 470 5 is_stmt 1 view .LVU173
 575 0086 FFF7FEFF 		bl	Error_Handler
 576              	.LVL24:
 577              	.L19:
 475:Core/Src/main.c ****   }
 578              		.loc 1 475 5 view .LVU174
 579 008a FFF7FEFF 		bl	Error_Handler
 580              	.LVL25:
 581              	.L20:
 479:Core/Src/main.c ****   }
 582              		.loc 1 479 5 view .LVU175
 583 008e FFF7FEFF 		bl	Error_Handler
 584              	.LVL26:
 585              	.L21:
 485:Core/Src/main.c ****   }
 586              		.loc 1 485 5 view .LVU176
 587 0092 FFF7FEFF 		bl	Error_Handler
 588              	.LVL27:
 589              	.L22:
 493:Core/Src/main.c ****   }
 590              		.loc 1 493 5 view .LVU177
 591 0096 FFF7FEFF 		bl	Error_Handler
 592              	.LVL28:
 593              	.L24:
 594 009a 00BF     		.align	2
 595              	.L23:
 596 009c 00000000 		.word	htim2
 597              		.cfi_endproc
ARM GAS  C:\Temp\cciZdTos.s 			page 31


 598              	.LFE241:
 600              		.section	.text.MX_UART4_Init,"ax",%progbits
 601              		.align	1
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	MX_UART4_Init:
 607              	.LFB247:
 748:Core/Src/main.c **** 
 608              		.loc 1 748 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612 0000 08B5     		push	{r3, lr}
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 757:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 616              		.loc 1 757 3 view .LVU179
 757:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 617              		.loc 1 757 19 is_stmt 0 view .LVU180
 618 0002 0A48     		ldr	r0, .L29
 619 0004 0A4B     		ldr	r3, .L29+4
 620 0006 0360     		str	r3, [r0]
 758:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 621              		.loc 1 758 3 is_stmt 1 view .LVU181
 758:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 622              		.loc 1 758 24 is_stmt 0 view .LVU182
 623 0008 4FF41653 		mov	r3, #9600
 624 000c 4360     		str	r3, [r0, #4]
 759:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 625              		.loc 1 759 3 is_stmt 1 view .LVU183
 759:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 626              		.loc 1 759 26 is_stmt 0 view .LVU184
 627 000e 0023     		movs	r3, #0
 628 0010 8360     		str	r3, [r0, #8]
 760:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 629              		.loc 1 760 3 is_stmt 1 view .LVU185
 760:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 630              		.loc 1 760 24 is_stmt 0 view .LVU186
 631 0012 C360     		str	r3, [r0, #12]
 761:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 632              		.loc 1 761 3 is_stmt 1 view .LVU187
 761:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 633              		.loc 1 761 22 is_stmt 0 view .LVU188
 634 0014 0361     		str	r3, [r0, #16]
 762:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 635              		.loc 1 762 3 is_stmt 1 view .LVU189
 762:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 636              		.loc 1 762 20 is_stmt 0 view .LVU190
 637 0016 0C22     		movs	r2, #12
 638 0018 4261     		str	r2, [r0, #20]
 763:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 639              		.loc 1 763 3 is_stmt 1 view .LVU191
 763:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 640              		.loc 1 763 25 is_stmt 0 view .LVU192
 641 001a 8361     		str	r3, [r0, #24]
ARM GAS  C:\Temp\cciZdTos.s 			page 32


 764:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 642              		.loc 1 764 3 is_stmt 1 view .LVU193
 764:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 643              		.loc 1 764 28 is_stmt 0 view .LVU194
 644 001c C361     		str	r3, [r0, #28]
 765:Core/Src/main.c ****   {
 645              		.loc 1 765 3 is_stmt 1 view .LVU195
 765:Core/Src/main.c ****   {
 646              		.loc 1 765 7 is_stmt 0 view .LVU196
 647 001e FFF7FEFF 		bl	HAL_UART_Init
 648              	.LVL29:
 765:Core/Src/main.c ****   {
 649              		.loc 1 765 6 view .LVU197
 650 0022 00B9     		cbnz	r0, .L28
 773:Core/Src/main.c **** 
 651              		.loc 1 773 1 view .LVU198
 652 0024 08BD     		pop	{r3, pc}
 653              	.L28:
 767:Core/Src/main.c ****   }
 654              		.loc 1 767 5 is_stmt 1 view .LVU199
 655 0026 FFF7FEFF 		bl	Error_Handler
 656              	.LVL30:
 657              	.L30:
 658 002a 00BF     		.align	2
 659              	.L29:
 660 002c 00000000 		.word	huart4
 661 0030 004C0040 		.word	1073761280
 662              		.cfi_endproc
 663              	.LFE247:
 665              		.section	.text.MX_I2C1_Init,"ax",%progbits
 666              		.align	1
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	MX_I2C1_Init:
 672              	.LFB238:
 310:Core/Src/main.c **** 
 673              		.loc 1 310 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677 0000 08B5     		push	{r3, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 3, -8
 680              		.cfi_offset 14, -4
 319:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 681              		.loc 1 319 3 view .LVU201
 319:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 682              		.loc 1 319 18 is_stmt 0 view .LVU202
 683 0002 0A48     		ldr	r0, .L35
 684 0004 0A4B     		ldr	r3, .L35+4
 685 0006 0360     		str	r3, [r0]
 320:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 686              		.loc 1 320 3 is_stmt 1 view .LVU203
 320:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 687              		.loc 1 320 25 is_stmt 0 view .LVU204
 688 0008 0A4B     		ldr	r3, .L35+8
ARM GAS  C:\Temp\cciZdTos.s 			page 33


 689 000a 4360     		str	r3, [r0, #4]
 321:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 690              		.loc 1 321 3 is_stmt 1 view .LVU205
 321:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 691              		.loc 1 321 24 is_stmt 0 view .LVU206
 692 000c 0023     		movs	r3, #0
 693 000e 8360     		str	r3, [r0, #8]
 322:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 694              		.loc 1 322 3 is_stmt 1 view .LVU207
 322:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 695              		.loc 1 322 26 is_stmt 0 view .LVU208
 696 0010 C360     		str	r3, [r0, #12]
 323:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 697              		.loc 1 323 3 is_stmt 1 view .LVU209
 323:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 698              		.loc 1 323 29 is_stmt 0 view .LVU210
 699 0012 4FF48042 		mov	r2, #16384
 700 0016 0261     		str	r2, [r0, #16]
 324:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 701              		.loc 1 324 3 is_stmt 1 view .LVU211
 324:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 702              		.loc 1 324 30 is_stmt 0 view .LVU212
 703 0018 4361     		str	r3, [r0, #20]
 325:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 704              		.loc 1 325 3 is_stmt 1 view .LVU213
 325:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 705              		.loc 1 325 26 is_stmt 0 view .LVU214
 706 001a 8361     		str	r3, [r0, #24]
 326:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 707              		.loc 1 326 3 is_stmt 1 view .LVU215
 326:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 708              		.loc 1 326 30 is_stmt 0 view .LVU216
 709 001c C361     		str	r3, [r0, #28]
 327:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 710              		.loc 1 327 3 is_stmt 1 view .LVU217
 327:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 711              		.loc 1 327 28 is_stmt 0 view .LVU218
 712 001e 0362     		str	r3, [r0, #32]
 328:Core/Src/main.c ****   {
 713              		.loc 1 328 3 is_stmt 1 view .LVU219
 328:Core/Src/main.c ****   {
 714              		.loc 1 328 7 is_stmt 0 view .LVU220
 715 0020 FFF7FEFF 		bl	HAL_I2C_Init
 716              	.LVL31:
 328:Core/Src/main.c ****   {
 717              		.loc 1 328 6 view .LVU221
 718 0024 00B9     		cbnz	r0, .L34
 336:Core/Src/main.c **** 
 719              		.loc 1 336 1 view .LVU222
 720 0026 08BD     		pop	{r3, pc}
 721              	.L34:
 330:Core/Src/main.c ****   }
 722              		.loc 1 330 5 is_stmt 1 view .LVU223
 723 0028 FFF7FEFF 		bl	Error_Handler
 724              	.LVL32:
 725              	.L36:
 726              		.align	2
ARM GAS  C:\Temp\cciZdTos.s 			page 34


 727              	.L35:
 728 002c 00000000 		.word	hi2c1
 729 0030 00540040 		.word	1073763328
 730 0034 A0860100 		.word	100000
 731              		.cfi_endproc
 732              	.LFE238:
 734              		.section	.text.MX_ADC1_Init,"ax",%progbits
 735              		.align	1
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	MX_ADC1_Init:
 741              	.LFB237:
 231:Core/Src/main.c **** 
 742              		.loc 1 231 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746 0000 00B5     		push	{lr}
 747              		.cfi_def_cfa_offset 4
 748              		.cfi_offset 14, -4
 749 0002 85B0     		sub	sp, sp, #20
 750              		.cfi_def_cfa_offset 24
 237:Core/Src/main.c **** 
 751              		.loc 1 237 3 view .LVU225
 237:Core/Src/main.c **** 
 752              		.loc 1 237 26 is_stmt 0 view .LVU226
 753 0004 0023     		movs	r3, #0
 754 0006 0093     		str	r3, [sp]
 755 0008 0193     		str	r3, [sp, #4]
 756 000a 0293     		str	r3, [sp, #8]
 757 000c 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 758              		.loc 1 245 3 is_stmt 1 view .LVU227
 245:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 759              		.loc 1 245 18 is_stmt 0 view .LVU228
 760 000e 2548     		ldr	r0, .L49
 761 0010 254A     		ldr	r2, .L49+4
 762 0012 0260     		str	r2, [r0]
 246:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 763              		.loc 1 246 3 is_stmt 1 view .LVU229
 246:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 764              		.loc 1 246 29 is_stmt 0 view .LVU230
 765 0014 4FF44032 		mov	r2, #196608
 766 0018 4260     		str	r2, [r0, #4]
 247:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 767              		.loc 1 247 3 is_stmt 1 view .LVU231
 247:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 768              		.loc 1 247 25 is_stmt 0 view .LVU232
 769 001a 8360     		str	r3, [r0, #8]
 248:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 770              		.loc 1 248 3 is_stmt 1 view .LVU233
 248:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 771              		.loc 1 248 27 is_stmt 0 view .LVU234
 772 001c 0122     		movs	r2, #1
 773 001e 0261     		str	r2, [r0, #16]
 249:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Temp\cciZdTos.s 			page 35


 774              		.loc 1 249 3 is_stmt 1 view .LVU235
 249:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 775              		.loc 1 249 33 is_stmt 0 view .LVU236
 776 0020 0276     		strb	r2, [r0, #24]
 250:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 777              		.loc 1 250 3 is_stmt 1 view .LVU237
 250:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 778              		.loc 1 250 36 is_stmt 0 view .LVU238
 779 0022 80F82030 		strb	r3, [r0, #32]
 251:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 780              		.loc 1 251 3 is_stmt 1 view .LVU239
 251:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 781              		.loc 1 251 35 is_stmt 0 view .LVU240
 782 0026 C362     		str	r3, [r0, #44]
 252:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 783              		.loc 1 252 3 is_stmt 1 view .LVU241
 252:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 784              		.loc 1 252 31 is_stmt 0 view .LVU242
 785 0028 2049     		ldr	r1, .L49+8
 786 002a 8162     		str	r1, [r0, #40]
 253:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 787              		.loc 1 253 3 is_stmt 1 view .LVU243
 253:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 788              		.loc 1 253 24 is_stmt 0 view .LVU244
 789 002c C360     		str	r3, [r0, #12]
 254:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 790              		.loc 1 254 3 is_stmt 1 view .LVU245
 254:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 791              		.loc 1 254 30 is_stmt 0 view .LVU246
 792 002e 0423     		movs	r3, #4
 793 0030 C361     		str	r3, [r0, #28]
 255:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 794              		.loc 1 255 3 is_stmt 1 view .LVU247
 255:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 795              		.loc 1 255 36 is_stmt 0 view .LVU248
 796 0032 80F83020 		strb	r2, [r0, #48]
 256:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 797              		.loc 1 256 3 is_stmt 1 view .LVU249
 256:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 798              		.loc 1 256 27 is_stmt 0 view .LVU250
 799 0036 4261     		str	r2, [r0, #20]
 257:Core/Src/main.c ****   {
 800              		.loc 1 257 3 is_stmt 1 view .LVU251
 257:Core/Src/main.c ****   {
 801              		.loc 1 257 7 is_stmt 0 view .LVU252
 802 0038 FFF7FEFF 		bl	HAL_ADC_Init
 803              	.LVL33:
 257:Core/Src/main.c ****   {
 804              		.loc 1 257 6 view .LVU253
 805 003c 38BB     		cbnz	r0, .L44
 264:Core/Src/main.c ****   sConfig.Rank = 1;
 806              		.loc 1 264 3 is_stmt 1 view .LVU254
 264:Core/Src/main.c ****   sConfig.Rank = 1;
 807              		.loc 1 264 19 is_stmt 0 view .LVU255
 808 003e 0023     		movs	r3, #0
 809 0040 0093     		str	r3, [sp]
 265:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
ARM GAS  C:\Temp\cciZdTos.s 			page 36


 810              		.loc 1 265 3 is_stmt 1 view .LVU256
 265:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 811              		.loc 1 265 16 is_stmt 0 view .LVU257
 812 0042 0122     		movs	r2, #1
 813 0044 0192     		str	r2, [sp, #4]
 266:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 814              		.loc 1 266 3 is_stmt 1 view .LVU258
 266:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 815              		.loc 1 266 24 is_stmt 0 view .LVU259
 816 0046 0293     		str	r3, [sp, #8]
 267:Core/Src/main.c ****   {
 817              		.loc 1 267 3 is_stmt 1 view .LVU260
 267:Core/Src/main.c ****   {
 818              		.loc 1 267 7 is_stmt 0 view .LVU261
 819 0048 6946     		mov	r1, sp
 820 004a 1648     		ldr	r0, .L49
 821 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 822              	.LVL34:
 267:Core/Src/main.c ****   {
 823              		.loc 1 267 6 view .LVU262
 824 0050 F8B9     		cbnz	r0, .L45
 274:Core/Src/main.c ****   sConfig.Rank = 2;
 825              		.loc 1 274 3 is_stmt 1 view .LVU263
 274:Core/Src/main.c ****   sConfig.Rank = 2;
 826              		.loc 1 274 19 is_stmt 0 view .LVU264
 827 0052 0123     		movs	r3, #1
 828 0054 0093     		str	r3, [sp]
 275:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 829              		.loc 1 275 3 is_stmt 1 view .LVU265
 275:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 830              		.loc 1 275 16 is_stmt 0 view .LVU266
 831 0056 0223     		movs	r3, #2
 832 0058 0193     		str	r3, [sp, #4]
 276:Core/Src/main.c ****   {
 833              		.loc 1 276 3 is_stmt 1 view .LVU267
 276:Core/Src/main.c ****   {
 834              		.loc 1 276 7 is_stmt 0 view .LVU268
 835 005a 6946     		mov	r1, sp
 836 005c 1148     		ldr	r0, .L49
 837 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 838              	.LVL35:
 276:Core/Src/main.c ****   {
 839              		.loc 1 276 6 view .LVU269
 840 0062 C0B9     		cbnz	r0, .L46
 283:Core/Src/main.c ****   sConfig.Rank = 3;
 841              		.loc 1 283 3 is_stmt 1 view .LVU270
 283:Core/Src/main.c ****   sConfig.Rank = 3;
 842              		.loc 1 283 19 is_stmt 0 view .LVU271
 843 0064 0223     		movs	r3, #2
 844 0066 0093     		str	r3, [sp]
 284:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 845              		.loc 1 284 3 is_stmt 1 view .LVU272
 284:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 846              		.loc 1 284 16 is_stmt 0 view .LVU273
 847 0068 0323     		movs	r3, #3
 848 006a 0193     		str	r3, [sp, #4]
 285:Core/Src/main.c ****   {
ARM GAS  C:\Temp\cciZdTos.s 			page 37


 849              		.loc 1 285 3 is_stmt 1 view .LVU274
 285:Core/Src/main.c ****   {
 850              		.loc 1 285 7 is_stmt 0 view .LVU275
 851 006c 6946     		mov	r1, sp
 852 006e 0D48     		ldr	r0, .L49
 853 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 854              	.LVL36:
 285:Core/Src/main.c ****   {
 855              		.loc 1 285 6 view .LVU276
 856 0074 88B9     		cbnz	r0, .L47
 292:Core/Src/main.c ****   sConfig.Rank = 4;
 857              		.loc 1 292 3 is_stmt 1 view .LVU277
 292:Core/Src/main.c ****   sConfig.Rank = 4;
 858              		.loc 1 292 19 is_stmt 0 view .LVU278
 859 0076 0323     		movs	r3, #3
 860 0078 0093     		str	r3, [sp]
 293:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 861              		.loc 1 293 3 is_stmt 1 view .LVU279
 293:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 862              		.loc 1 293 16 is_stmt 0 view .LVU280
 863 007a 0423     		movs	r3, #4
 864 007c 0193     		str	r3, [sp, #4]
 294:Core/Src/main.c ****   {
 865              		.loc 1 294 3 is_stmt 1 view .LVU281
 294:Core/Src/main.c ****   {
 866              		.loc 1 294 7 is_stmt 0 view .LVU282
 867 007e 6946     		mov	r1, sp
 868 0080 0848     		ldr	r0, .L49
 869 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 870              	.LVL37:
 294:Core/Src/main.c ****   {
 871              		.loc 1 294 6 view .LVU283
 872 0086 50B9     		cbnz	r0, .L48
 302:Core/Src/main.c **** 
 873              		.loc 1 302 1 view .LVU284
 874 0088 05B0     		add	sp, sp, #20
 875              		.cfi_remember_state
 876              		.cfi_def_cfa_offset 4
 877              		@ sp needed
 878 008a 5DF804FB 		ldr	pc, [sp], #4
 879              	.L44:
 880              		.cfi_restore_state
 259:Core/Src/main.c ****   }
 881              		.loc 1 259 5 is_stmt 1 view .LVU285
 882 008e FFF7FEFF 		bl	Error_Handler
 883              	.LVL38:
 884              	.L45:
 269:Core/Src/main.c ****   }
 885              		.loc 1 269 5 view .LVU286
 886 0092 FFF7FEFF 		bl	Error_Handler
 887              	.LVL39:
 888              	.L46:
 278:Core/Src/main.c ****   }
 889              		.loc 1 278 5 view .LVU287
 890 0096 FFF7FEFF 		bl	Error_Handler
 891              	.LVL40:
 892              	.L47:
ARM GAS  C:\Temp\cciZdTos.s 			page 38


 287:Core/Src/main.c ****   }
 893              		.loc 1 287 5 view .LVU288
 894 009a FFF7FEFF 		bl	Error_Handler
 895              	.LVL41:
 896              	.L48:
 296:Core/Src/main.c ****   }
 897              		.loc 1 296 5 view .LVU289
 898 009e FFF7FEFF 		bl	Error_Handler
 899              	.LVL42:
 900              	.L50:
 901 00a2 00BF     		.align	2
 902              	.L49:
 903 00a4 00000000 		.word	hadc1
 904 00a8 00200140 		.word	1073815552
 905 00ac 0100000F 		.word	251658241
 906              		.cfi_endproc
 907              	.LFE237:
 909              		.section	.text.MX_TIM7_Init,"ax",%progbits
 910              		.align	1
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 915              	MX_TIM7_Init:
 916              	.LFB246:
 707:Core/Src/main.c **** 
 917              		.loc 1 707 1 view -0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921 0000 00B5     		push	{lr}
 922              		.cfi_def_cfa_offset 4
 923              		.cfi_offset 14, -4
 924 0002 83B0     		sub	sp, sp, #12
 925              		.cfi_def_cfa_offset 16
 713:Core/Src/main.c **** 
 926              		.loc 1 713 3 view .LVU291
 713:Core/Src/main.c **** 
 927              		.loc 1 713 27 is_stmt 0 view .LVU292
 928 0004 0023     		movs	r3, #0
 929 0006 0093     		str	r3, [sp]
 930 0008 0193     		str	r3, [sp, #4]
 721:Core/Src/main.c ****   htim7.Init.Prescaler = (8400/3/60)-1;
 931              		.loc 1 721 3 is_stmt 1 view .LVU293
 721:Core/Src/main.c ****   htim7.Init.Prescaler = (8400/3/60)-1;
 932              		.loc 1 721 18 is_stmt 0 view .LVU294
 933 000a 0E48     		ldr	r0, .L57
 934 000c 0E4A     		ldr	r2, .L57+4
 935 000e 0260     		str	r2, [r0]
 722:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 936              		.loc 1 722 3 is_stmt 1 view .LVU295
 722:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 937              		.loc 1 722 24 is_stmt 0 view .LVU296
 938 0010 2D22     		movs	r2, #45
 939 0012 4260     		str	r2, [r0, #4]
 723:Core/Src/main.c ****   htim7.Init.Period = 10000-1;
 940              		.loc 1 723 3 is_stmt 1 view .LVU297
 723:Core/Src/main.c ****   htim7.Init.Period = 10000-1;
ARM GAS  C:\Temp\cciZdTos.s 			page 39


 941              		.loc 1 723 26 is_stmt 0 view .LVU298
 942 0014 8360     		str	r3, [r0, #8]
 724:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 943              		.loc 1 724 3 is_stmt 1 view .LVU299
 724:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 944              		.loc 1 724 21 is_stmt 0 view .LVU300
 945 0016 42F20F72 		movw	r2, #9999
 946 001a C260     		str	r2, [r0, #12]
 725:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 947              		.loc 1 725 3 is_stmt 1 view .LVU301
 725:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 948              		.loc 1 725 32 is_stmt 0 view .LVU302
 949 001c 8361     		str	r3, [r0, #24]
 726:Core/Src/main.c ****   {
 950              		.loc 1 726 3 is_stmt 1 view .LVU303
 726:Core/Src/main.c ****   {
 951              		.loc 1 726 7 is_stmt 0 view .LVU304
 952 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 953              	.LVL43:
 726:Core/Src/main.c ****   {
 954              		.loc 1 726 6 view .LVU305
 955 0022 50B9     		cbnz	r0, .L55
 730:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 956              		.loc 1 730 3 is_stmt 1 view .LVU306
 730:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 957              		.loc 1 730 37 is_stmt 0 view .LVU307
 958 0024 0023     		movs	r3, #0
 959 0026 0093     		str	r3, [sp]
 731:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 960              		.loc 1 731 3 is_stmt 1 view .LVU308
 731:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 961              		.loc 1 731 33 is_stmt 0 view .LVU309
 962 0028 0193     		str	r3, [sp, #4]
 732:Core/Src/main.c ****   {
 963              		.loc 1 732 3 is_stmt 1 view .LVU310
 732:Core/Src/main.c ****   {
 964              		.loc 1 732 7 is_stmt 0 view .LVU311
 965 002a 6946     		mov	r1, sp
 966 002c 0548     		ldr	r0, .L57
 967 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 968              	.LVL44:
 732:Core/Src/main.c ****   {
 969              		.loc 1 732 6 view .LVU312
 970 0032 20B9     		cbnz	r0, .L56
 740:Core/Src/main.c **** 
 971              		.loc 1 740 1 view .LVU313
 972 0034 03B0     		add	sp, sp, #12
 973              		.cfi_remember_state
 974              		.cfi_def_cfa_offset 4
 975              		@ sp needed
 976 0036 5DF804FB 		ldr	pc, [sp], #4
 977              	.L55:
 978              		.cfi_restore_state
 728:Core/Src/main.c ****   }
 979              		.loc 1 728 5 is_stmt 1 view .LVU314
 980 003a FFF7FEFF 		bl	Error_Handler
 981              	.LVL45:
ARM GAS  C:\Temp\cciZdTos.s 			page 40


 982              	.L56:
 734:Core/Src/main.c ****   }
 983              		.loc 1 734 5 view .LVU315
 984 003e FFF7FEFF 		bl	Error_Handler
 985              	.LVL46:
 986              	.L58:
 987 0042 00BF     		.align	2
 988              	.L57:
 989 0044 00000000 		.word	htim7
 990 0048 00140040 		.word	1073746944
 991              		.cfi_endproc
 992              	.LFE246:
 994              		.section	.text.MX_TIM6_Init,"ax",%progbits
 995              		.align	1
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	MX_TIM6_Init:
 1001              	.LFB245:
 669:Core/Src/main.c **** 
 1002              		.loc 1 669 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006 0000 00B5     		push	{lr}
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 14, -4
 1009 0002 83B0     		sub	sp, sp, #12
 1010              		.cfi_def_cfa_offset 16
 675:Core/Src/main.c **** 
 1011              		.loc 1 675 3 view .LVU317
 675:Core/Src/main.c **** 
 1012              		.loc 1 675 27 is_stmt 0 view .LVU318
 1013 0004 0023     		movs	r3, #0
 1014 0006 0093     		str	r3, [sp]
 1015 0008 0193     		str	r3, [sp, #4]
 680:Core/Src/main.c ****   htim6.Init.Prescaler = 8400-1;
 1016              		.loc 1 680 3 is_stmt 1 view .LVU319
 680:Core/Src/main.c ****   htim6.Init.Prescaler = 8400-1;
 1017              		.loc 1 680 18 is_stmt 0 view .LVU320
 1018 000a 0E48     		ldr	r0, .L65
 1019 000c 0E4A     		ldr	r2, .L65+4
 1020 000e 0260     		str	r2, [r0]
 681:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 1021              		.loc 1 681 3 is_stmt 1 view .LVU321
 681:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 1022              		.loc 1 681 24 is_stmt 0 view .LVU322
 1023 0010 42F2CF02 		movw	r2, #8399
 1024 0014 4260     		str	r2, [r0, #4]
 682:Core/Src/main.c ****   htim6.Init.Period = 10000-1;
 1025              		.loc 1 682 3 is_stmt 1 view .LVU323
 682:Core/Src/main.c ****   htim6.Init.Period = 10000-1;
 1026              		.loc 1 682 26 is_stmt 0 view .LVU324
 1027 0016 8360     		str	r3, [r0, #8]
 683:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1028              		.loc 1 683 3 is_stmt 1 view .LVU325
 683:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Temp\cciZdTos.s 			page 41


 1029              		.loc 1 683 21 is_stmt 0 view .LVU326
 1030 0018 42F20F72 		movw	r2, #9999
 1031 001c C260     		str	r2, [r0, #12]
 684:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 1032              		.loc 1 684 3 is_stmt 1 view .LVU327
 684:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 1033              		.loc 1 684 32 is_stmt 0 view .LVU328
 1034 001e 8361     		str	r3, [r0, #24]
 685:Core/Src/main.c ****   {
 1035              		.loc 1 685 3 is_stmt 1 view .LVU329
 685:Core/Src/main.c ****   {
 1036              		.loc 1 685 7 is_stmt 0 view .LVU330
 1037 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1038              	.LVL47:
 685:Core/Src/main.c ****   {
 1039              		.loc 1 685 6 view .LVU331
 1040 0024 50B9     		cbnz	r0, .L63
 689:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1041              		.loc 1 689 3 is_stmt 1 view .LVU332
 689:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1042              		.loc 1 689 37 is_stmt 0 view .LVU333
 1043 0026 0023     		movs	r3, #0
 1044 0028 0093     		str	r3, [sp]
 690:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 1045              		.loc 1 690 3 is_stmt 1 view .LVU334
 690:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 1046              		.loc 1 690 33 is_stmt 0 view .LVU335
 1047 002a 0193     		str	r3, [sp, #4]
 691:Core/Src/main.c ****   {
 1048              		.loc 1 691 3 is_stmt 1 view .LVU336
 691:Core/Src/main.c ****   {
 1049              		.loc 1 691 7 is_stmt 0 view .LVU337
 1050 002c 6946     		mov	r1, sp
 1051 002e 0548     		ldr	r0, .L65
 1052 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1053              	.LVL48:
 691:Core/Src/main.c ****   {
 1054              		.loc 1 691 6 view .LVU338
 1055 0034 20B9     		cbnz	r0, .L64
 699:Core/Src/main.c **** 
 1056              		.loc 1 699 1 view .LVU339
 1057 0036 03B0     		add	sp, sp, #12
 1058              		.cfi_remember_state
 1059              		.cfi_def_cfa_offset 4
 1060              		@ sp needed
 1061 0038 5DF804FB 		ldr	pc, [sp], #4
 1062              	.L63:
 1063              		.cfi_restore_state
 687:Core/Src/main.c ****   }
 1064              		.loc 1 687 5 is_stmt 1 view .LVU340
 1065 003c FFF7FEFF 		bl	Error_Handler
 1066              	.LVL49:
 1067              	.L64:
 693:Core/Src/main.c ****   }
 1068              		.loc 1 693 5 view .LVU341
 1069 0040 FFF7FEFF 		bl	Error_Handler
 1070              	.LVL50:
ARM GAS  C:\Temp\cciZdTos.s 			page 42


 1071              	.L66:
 1072              		.align	2
 1073              	.L65:
 1074 0044 00000000 		.word	htim6
 1075 0048 00100040 		.word	1073745920
 1076              		.cfi_endproc
 1077              	.LFE245:
 1079              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1080              		.align	1
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1085              	MX_I2C2_Init:
 1086              	.LFB239:
 344:Core/Src/main.c **** 
 1087              		.loc 1 344 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 08B5     		push	{r3, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 353:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1095              		.loc 1 353 3 view .LVU343
 353:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1096              		.loc 1 353 18 is_stmt 0 view .LVU344
 1097 0002 0A48     		ldr	r0, .L71
 1098 0004 0A4B     		ldr	r3, .L71+4
 1099 0006 0360     		str	r3, [r0]
 354:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1100              		.loc 1 354 3 is_stmt 1 view .LVU345
 354:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1101              		.loc 1 354 25 is_stmt 0 view .LVU346
 1102 0008 0A4B     		ldr	r3, .L71+8
 1103 000a 4360     		str	r3, [r0, #4]
 355:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1104              		.loc 1 355 3 is_stmt 1 view .LVU347
 355:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1105              		.loc 1 355 24 is_stmt 0 view .LVU348
 1106 000c 0023     		movs	r3, #0
 1107 000e 8360     		str	r3, [r0, #8]
 356:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1108              		.loc 1 356 3 is_stmt 1 view .LVU349
 356:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1109              		.loc 1 356 26 is_stmt 0 view .LVU350
 1110 0010 C360     		str	r3, [r0, #12]
 357:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1111              		.loc 1 357 3 is_stmt 1 view .LVU351
 357:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1112              		.loc 1 357 29 is_stmt 0 view .LVU352
 1113 0012 4FF48042 		mov	r2, #16384
 1114 0016 0261     		str	r2, [r0, #16]
 358:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1115              		.loc 1 358 3 is_stmt 1 view .LVU353
 358:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1116              		.loc 1 358 30 is_stmt 0 view .LVU354
ARM GAS  C:\Temp\cciZdTos.s 			page 43


 1117 0018 4361     		str	r3, [r0, #20]
 359:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1118              		.loc 1 359 3 is_stmt 1 view .LVU355
 359:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1119              		.loc 1 359 26 is_stmt 0 view .LVU356
 1120 001a 8361     		str	r3, [r0, #24]
 360:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1121              		.loc 1 360 3 is_stmt 1 view .LVU357
 360:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1122              		.loc 1 360 30 is_stmt 0 view .LVU358
 1123 001c C361     		str	r3, [r0, #28]
 361:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1124              		.loc 1 361 3 is_stmt 1 view .LVU359
 361:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1125              		.loc 1 361 28 is_stmt 0 view .LVU360
 1126 001e 0362     		str	r3, [r0, #32]
 362:Core/Src/main.c ****   {
 1127              		.loc 1 362 3 is_stmt 1 view .LVU361
 362:Core/Src/main.c ****   {
 1128              		.loc 1 362 7 is_stmt 0 view .LVU362
 1129 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1130              	.LVL51:
 362:Core/Src/main.c ****   {
 1131              		.loc 1 362 6 view .LVU363
 1132 0024 00B9     		cbnz	r0, .L70
 370:Core/Src/main.c **** 
 1133              		.loc 1 370 1 view .LVU364
 1134 0026 08BD     		pop	{r3, pc}
 1135              	.L70:
 364:Core/Src/main.c ****   }
 1136              		.loc 1 364 5 is_stmt 1 view .LVU365
 1137 0028 FFF7FEFF 		bl	Error_Handler
 1138              	.LVL52:
 1139              	.L72:
 1140              		.align	2
 1141              	.L71:
 1142 002c 00000000 		.word	hi2c2
 1143 0030 00580040 		.word	1073764352
 1144 0034 A0860100 		.word	100000
 1145              		.cfi_endproc
 1146              	.LFE239:
 1148              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1149              		.align	1
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1154              	MX_TIM4_Init:
 1155              	.LFB243:
 579:Core/Src/main.c **** 
 1156              		.loc 1 579 1 view -0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 24
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160 0000 00B5     		push	{lr}
 1161              		.cfi_def_cfa_offset 4
 1162              		.cfi_offset 14, -4
 1163 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Temp\cciZdTos.s 			page 44


 1164              		.cfi_def_cfa_offset 32
 585:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1165              		.loc 1 585 3 view .LVU367
 585:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1166              		.loc 1 585 26 is_stmt 0 view .LVU368
 1167 0004 0023     		movs	r3, #0
 1168 0006 0293     		str	r3, [sp, #8]
 1169 0008 0393     		str	r3, [sp, #12]
 1170 000a 0493     		str	r3, [sp, #16]
 1171 000c 0593     		str	r3, [sp, #20]
 586:Core/Src/main.c **** 
 1172              		.loc 1 586 3 is_stmt 1 view .LVU369
 586:Core/Src/main.c **** 
 1173              		.loc 1 586 27 is_stmt 0 view .LVU370
 1174 000e 0093     		str	r3, [sp]
 1175 0010 0193     		str	r3, [sp, #4]
 591:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 1176              		.loc 1 591 3 is_stmt 1 view .LVU371
 591:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 1177              		.loc 1 591 18 is_stmt 0 view .LVU372
 1178 0012 1448     		ldr	r0, .L81
 1179 0014 144A     		ldr	r2, .L81+4
 1180 0016 0260     		str	r2, [r0]
 592:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1181              		.loc 1 592 3 is_stmt 1 view .LVU373
 592:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1182              		.loc 1 592 24 is_stmt 0 view .LVU374
 1183 0018 42F20F72 		movw	r2, #9999
 1184 001c 4260     		str	r2, [r0, #4]
 593:Core/Src/main.c ****   htim4.Init.Period = 8400;
 1185              		.loc 1 593 3 is_stmt 1 view .LVU375
 593:Core/Src/main.c ****   htim4.Init.Period = 8400;
 1186              		.loc 1 593 26 is_stmt 0 view .LVU376
 1187 001e 8360     		str	r3, [r0, #8]
 594:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1188              		.loc 1 594 3 is_stmt 1 view .LVU377
 594:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1189              		.loc 1 594 21 is_stmt 0 view .LVU378
 1190 0020 42F2D002 		movw	r2, #8400
 1191 0024 C260     		str	r2, [r0, #12]
 595:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1192              		.loc 1 595 3 is_stmt 1 view .LVU379
 595:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1193              		.loc 1 595 28 is_stmt 0 view .LVU380
 1194 0026 0361     		str	r3, [r0, #16]
 596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1195              		.loc 1 596 3 is_stmt 1 view .LVU381
 596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1196              		.loc 1 596 32 is_stmt 0 view .LVU382
 1197 0028 8023     		movs	r3, #128
 1198 002a 8361     		str	r3, [r0, #24]
 597:Core/Src/main.c ****   {
 1199              		.loc 1 597 3 is_stmt 1 view .LVU383
 597:Core/Src/main.c ****   {
 1200              		.loc 1 597 7 is_stmt 0 view .LVU384
 1201 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1202              	.LVL53:
ARM GAS  C:\Temp\cciZdTos.s 			page 45


 597:Core/Src/main.c ****   {
 1203              		.loc 1 597 6 view .LVU385
 1204 0030 90B9     		cbnz	r0, .L78
 601:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1205              		.loc 1 601 3 is_stmt 1 view .LVU386
 601:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1206              		.loc 1 601 34 is_stmt 0 view .LVU387
 1207 0032 4FF48053 		mov	r3, #4096
 1208 0036 0293     		str	r3, [sp, #8]
 602:Core/Src/main.c ****   {
 1209              		.loc 1 602 3 is_stmt 1 view .LVU388
 602:Core/Src/main.c ****   {
 1210              		.loc 1 602 7 is_stmt 0 view .LVU389
 1211 0038 02A9     		add	r1, sp, #8
 1212 003a 0A48     		ldr	r0, .L81
 1213 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1214              	.LVL54:
 602:Core/Src/main.c ****   {
 1215              		.loc 1 602 6 view .LVU390
 1216 0040 60B9     		cbnz	r0, .L79
 606:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1217              		.loc 1 606 3 is_stmt 1 view .LVU391
 606:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1218              		.loc 1 606 37 is_stmt 0 view .LVU392
 1219 0042 0023     		movs	r3, #0
 1220 0044 0093     		str	r3, [sp]
 607:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1221              		.loc 1 607 3 is_stmt 1 view .LVU393
 607:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1222              		.loc 1 607 33 is_stmt 0 view .LVU394
 1223 0046 0193     		str	r3, [sp, #4]
 608:Core/Src/main.c ****   {
 1224              		.loc 1 608 3 is_stmt 1 view .LVU395
 608:Core/Src/main.c ****   {
 1225              		.loc 1 608 7 is_stmt 0 view .LVU396
 1226 0048 6946     		mov	r1, sp
 1227 004a 0648     		ldr	r0, .L81
 1228 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1229              	.LVL55:
 608:Core/Src/main.c ****   {
 1230              		.loc 1 608 6 view .LVU397
 1231 0050 30B9     		cbnz	r0, .L80
 616:Core/Src/main.c **** 
 1232              		.loc 1 616 1 view .LVU398
 1233 0052 07B0     		add	sp, sp, #28
 1234              		.cfi_remember_state
 1235              		.cfi_def_cfa_offset 4
 1236              		@ sp needed
 1237 0054 5DF804FB 		ldr	pc, [sp], #4
 1238              	.L78:
 1239              		.cfi_restore_state
 599:Core/Src/main.c ****   }
 1240              		.loc 1 599 5 is_stmt 1 view .LVU399
 1241 0058 FFF7FEFF 		bl	Error_Handler
 1242              	.LVL56:
 1243              	.L79:
 604:Core/Src/main.c ****   }
ARM GAS  C:\Temp\cciZdTos.s 			page 46


 1244              		.loc 1 604 5 view .LVU400
 1245 005c FFF7FEFF 		bl	Error_Handler
 1246              	.LVL57:
 1247              	.L80:
 610:Core/Src/main.c ****   }
 1248              		.loc 1 610 5 view .LVU401
 1249 0060 FFF7FEFF 		bl	Error_Handler
 1250              	.LVL58:
 1251              	.L82:
 1252              		.align	2
 1253              	.L81:
 1254 0064 00000000 		.word	htim4
 1255 0068 00080040 		.word	1073743872
 1256              		.cfi_endproc
 1257              	.LFE243:
 1259              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1260              		.align	1
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1265              	MX_TIM1_Init:
 1266              	.LFB240:
 378:Core/Src/main.c **** 
 1267              		.loc 1 378 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 40
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 00B5     		push	{lr}
 1272              		.cfi_def_cfa_offset 4
 1273              		.cfi_offset 14, -4
 1274 0002 8BB0     		sub	sp, sp, #44
 1275              		.cfi_def_cfa_offset 48
 384:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1276              		.loc 1 384 3 view .LVU403
 384:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1277              		.loc 1 384 26 is_stmt 0 view .LVU404
 1278 0004 0023     		movs	r3, #0
 1279 0006 0693     		str	r3, [sp, #24]
 1280 0008 0793     		str	r3, [sp, #28]
 1281 000a 0893     		str	r3, [sp, #32]
 1282 000c 0993     		str	r3, [sp, #36]
 385:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 1283              		.loc 1 385 3 is_stmt 1 view .LVU405
 385:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 1284              		.loc 1 385 27 is_stmt 0 view .LVU406
 1285 000e 0493     		str	r3, [sp, #16]
 1286 0010 0593     		str	r3, [sp, #20]
 386:Core/Src/main.c **** 
 1287              		.loc 1 386 3 is_stmt 1 view .LVU407
 386:Core/Src/main.c **** 
 1288              		.loc 1 386 22 is_stmt 0 view .LVU408
 1289 0012 0093     		str	r3, [sp]
 1290 0014 0193     		str	r3, [sp, #4]
 1291 0016 0293     		str	r3, [sp, #8]
 1292 0018 0393     		str	r3, [sp, #12]
 391:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1293              		.loc 1 391 3 is_stmt 1 view .LVU409
ARM GAS  C:\Temp\cciZdTos.s 			page 47


 391:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1294              		.loc 1 391 18 is_stmt 0 view .LVU410
 1295 001a 2948     		ldr	r0, .L101
 1296 001c 294A     		ldr	r2, .L101+4
 1297 001e 0260     		str	r2, [r0]
 392:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1298              		.loc 1 392 3 is_stmt 1 view .LVU411
 392:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1299              		.loc 1 392 24 is_stmt 0 view .LVU412
 1300 0020 4360     		str	r3, [r0, #4]
 393:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1301              		.loc 1 393 3 is_stmt 1 view .LVU413
 393:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1302              		.loc 1 393 26 is_stmt 0 view .LVU414
 1303 0022 8360     		str	r3, [r0, #8]
 394:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1304              		.loc 1 394 3 is_stmt 1 view .LVU415
 394:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1305              		.loc 1 394 21 is_stmt 0 view .LVU416
 1306 0024 4FF6FF72 		movw	r2, #65535
 1307 0028 C260     		str	r2, [r0, #12]
 395:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1308              		.loc 1 395 3 is_stmt 1 view .LVU417
 395:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1309              		.loc 1 395 28 is_stmt 0 view .LVU418
 1310 002a 0361     		str	r3, [r0, #16]
 396:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1311              		.loc 1 396 3 is_stmt 1 view .LVU419
 396:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1312              		.loc 1 396 32 is_stmt 0 view .LVU420
 1313 002c 4361     		str	r3, [r0, #20]
 397:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1314              		.loc 1 397 3 is_stmt 1 view .LVU421
 397:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1315              		.loc 1 397 32 is_stmt 0 view .LVU422
 1316 002e 8361     		str	r3, [r0, #24]
 398:Core/Src/main.c ****   {
 1317              		.loc 1 398 3 is_stmt 1 view .LVU423
 398:Core/Src/main.c ****   {
 1318              		.loc 1 398 7 is_stmt 0 view .LVU424
 1319 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1320              	.LVL59:
 398:Core/Src/main.c ****   {
 1321              		.loc 1 398 6 view .LVU425
 1322 0034 0028     		cmp	r0, #0
 1323 0036 33D1     		bne	.L93
 402:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1324              		.loc 1 402 3 is_stmt 1 view .LVU426
 402:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1325              		.loc 1 402 34 is_stmt 0 view .LVU427
 1326 0038 4FF48053 		mov	r3, #4096
 1327 003c 0693     		str	r3, [sp, #24]
 403:Core/Src/main.c ****   {
 1328              		.loc 1 403 3 is_stmt 1 view .LVU428
 403:Core/Src/main.c ****   {
 1329              		.loc 1 403 7 is_stmt 0 view .LVU429
 1330 003e 06A9     		add	r1, sp, #24
ARM GAS  C:\Temp\cciZdTos.s 			page 48


 1331 0040 1F48     		ldr	r0, .L101
 1332 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1333              	.LVL60:
 403:Core/Src/main.c ****   {
 1334              		.loc 1 403 6 view .LVU430
 1335 0046 68BB     		cbnz	r0, .L94
 407:Core/Src/main.c ****   {
 1336              		.loc 1 407 3 is_stmt 1 view .LVU431
 407:Core/Src/main.c ****   {
 1337              		.loc 1 407 7 is_stmt 0 view .LVU432
 1338 0048 1D48     		ldr	r0, .L101
 1339 004a FFF7FEFF 		bl	HAL_TIM_IC_Init
 1340              	.LVL61:
 407:Core/Src/main.c ****   {
 1341              		.loc 1 407 6 view .LVU433
 1342 004e 58BB     		cbnz	r0, .L95
 411:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1343              		.loc 1 411 3 is_stmt 1 view .LVU434
 411:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1344              		.loc 1 411 37 is_stmt 0 view .LVU435
 1345 0050 0023     		movs	r3, #0
 1346 0052 0493     		str	r3, [sp, #16]
 412:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1347              		.loc 1 412 3 is_stmt 1 view .LVU436
 412:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1348              		.loc 1 412 33 is_stmt 0 view .LVU437
 1349 0054 0593     		str	r3, [sp, #20]
 413:Core/Src/main.c ****   {
 1350              		.loc 1 413 3 is_stmt 1 view .LVU438
 413:Core/Src/main.c ****   {
 1351              		.loc 1 413 7 is_stmt 0 view .LVU439
 1352 0056 04A9     		add	r1, sp, #16
 1353 0058 1948     		ldr	r0, .L101
 1354 005a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1355              	.LVL62:
 413:Core/Src/main.c ****   {
 1356              		.loc 1 413 6 view .LVU440
 1357 005e 28BB     		cbnz	r0, .L96
 417:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 1358              		.loc 1 417 3 is_stmt 1 view .LVU441
 417:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 1359              		.loc 1 417 24 is_stmt 0 view .LVU442
 1360 0060 0022     		movs	r2, #0
 1361 0062 0092     		str	r2, [sp]
 418:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 1362              		.loc 1 418 3 is_stmt 1 view .LVU443
 418:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 1363              		.loc 1 418 25 is_stmt 0 view .LVU444
 1364 0064 0123     		movs	r3, #1
 1365 0066 0193     		str	r3, [sp, #4]
 419:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 1366              		.loc 1 419 3 is_stmt 1 view .LVU445
 419:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 1367              		.loc 1 419 25 is_stmt 0 view .LVU446
 1368 0068 0292     		str	r2, [sp, #8]
 420:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 1369              		.loc 1 420 3 is_stmt 1 view .LVU447
ARM GAS  C:\Temp\cciZdTos.s 			page 49


 420:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 1370              		.loc 1 420 22 is_stmt 0 view .LVU448
 1371 006a 0392     		str	r2, [sp, #12]
 421:Core/Src/main.c ****   {
 1372              		.loc 1 421 3 is_stmt 1 view .LVU449
 421:Core/Src/main.c ****   {
 1373              		.loc 1 421 7 is_stmt 0 view .LVU450
 1374 006c 6946     		mov	r1, sp
 1375 006e 1448     		ldr	r0, .L101
 1376 0070 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 1377              	.LVL63:
 421:Core/Src/main.c ****   {
 1378              		.loc 1 421 6 view .LVU451
 1379 0074 E0B9     		cbnz	r0, .L97
 425:Core/Src/main.c ****   {
 1380              		.loc 1 425 3 is_stmt 1 view .LVU452
 425:Core/Src/main.c ****   {
 1381              		.loc 1 425 7 is_stmt 0 view .LVU453
 1382 0076 0422     		movs	r2, #4
 1383 0078 6946     		mov	r1, sp
 1384 007a 1148     		ldr	r0, .L101
 1385 007c FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 1386              	.LVL64:
 425:Core/Src/main.c ****   {
 1387              		.loc 1 425 6 view .LVU454
 1388 0080 C0B9     		cbnz	r0, .L98
 429:Core/Src/main.c ****   {
 1389              		.loc 1 429 3 is_stmt 1 view .LVU455
 429:Core/Src/main.c ****   {
 1390              		.loc 1 429 7 is_stmt 0 view .LVU456
 1391 0082 0822     		movs	r2, #8
 1392 0084 6946     		mov	r1, sp
 1393 0086 0E48     		ldr	r0, .L101
 1394 0088 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 1395              	.LVL65:
 429:Core/Src/main.c ****   {
 1396              		.loc 1 429 6 view .LVU457
 1397 008c A0B9     		cbnz	r0, .L99
 433:Core/Src/main.c ****   {
 1398              		.loc 1 433 3 is_stmt 1 view .LVU458
 433:Core/Src/main.c ****   {
 1399              		.loc 1 433 7 is_stmt 0 view .LVU459
 1400 008e 0C22     		movs	r2, #12
 1401 0090 6946     		mov	r1, sp
 1402 0092 0B48     		ldr	r0, .L101
 1403 0094 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 1404              	.LVL66:
 433:Core/Src/main.c ****   {
 1405              		.loc 1 433 6 view .LVU460
 1406 0098 80B9     		cbnz	r0, .L100
 441:Core/Src/main.c **** 
 1407              		.loc 1 441 1 view .LVU461
 1408 009a 0BB0     		add	sp, sp, #44
 1409              		.cfi_remember_state
 1410              		.cfi_def_cfa_offset 4
 1411              		@ sp needed
 1412 009c 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Temp\cciZdTos.s 			page 50


 1413              	.L93:
 1414              		.cfi_restore_state
 400:Core/Src/main.c ****   }
 1415              		.loc 1 400 5 is_stmt 1 view .LVU462
 1416 00a0 FFF7FEFF 		bl	Error_Handler
 1417              	.LVL67:
 1418              	.L94:
 405:Core/Src/main.c ****   }
 1419              		.loc 1 405 5 view .LVU463
 1420 00a4 FFF7FEFF 		bl	Error_Handler
 1421              	.LVL68:
 1422              	.L95:
 409:Core/Src/main.c ****   }
 1423              		.loc 1 409 5 view .LVU464
 1424 00a8 FFF7FEFF 		bl	Error_Handler
 1425              	.LVL69:
 1426              	.L96:
 415:Core/Src/main.c ****   }
 1427              		.loc 1 415 5 view .LVU465
 1428 00ac FFF7FEFF 		bl	Error_Handler
 1429              	.LVL70:
 1430              	.L97:
 423:Core/Src/main.c ****   }
 1431              		.loc 1 423 5 view .LVU466
 1432 00b0 FFF7FEFF 		bl	Error_Handler
 1433              	.LVL71:
 1434              	.L98:
 427:Core/Src/main.c ****   }
 1435              		.loc 1 427 5 view .LVU467
 1436 00b4 FFF7FEFF 		bl	Error_Handler
 1437              	.LVL72:
 1438              	.L99:
 431:Core/Src/main.c ****   }
 1439              		.loc 1 431 5 view .LVU468
 1440 00b8 FFF7FEFF 		bl	Error_Handler
 1441              	.LVL73:
 1442              	.L100:
 435:Core/Src/main.c ****   }
 1443              		.loc 1 435 5 view .LVU469
 1444 00bc FFF7FEFF 		bl	Error_Handler
 1445              	.LVL74:
 1446              	.L102:
 1447              		.align	2
 1448              	.L101:
 1449 00c0 00000000 		.word	htim1
 1450 00c4 00000140 		.word	1073807360
 1451              		.cfi_endproc
 1452              	.LFE240:
 1454              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1455              		.align	1
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1460              	MX_TIM3_Init:
 1461              	.LFB242:
 508:Core/Src/main.c **** 
 1462              		.loc 1 508 1 view -0
ARM GAS  C:\Temp\cciZdTos.s 			page 51


 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 56
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 00B5     		push	{lr}
 1467              		.cfi_def_cfa_offset 4
 1468              		.cfi_offset 14, -4
 1469 0002 8FB0     		sub	sp, sp, #60
 1470              		.cfi_def_cfa_offset 64
 514:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1471              		.loc 1 514 3 view .LVU471
 514:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1472              		.loc 1 514 26 is_stmt 0 view .LVU472
 1473 0004 0023     		movs	r3, #0
 1474 0006 0A93     		str	r3, [sp, #40]
 1475 0008 0B93     		str	r3, [sp, #44]
 1476 000a 0C93     		str	r3, [sp, #48]
 1477 000c 0D93     		str	r3, [sp, #52]
 515:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1478              		.loc 1 515 3 is_stmt 1 view .LVU473
 515:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1479              		.loc 1 515 27 is_stmt 0 view .LVU474
 1480 000e 0893     		str	r3, [sp, #32]
 1481 0010 0993     		str	r3, [sp, #36]
 516:Core/Src/main.c **** 
 1482              		.loc 1 516 3 is_stmt 1 view .LVU475
 516:Core/Src/main.c **** 
 1483              		.loc 1 516 22 is_stmt 0 view .LVU476
 1484 0012 0193     		str	r3, [sp, #4]
 1485 0014 0293     		str	r3, [sp, #8]
 1486 0016 0393     		str	r3, [sp, #12]
 1487 0018 0493     		str	r3, [sp, #16]
 1488 001a 0593     		str	r3, [sp, #20]
 1489 001c 0693     		str	r3, [sp, #24]
 1490 001e 0793     		str	r3, [sp, #28]
 521:Core/Src/main.c ****   htim3.Init.Prescaler = 83;
 1491              		.loc 1 521 3 is_stmt 1 view .LVU477
 521:Core/Src/main.c ****   htim3.Init.Prescaler = 83;
 1492              		.loc 1 521 18 is_stmt 0 view .LVU478
 1493 0020 2C48     		ldr	r0, .L121
 1494 0022 2D4A     		ldr	r2, .L121+4
 1495 0024 0260     		str	r2, [r0]
 522:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1496              		.loc 1 522 3 is_stmt 1 view .LVU479
 522:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1497              		.loc 1 522 24 is_stmt 0 view .LVU480
 1498 0026 5322     		movs	r2, #83
 1499 0028 4260     		str	r2, [r0, #4]
 523:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1500              		.loc 1 523 3 is_stmt 1 view .LVU481
 523:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1501              		.loc 1 523 26 is_stmt 0 view .LVU482
 1502 002a 8360     		str	r3, [r0, #8]
 524:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1503              		.loc 1 524 3 is_stmt 1 view .LVU483
 524:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1504              		.loc 1 524 21 is_stmt 0 view .LVU484
 1505 002c 44F61F62 		movw	r2, #19999
ARM GAS  C:\Temp\cciZdTos.s 			page 52


 1506 0030 C260     		str	r2, [r0, #12]
 525:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1507              		.loc 1 525 3 is_stmt 1 view .LVU485
 525:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1508              		.loc 1 525 28 is_stmt 0 view .LVU486
 1509 0032 0361     		str	r3, [r0, #16]
 526:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1510              		.loc 1 526 3 is_stmt 1 view .LVU487
 526:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1511              		.loc 1 526 32 is_stmt 0 view .LVU488
 1512 0034 8023     		movs	r3, #128
 1513 0036 8361     		str	r3, [r0, #24]
 527:Core/Src/main.c ****   {
 1514              		.loc 1 527 3 is_stmt 1 view .LVU489
 527:Core/Src/main.c ****   {
 1515              		.loc 1 527 7 is_stmt 0 view .LVU490
 1516 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1517              	.LVL75:
 527:Core/Src/main.c ****   {
 1518              		.loc 1 527 6 view .LVU491
 1519 003c 0028     		cmp	r0, #0
 1520 003e 39D1     		bne	.L113
 531:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1521              		.loc 1 531 3 is_stmt 1 view .LVU492
 531:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1522              		.loc 1 531 34 is_stmt 0 view .LVU493
 1523 0040 4FF48053 		mov	r3, #4096
 1524 0044 0A93     		str	r3, [sp, #40]
 532:Core/Src/main.c ****   {
 1525              		.loc 1 532 3 is_stmt 1 view .LVU494
 532:Core/Src/main.c ****   {
 1526              		.loc 1 532 7 is_stmt 0 view .LVU495
 1527 0046 0AA9     		add	r1, sp, #40
 1528 0048 2248     		ldr	r0, .L121
 1529 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1530              	.LVL76:
 532:Core/Src/main.c ****   {
 1531              		.loc 1 532 6 view .LVU496
 1532 004e 0028     		cmp	r0, #0
 1533 0050 32D1     		bne	.L114
 536:Core/Src/main.c ****   {
 1534              		.loc 1 536 3 is_stmt 1 view .LVU497
 536:Core/Src/main.c ****   {
 1535              		.loc 1 536 7 is_stmt 0 view .LVU498
 1536 0052 2048     		ldr	r0, .L121
 1537 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1538              	.LVL77:
 536:Core/Src/main.c ****   {
 1539              		.loc 1 536 6 view .LVU499
 1540 0058 0028     		cmp	r0, #0
 1541 005a 2FD1     		bne	.L115
 540:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1542              		.loc 1 540 3 is_stmt 1 view .LVU500
 540:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1543              		.loc 1 540 37 is_stmt 0 view .LVU501
 1544 005c 0023     		movs	r3, #0
 1545 005e 0893     		str	r3, [sp, #32]
ARM GAS  C:\Temp\cciZdTos.s 			page 53


 541:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1546              		.loc 1 541 3 is_stmt 1 view .LVU502
 541:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1547              		.loc 1 541 33 is_stmt 0 view .LVU503
 1548 0060 0993     		str	r3, [sp, #36]
 542:Core/Src/main.c ****   {
 1549              		.loc 1 542 3 is_stmt 1 view .LVU504
 542:Core/Src/main.c ****   {
 1550              		.loc 1 542 7 is_stmt 0 view .LVU505
 1551 0062 08A9     		add	r1, sp, #32
 1552 0064 1B48     		ldr	r0, .L121
 1553 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1554              	.LVL78:
 542:Core/Src/main.c ****   {
 1555              		.loc 1 542 6 view .LVU506
 1556 006a 48BB     		cbnz	r0, .L116
 546:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1557              		.loc 1 546 3 is_stmt 1 view .LVU507
 546:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1558              		.loc 1 546 20 is_stmt 0 view .LVU508
 1559 006c 6023     		movs	r3, #96
 1560 006e 0193     		str	r3, [sp, #4]
 547:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1561              		.loc 1 547 3 is_stmt 1 view .LVU509
 547:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1562              		.loc 1 547 19 is_stmt 0 view .LVU510
 1563 0070 0022     		movs	r2, #0
 1564 0072 0292     		str	r2, [sp, #8]
 548:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1565              		.loc 1 548 3 is_stmt 1 view .LVU511
 548:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1566              		.loc 1 548 24 is_stmt 0 view .LVU512
 1567 0074 0392     		str	r2, [sp, #12]
 549:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1568              		.loc 1 549 3 is_stmt 1 view .LVU513
 549:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1569              		.loc 1 549 24 is_stmt 0 view .LVU514
 1570 0076 0592     		str	r2, [sp, #20]
 550:Core/Src/main.c ****   {
 1571              		.loc 1 550 3 is_stmt 1 view .LVU515
 550:Core/Src/main.c ****   {
 1572              		.loc 1 550 7 is_stmt 0 view .LVU516
 1573 0078 01A9     		add	r1, sp, #4
 1574 007a 1648     		ldr	r0, .L121
 1575 007c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1576              	.LVL79:
 550:Core/Src/main.c ****   {
 1577              		.loc 1 550 6 view .LVU517
 1578 0080 00BB     		cbnz	r0, .L117
 554:Core/Src/main.c ****   {
 1579              		.loc 1 554 3 is_stmt 1 view .LVU518
 554:Core/Src/main.c ****   {
 1580              		.loc 1 554 7 is_stmt 0 view .LVU519
 1581 0082 0422     		movs	r2, #4
 1582 0084 0DEB0201 		add	r1, sp, r2
 1583 0088 1248     		ldr	r0, .L121
 1584 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  C:\Temp\cciZdTos.s 			page 54


 1585              	.LVL80:
 554:Core/Src/main.c ****   {
 1586              		.loc 1 554 6 view .LVU520
 1587 008e D8B9     		cbnz	r0, .L118
 558:Core/Src/main.c ****   {
 1588              		.loc 1 558 3 is_stmt 1 view .LVU521
 558:Core/Src/main.c ****   {
 1589              		.loc 1 558 7 is_stmt 0 view .LVU522
 1590 0090 0822     		movs	r2, #8
 1591 0092 01A9     		add	r1, sp, #4
 1592 0094 0F48     		ldr	r0, .L121
 1593 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1594              	.LVL81:
 558:Core/Src/main.c ****   {
 1595              		.loc 1 558 6 view .LVU523
 1596 009a B8B9     		cbnz	r0, .L119
 562:Core/Src/main.c ****   {
 1597              		.loc 1 562 3 is_stmt 1 view .LVU524
 562:Core/Src/main.c ****   {
 1598              		.loc 1 562 7 is_stmt 0 view .LVU525
 1599 009c 0C22     		movs	r2, #12
 1600 009e 01A9     		add	r1, sp, #4
 1601 00a0 0C48     		ldr	r0, .L121
 1602 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1603              	.LVL82:
 562:Core/Src/main.c ****   {
 1604              		.loc 1 562 6 view .LVU526
 1605 00a6 98B9     		cbnz	r0, .L120
 569:Core/Src/main.c **** 
 1606              		.loc 1 569 3 is_stmt 1 view .LVU527
 1607 00a8 0A48     		ldr	r0, .L121
 1608 00aa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1609              	.LVL83:
 571:Core/Src/main.c **** 
 1610              		.loc 1 571 1 is_stmt 0 view .LVU528
 1611 00ae 0FB0     		add	sp, sp, #60
 1612              		.cfi_remember_state
 1613              		.cfi_def_cfa_offset 4
 1614              		@ sp needed
 1615 00b0 5DF804FB 		ldr	pc, [sp], #4
 1616              	.L113:
 1617              		.cfi_restore_state
 529:Core/Src/main.c ****   }
 1618              		.loc 1 529 5 is_stmt 1 view .LVU529
 1619 00b4 FFF7FEFF 		bl	Error_Handler
 1620              	.LVL84:
 1621              	.L114:
 534:Core/Src/main.c ****   }
 1622              		.loc 1 534 5 view .LVU530
 1623 00b8 FFF7FEFF 		bl	Error_Handler
 1624              	.LVL85:
 1625              	.L115:
 538:Core/Src/main.c ****   }
 1626              		.loc 1 538 5 view .LVU531
 1627 00bc FFF7FEFF 		bl	Error_Handler
 1628              	.LVL86:
 1629              	.L116:
ARM GAS  C:\Temp\cciZdTos.s 			page 55


 544:Core/Src/main.c ****   }
 1630              		.loc 1 544 5 view .LVU532
 1631 00c0 FFF7FEFF 		bl	Error_Handler
 1632              	.LVL87:
 1633              	.L117:
 552:Core/Src/main.c ****   }
 1634              		.loc 1 552 5 view .LVU533
 1635 00c4 FFF7FEFF 		bl	Error_Handler
 1636              	.LVL88:
 1637              	.L118:
 556:Core/Src/main.c ****   }
 1638              		.loc 1 556 5 view .LVU534
 1639 00c8 FFF7FEFF 		bl	Error_Handler
 1640              	.LVL89:
 1641              	.L119:
 560:Core/Src/main.c ****   }
 1642              		.loc 1 560 5 view .LVU535
 1643 00cc FFF7FEFF 		bl	Error_Handler
 1644              	.LVL90:
 1645              	.L120:
 564:Core/Src/main.c ****   }
 1646              		.loc 1 564 5 view .LVU536
 1647 00d0 FFF7FEFF 		bl	Error_Handler
 1648              	.LVL91:
 1649              	.L122:
 1650              		.align	2
 1651              	.L121:
 1652 00d4 00000000 		.word	htim3
 1653 00d8 00040040 		.word	1073742848
 1654              		.cfi_endproc
 1655              	.LFE242:
 1657              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1658              		.align	1
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	MX_TIM5_Init:
 1664              	.LFB244:
 624:Core/Src/main.c **** 
 1665              		.loc 1 624 1 view -0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 24
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669 0000 00B5     		push	{lr}
 1670              		.cfi_def_cfa_offset 4
 1671              		.cfi_offset 14, -4
 1672 0002 87B0     		sub	sp, sp, #28
 1673              		.cfi_def_cfa_offset 32
 630:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1674              		.loc 1 630 3 view .LVU538
 630:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1675              		.loc 1 630 26 is_stmt 0 view .LVU539
 1676 0004 0023     		movs	r3, #0
 1677 0006 0293     		str	r3, [sp, #8]
 1678 0008 0393     		str	r3, [sp, #12]
 1679 000a 0493     		str	r3, [sp, #16]
 1680 000c 0593     		str	r3, [sp, #20]
ARM GAS  C:\Temp\cciZdTos.s 			page 56


 631:Core/Src/main.c **** 
 1681              		.loc 1 631 3 is_stmt 1 view .LVU540
 631:Core/Src/main.c **** 
 1682              		.loc 1 631 27 is_stmt 0 view .LVU541
 1683 000e 0093     		str	r3, [sp]
 1684 0010 0193     		str	r3, [sp, #4]
 636:Core/Src/main.c ****   htim5.Init.Prescaler = (8400/3/60)-1;
 1685              		.loc 1 636 3 is_stmt 1 view .LVU542
 636:Core/Src/main.c ****   htim5.Init.Prescaler = (8400/3/60)-1;
 1686              		.loc 1 636 18 is_stmt 0 view .LVU543
 1687 0012 1348     		ldr	r0, .L131
 1688 0014 134A     		ldr	r2, .L131+4
 1689 0016 0260     		str	r2, [r0]
 637:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1690              		.loc 1 637 3 is_stmt 1 view .LVU544
 637:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1691              		.loc 1 637 24 is_stmt 0 view .LVU545
 1692 0018 2D22     		movs	r2, #45
 1693 001a 4260     		str	r2, [r0, #4]
 638:Core/Src/main.c ****   htim5.Init.Period = 10000-1;
 1694              		.loc 1 638 3 is_stmt 1 view .LVU546
 638:Core/Src/main.c ****   htim5.Init.Period = 10000-1;
 1695              		.loc 1 638 26 is_stmt 0 view .LVU547
 1696 001c 8360     		str	r3, [r0, #8]
 639:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1697              		.loc 1 639 3 is_stmt 1 view .LVU548
 639:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1698              		.loc 1 639 21 is_stmt 0 view .LVU549
 1699 001e 42F20F72 		movw	r2, #9999
 1700 0022 C260     		str	r2, [r0, #12]
 640:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1701              		.loc 1 640 3 is_stmt 1 view .LVU550
 640:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1702              		.loc 1 640 28 is_stmt 0 view .LVU551
 1703 0024 0361     		str	r3, [r0, #16]
 641:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1704              		.loc 1 641 3 is_stmt 1 view .LVU552
 641:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1705              		.loc 1 641 32 is_stmt 0 view .LVU553
 1706 0026 8361     		str	r3, [r0, #24]
 642:Core/Src/main.c ****   {
 1707              		.loc 1 642 3 is_stmt 1 view .LVU554
 642:Core/Src/main.c ****   {
 1708              		.loc 1 642 7 is_stmt 0 view .LVU555
 1709 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1710              	.LVL92:
 642:Core/Src/main.c ****   {
 1711              		.loc 1 642 6 view .LVU556
 1712 002c 90B9     		cbnz	r0, .L128
 646:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1713              		.loc 1 646 3 is_stmt 1 view .LVU557
 646:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1714              		.loc 1 646 34 is_stmt 0 view .LVU558
 1715 002e 4FF48053 		mov	r3, #4096
 1716 0032 0293     		str	r3, [sp, #8]
 647:Core/Src/main.c ****   {
 1717              		.loc 1 647 3 is_stmt 1 view .LVU559
ARM GAS  C:\Temp\cciZdTos.s 			page 57


 647:Core/Src/main.c ****   {
 1718              		.loc 1 647 7 is_stmt 0 view .LVU560
 1719 0034 02A9     		add	r1, sp, #8
 1720 0036 0A48     		ldr	r0, .L131
 1721 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1722              	.LVL93:
 647:Core/Src/main.c ****   {
 1723              		.loc 1 647 6 view .LVU561
 1724 003c 60B9     		cbnz	r0, .L129
 651:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1725              		.loc 1 651 3 is_stmt 1 view .LVU562
 651:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1726              		.loc 1 651 37 is_stmt 0 view .LVU563
 1727 003e 0023     		movs	r3, #0
 1728 0040 0093     		str	r3, [sp]
 652:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1729              		.loc 1 652 3 is_stmt 1 view .LVU564
 652:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1730              		.loc 1 652 33 is_stmt 0 view .LVU565
 1731 0042 0193     		str	r3, [sp, #4]
 653:Core/Src/main.c ****   {
 1732              		.loc 1 653 3 is_stmt 1 view .LVU566
 653:Core/Src/main.c ****   {
 1733              		.loc 1 653 7 is_stmt 0 view .LVU567
 1734 0044 6946     		mov	r1, sp
 1735 0046 0648     		ldr	r0, .L131
 1736 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1737              	.LVL94:
 653:Core/Src/main.c ****   {
 1738              		.loc 1 653 6 view .LVU568
 1739 004c 30B9     		cbnz	r0, .L130
 661:Core/Src/main.c **** 
 1740              		.loc 1 661 1 view .LVU569
 1741 004e 07B0     		add	sp, sp, #28
 1742              		.cfi_remember_state
 1743              		.cfi_def_cfa_offset 4
 1744              		@ sp needed
 1745 0050 5DF804FB 		ldr	pc, [sp], #4
 1746              	.L128:
 1747              		.cfi_restore_state
 644:Core/Src/main.c ****   }
 1748              		.loc 1 644 5 is_stmt 1 view .LVU570
 1749 0054 FFF7FEFF 		bl	Error_Handler
 1750              	.LVL95:
 1751              	.L129:
 649:Core/Src/main.c ****   }
 1752              		.loc 1 649 5 view .LVU571
 1753 0058 FFF7FEFF 		bl	Error_Handler
 1754              	.LVL96:
 1755              	.L130:
 655:Core/Src/main.c ****   }
 1756              		.loc 1 655 5 view .LVU572
 1757 005c FFF7FEFF 		bl	Error_Handler
 1758              	.LVL97:
 1759              	.L132:
 1760              		.align	2
 1761              	.L131:
ARM GAS  C:\Temp\cciZdTos.s 			page 58


 1762 0060 00000000 		.word	htim5
 1763 0064 000C0040 		.word	1073744896
 1764              		.cfi_endproc
 1765              	.LFE244:
 1767              		.section	.text.SystemClock_Config,"ax",%progbits
 1768              		.align	1
 1769              		.global	SystemClock_Config
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1774              	SystemClock_Config:
 1775              	.LFB236:
 184:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1776              		.loc 1 184 1 view -0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 80
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780 0000 00B5     		push	{lr}
 1781              		.cfi_def_cfa_offset 4
 1782              		.cfi_offset 14, -4
 1783 0002 95B0     		sub	sp, sp, #84
 1784              		.cfi_def_cfa_offset 88
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1785              		.loc 1 185 3 view .LVU574
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1786              		.loc 1 185 22 is_stmt 0 view .LVU575
 1787 0004 3022     		movs	r2, #48
 1788 0006 0021     		movs	r1, #0
 1789 0008 08A8     		add	r0, sp, #32
 1790 000a FFF7FEFF 		bl	memset
 1791              	.LVL98:
 186:Core/Src/main.c **** 
 1792              		.loc 1 186 3 is_stmt 1 view .LVU576
 186:Core/Src/main.c **** 
 1793              		.loc 1 186 22 is_stmt 0 view .LVU577
 1794 000e 0023     		movs	r3, #0
 1795 0010 0393     		str	r3, [sp, #12]
 1796 0012 0493     		str	r3, [sp, #16]
 1797 0014 0593     		str	r3, [sp, #20]
 1798 0016 0693     		str	r3, [sp, #24]
 1799 0018 0793     		str	r3, [sp, #28]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1800              		.loc 1 190 3 is_stmt 1 view .LVU578
 1801              	.LBB15:
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1802              		.loc 1 190 3 view .LVU579
 1803 001a 0193     		str	r3, [sp, #4]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1804              		.loc 1 190 3 view .LVU580
 1805 001c 1E4A     		ldr	r2, .L139
 1806 001e 116C     		ldr	r1, [r2, #64]
 1807 0020 41F08051 		orr	r1, r1, #268435456
 1808 0024 1164     		str	r1, [r2, #64]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1809              		.loc 1 190 3 view .LVU581
 1810 0026 126C     		ldr	r2, [r2, #64]
 1811 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  C:\Temp\cciZdTos.s 			page 59


 1812 002c 0192     		str	r2, [sp, #4]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1813              		.loc 1 190 3 view .LVU582
 1814 002e 019A     		ldr	r2, [sp, #4]
 1815              	.LBE15:
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1816              		.loc 1 190 3 view .LVU583
 191:Core/Src/main.c **** 
 1817              		.loc 1 191 3 view .LVU584
 1818              	.LBB16:
 191:Core/Src/main.c **** 
 1819              		.loc 1 191 3 view .LVU585
 1820 0030 0293     		str	r3, [sp, #8]
 191:Core/Src/main.c **** 
 1821              		.loc 1 191 3 view .LVU586
 1822 0032 1A4A     		ldr	r2, .L139+4
 1823 0034 1168     		ldr	r1, [r2]
 1824 0036 41F48041 		orr	r1, r1, #16384
 1825 003a 1160     		str	r1, [r2]
 191:Core/Src/main.c **** 
 1826              		.loc 1 191 3 view .LVU587
 1827 003c 1268     		ldr	r2, [r2]
 1828 003e 02F48042 		and	r2, r2, #16384
 1829 0042 0292     		str	r2, [sp, #8]
 191:Core/Src/main.c **** 
 1830              		.loc 1 191 3 view .LVU588
 1831 0044 029A     		ldr	r2, [sp, #8]
 1832              	.LBE16:
 191:Core/Src/main.c **** 
 1833              		.loc 1 191 3 view .LVU589
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1834              		.loc 1 196 3 view .LVU590
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1835              		.loc 1 196 36 is_stmt 0 view .LVU591
 1836 0046 0222     		movs	r2, #2
 1837 0048 0892     		str	r2, [sp, #32]
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1838              		.loc 1 197 3 is_stmt 1 view .LVU592
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1839              		.loc 1 197 30 is_stmt 0 view .LVU593
 1840 004a 0121     		movs	r1, #1
 1841 004c 0B91     		str	r1, [sp, #44]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1842              		.loc 1 198 3 is_stmt 1 view .LVU594
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1843              		.loc 1 198 41 is_stmt 0 view .LVU595
 1844 004e 1021     		movs	r1, #16
 1845 0050 0C91     		str	r1, [sp, #48]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1846              		.loc 1 199 3 is_stmt 1 view .LVU596
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1847              		.loc 1 199 34 is_stmt 0 view .LVU597
 1848 0052 0E92     		str	r2, [sp, #56]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1849              		.loc 1 200 3 is_stmt 1 view .LVU598
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1850              		.loc 1 200 35 is_stmt 0 view .LVU599
ARM GAS  C:\Temp\cciZdTos.s 			page 60


 1851 0054 0F93     		str	r3, [sp, #60]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1852              		.loc 1 201 3 is_stmt 1 view .LVU600
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1853              		.loc 1 201 30 is_stmt 0 view .LVU601
 1854 0056 0823     		movs	r3, #8
 1855 0058 1093     		str	r3, [sp, #64]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1856              		.loc 1 202 3 is_stmt 1 view .LVU602
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1857              		.loc 1 202 30 is_stmt 0 view .LVU603
 1858 005a 5423     		movs	r3, #84
 1859 005c 1193     		str	r3, [sp, #68]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1860              		.loc 1 203 3 is_stmt 1 view .LVU604
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1861              		.loc 1 203 30 is_stmt 0 view .LVU605
 1862 005e 1292     		str	r2, [sp, #72]
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1863              		.loc 1 204 3 is_stmt 1 view .LVU606
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1864              		.loc 1 204 30 is_stmt 0 view .LVU607
 1865 0060 0423     		movs	r3, #4
 1866 0062 1393     		str	r3, [sp, #76]
 205:Core/Src/main.c ****   {
 1867              		.loc 1 205 3 is_stmt 1 view .LVU608
 205:Core/Src/main.c ****   {
 1868              		.loc 1 205 7 is_stmt 0 view .LVU609
 1869 0064 08A8     		add	r0, sp, #32
 1870 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1871              	.LVL99:
 205:Core/Src/main.c ****   {
 1872              		.loc 1 205 6 view .LVU610
 1873 006a 80B9     		cbnz	r0, .L137
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1874              		.loc 1 212 3 is_stmt 1 view .LVU611
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1875              		.loc 1 212 31 is_stmt 0 view .LVU612
 1876 006c 0F23     		movs	r3, #15
 1877 006e 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1878              		.loc 1 214 3 is_stmt 1 view .LVU613
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1879              		.loc 1 214 34 is_stmt 0 view .LVU614
 1880 0070 0221     		movs	r1, #2
 1881 0072 0491     		str	r1, [sp, #16]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1882              		.loc 1 215 3 is_stmt 1 view .LVU615
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1883              		.loc 1 215 35 is_stmt 0 view .LVU616
 1884 0074 0023     		movs	r3, #0
 1885 0076 0593     		str	r3, [sp, #20]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1886              		.loc 1 216 3 is_stmt 1 view .LVU617
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1887              		.loc 1 216 36 is_stmt 0 view .LVU618
 1888 0078 4FF48053 		mov	r3, #4096
ARM GAS  C:\Temp\cciZdTos.s 			page 61


 1889 007c 0693     		str	r3, [sp, #24]
 217:Core/Src/main.c **** 
 1890              		.loc 1 217 3 is_stmt 1 view .LVU619
 217:Core/Src/main.c **** 
 1891              		.loc 1 217 36 is_stmt 0 view .LVU620
 1892 007e 0793     		str	r3, [sp, #28]
 219:Core/Src/main.c ****   {
 1893              		.loc 1 219 3 is_stmt 1 view .LVU621
 219:Core/Src/main.c ****   {
 1894              		.loc 1 219 7 is_stmt 0 view .LVU622
 1895 0080 03A8     		add	r0, sp, #12
 1896 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1897              	.LVL100:
 219:Core/Src/main.c ****   {
 1898              		.loc 1 219 6 view .LVU623
 1899 0086 20B9     		cbnz	r0, .L138
 223:Core/Src/main.c **** 
 1900              		.loc 1 223 1 view .LVU624
 1901 0088 15B0     		add	sp, sp, #84
 1902              		.cfi_remember_state
 1903              		.cfi_def_cfa_offset 4
 1904              		@ sp needed
 1905 008a 5DF804FB 		ldr	pc, [sp], #4
 1906              	.L137:
 1907              		.cfi_restore_state
 207:Core/Src/main.c ****   }
 1908              		.loc 1 207 5 is_stmt 1 view .LVU625
 1909 008e FFF7FEFF 		bl	Error_Handler
 1910              	.LVL101:
 1911              	.L138:
 221:Core/Src/main.c ****   }
 1912              		.loc 1 221 5 view .LVU626
 1913 0092 FFF7FEFF 		bl	Error_Handler
 1914              	.LVL102:
 1915              	.L140:
 1916 0096 00BF     		.align	2
 1917              	.L139:
 1918 0098 00380240 		.word	1073887232
 1919 009c 00700040 		.word	1073770496
 1920              		.cfi_endproc
 1921              	.LFE236:
 1923              		.section	.text.main,"ax",%progbits
 1924              		.align	1
 1925              		.global	main
 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1930              	main:
 1931              	.LFB235:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1932              		.loc 1 119 1 view -0
 1933              		.cfi_startproc
 1934              		@ Volatile: function does not return.
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937 0000 08B5     		push	{r3, lr}
 1938              		.cfi_def_cfa_offset 8
ARM GAS  C:\Temp\cciZdTos.s 			page 62


 1939              		.cfi_offset 3, -8
 1940              		.cfi_offset 14, -4
 127:Core/Src/main.c **** 
 1941              		.loc 1 127 3 view .LVU628
 1942 0002 FFF7FEFF 		bl	HAL_Init
 1943              	.LVL103:
 134:Core/Src/main.c **** 
 1944              		.loc 1 134 3 view .LVU629
 1945 0006 FFF7FEFF 		bl	SystemClock_Config
 1946              	.LVL104:
 141:Core/Src/main.c ****   MX_DMA_Init();
 1947              		.loc 1 141 3 view .LVU630
 1948 000a FFF7FEFF 		bl	MX_GPIO_Init
 1949              	.LVL105:
 142:Core/Src/main.c ****   MX_TIM2_Init();
 1950              		.loc 1 142 3 view .LVU631
 1951 000e FFF7FEFF 		bl	MX_DMA_Init
 1952              	.LVL106:
 143:Core/Src/main.c ****   MX_UART4_Init();
 1953              		.loc 1 143 3 view .LVU632
 1954 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1955              	.LVL107:
 144:Core/Src/main.c ****   MX_I2C1_Init();
 1956              		.loc 1 144 3 view .LVU633
 1957 0016 FFF7FEFF 		bl	MX_UART4_Init
 1958              	.LVL108:
 145:Core/Src/main.c ****   MX_ADC1_Init();
 1959              		.loc 1 145 3 view .LVU634
 1960 001a FFF7FEFF 		bl	MX_I2C1_Init
 1961              	.LVL109:
 146:Core/Src/main.c ****   MX_TIM7_Init();
 1962              		.loc 1 146 3 view .LVU635
 1963 001e FFF7FEFF 		bl	MX_ADC1_Init
 1964              	.LVL110:
 147:Core/Src/main.c ****   MX_TIM6_Init();
 1965              		.loc 1 147 3 view .LVU636
 1966 0022 FFF7FEFF 		bl	MX_TIM7_Init
 1967              	.LVL111:
 148:Core/Src/main.c ****   MX_I2C2_Init();
 1968              		.loc 1 148 3 view .LVU637
 1969 0026 FFF7FEFF 		bl	MX_TIM6_Init
 1970              	.LVL112:
 149:Core/Src/main.c ****   MX_TIM4_Init();
 1971              		.loc 1 149 3 view .LVU638
 1972 002a FFF7FEFF 		bl	MX_I2C2_Init
 1973              	.LVL113:
 150:Core/Src/main.c ****   MX_TIM1_Init();
 1974              		.loc 1 150 3 view .LVU639
 1975 002e FFF7FEFF 		bl	MX_TIM4_Init
 1976              	.LVL114:
 151:Core/Src/main.c ****   MX_TIM3_Init();
 1977              		.loc 1 151 3 view .LVU640
 1978 0032 FFF7FEFF 		bl	MX_TIM1_Init
 1979              	.LVL115:
 152:Core/Src/main.c ****   MX_TIM5_Init();
 1980              		.loc 1 152 3 view .LVU641
 1981 0036 FFF7FEFF 		bl	MX_TIM3_Init
ARM GAS  C:\Temp\cciZdTos.s 			page 63


 1982              	.LVL116:
 153:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1983              		.loc 1 153 3 view .LVU642
 1984 003a FFF7FEFF 		bl	MX_TIM5_Init
 1985              	.LVL117:
 163:Core/Src/main.c **** 
 1986              		.loc 1 163 3 view .LVU643
 1987 003e FFF7FEFF 		bl	init_7SegDisplay
 1988              	.LVL118:
 165:Core/Src/main.c **** 
 1989              		.loc 1 165 3 view .LVU644
 1990 0042 FFF7FEFF 		bl	init_IMU
 1991              	.LVL119:
 1992              	.L142:
 167:Core/Src/main.c ****   {
 1993              		.loc 1 167 3 discriminator 1 view .LVU645
 170:Core/Src/main.c ****    HAL_Delay(200);
 1994              		.loc 1 170 4 discriminator 1 view .LVU646
 1995 0046 0120     		movs	r0, #1
 1996 0048 FFF7FEFF 		bl	readAccel
 1997              	.LVL120:
 1998 004c FFF7FEFF 		bl	setFloatNumber
 1999              	.LVL121:
 171:Core/Src/main.c ****   }
 2000              		.loc 1 171 4 discriminator 1 view .LVU647
 2001 0050 C820     		movs	r0, #200
 2002 0052 FFF7FEFF 		bl	HAL_Delay
 2003              	.LVL122:
 167:Core/Src/main.c ****   {
 2004              		.loc 1 167 9 discriminator 1 view .LVU648
 2005 0056 F6E7     		b	.L142
 2006              		.cfi_endproc
 2007              	.LFE235:
 2009              		.global	POTS
 2010              		.section	.bss.POTS,"aw",%nobits
 2011              		.align	2
 2014              	POTS:
 2015 0000 00000000 		.space	8
 2015      00000000 
 2016              		.global	huart4
 2017              		.section	.bss.huart4,"aw",%nobits
 2018              		.align	2
 2021              	huart4:
 2022 0000 00000000 		.space	68
 2022      00000000 
 2022      00000000 
 2022      00000000 
 2022      00000000 
 2023              		.global	hdma_tim3_ch4_up
 2024              		.section	.bss.hdma_tim3_ch4_up,"aw",%nobits
 2025              		.align	2
 2028              	hdma_tim3_ch4_up:
 2029 0000 00000000 		.space	96
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2029      00000000 
ARM GAS  C:\Temp\cciZdTos.s 			page 64


 2030              		.global	hdma_tim3_ch3
 2031              		.section	.bss.hdma_tim3_ch3,"aw",%nobits
 2032              		.align	2
 2035              	hdma_tim3_ch3:
 2036 0000 00000000 		.space	96
 2036      00000000 
 2036      00000000 
 2036      00000000 
 2036      00000000 
 2037              		.global	hdma_tim2_up_ch3
 2038              		.section	.bss.hdma_tim2_up_ch3,"aw",%nobits
 2039              		.align	2
 2042              	hdma_tim2_up_ch3:
 2043 0000 00000000 		.space	96
 2043      00000000 
 2043      00000000 
 2043      00000000 
 2043      00000000 
 2044              		.global	htim7
 2045              		.section	.bss.htim7,"aw",%nobits
 2046              		.align	2
 2049              	htim7:
 2050 0000 00000000 		.space	180
 2050      00000000 
 2050      00000000 
 2050      00000000 
 2050      00000000 
 2051              		.global	htim6
 2052              		.section	.bss.htim6,"aw",%nobits
 2053              		.align	2
 2056              	htim6:
 2057 0000 00000000 		.space	180
 2057      00000000 
 2057      00000000 
 2057      00000000 
 2057      00000000 
 2058              		.global	htim5
 2059              		.section	.bss.htim5,"aw",%nobits
 2060              		.align	2
 2063              	htim5:
 2064 0000 00000000 		.space	180
 2064      00000000 
 2064      00000000 
 2064      00000000 
 2064      00000000 
 2065              		.global	htim4
 2066              		.section	.bss.htim4,"aw",%nobits
 2067              		.align	2
 2070              	htim4:
 2071 0000 00000000 		.space	180
 2071      00000000 
 2071      00000000 
 2071      00000000 
 2071      00000000 
 2072              		.global	htim3
 2073              		.section	.bss.htim3,"aw",%nobits
 2074              		.align	2
ARM GAS  C:\Temp\cciZdTos.s 			page 65


 2077              	htim3:
 2078 0000 00000000 		.space	180
 2078      00000000 
 2078      00000000 
 2078      00000000 
 2078      00000000 
 2079              		.global	htim2
 2080              		.section	.bss.htim2,"aw",%nobits
 2081              		.align	2
 2084              	htim2:
 2085 0000 00000000 		.space	180
 2085      00000000 
 2085      00000000 
 2085      00000000 
 2085      00000000 
 2086              		.global	htim1
 2087              		.section	.bss.htim1,"aw",%nobits
 2088              		.align	2
 2091              	htim1:
 2092 0000 00000000 		.space	180
 2092      00000000 
 2092      00000000 
 2092      00000000 
 2092      00000000 
 2093              		.global	hdma_i2c1_rx
 2094              		.section	.bss.hdma_i2c1_rx,"aw",%nobits
 2095              		.align	2
 2098              	hdma_i2c1_rx:
 2099 0000 00000000 		.space	96
 2099      00000000 
 2099      00000000 
 2099      00000000 
 2099      00000000 
 2100              		.global	hi2c2
 2101              		.section	.bss.hi2c2,"aw",%nobits
 2102              		.align	2
 2105              	hi2c2:
 2106 0000 00000000 		.space	84
 2106      00000000 
 2106      00000000 
 2106      00000000 
 2106      00000000 
 2107              		.global	hi2c1
 2108              		.section	.bss.hi2c1,"aw",%nobits
 2109              		.align	2
 2112              	hi2c1:
 2113 0000 00000000 		.space	84
 2113      00000000 
 2113      00000000 
 2113      00000000 
 2113      00000000 
 2114              		.global	hdma_adc1
 2115              		.section	.bss.hdma_adc1,"aw",%nobits
 2116              		.align	2
 2119              	hdma_adc1:
 2120 0000 00000000 		.space	96
 2120      00000000 
ARM GAS  C:\Temp\cciZdTos.s 			page 66


 2120      00000000 
 2120      00000000 
 2120      00000000 
 2121              		.global	hadc1
 2122              		.section	.bss.hadc1,"aw",%nobits
 2123              		.align	2
 2126              	hadc1:
 2127 0000 00000000 		.space	72
 2127      00000000 
 2127      00000000 
 2127      00000000 
 2127      00000000 
 2128              		.text
 2129              	.Letext0:
 2130              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2131              		.file 4 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 2132              		.file 5 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 2133              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2134              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2135              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2136              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2137              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2138              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2139              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2140              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2141              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2142              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2143              		.file 16 "Core/Inc/IMU.h"
 2144              		.file 17 "Core/Inc/StepperMotor.h"
 2145              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2146              		.file 19 "Core/Inc/main.h"
 2147              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2148              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2149              		.file 22 "Core/Inc/7SegDisplay.h"
 2150              		.file 23 "<built-in>"
ARM GAS  C:\Temp\cciZdTos.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
  C:\Temp\cciZdTos.s:21     .text.MX_GPIO_Init:00000000 $t
  C:\Temp\cciZdTos.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
  C:\Temp\cciZdTos.s:281    .text.MX_GPIO_Init:00000134 $d
  C:\Temp\cciZdTos.s:290    .text.MX_DMA_Init:00000000 $t
  C:\Temp\cciZdTos.s:295    .text.MX_DMA_Init:00000000 MX_DMA_Init
  C:\Temp\cciZdTos.s:399    .text.MX_DMA_Init:00000084 $d
  C:\Temp\cciZdTos.s:404    .text.Error_Handler:00000000 $t
  C:\Temp\cciZdTos.s:410    .text.Error_Handler:00000000 Error_Handler
  C:\Temp\cciZdTos.s:442    .text.MX_TIM2_Init:00000000 $t
  C:\Temp\cciZdTos.s:447    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
  C:\Temp\cciZdTos.s:596    .text.MX_TIM2_Init:0000009c $d
  C:\Temp\cciZdTos.s:2084   .bss.htim2:00000000 htim2
  C:\Temp\cciZdTos.s:601    .text.MX_UART4_Init:00000000 $t
  C:\Temp\cciZdTos.s:606    .text.MX_UART4_Init:00000000 MX_UART4_Init
  C:\Temp\cciZdTos.s:660    .text.MX_UART4_Init:0000002c $d
  C:\Temp\cciZdTos.s:2021   .bss.huart4:00000000 huart4
  C:\Temp\cciZdTos.s:666    .text.MX_I2C1_Init:00000000 $t
  C:\Temp\cciZdTos.s:671    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
  C:\Temp\cciZdTos.s:728    .text.MX_I2C1_Init:0000002c $d
  C:\Temp\cciZdTos.s:2112   .bss.hi2c1:00000000 hi2c1
  C:\Temp\cciZdTos.s:735    .text.MX_ADC1_Init:00000000 $t
  C:\Temp\cciZdTos.s:740    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
  C:\Temp\cciZdTos.s:903    .text.MX_ADC1_Init:000000a4 $d
  C:\Temp\cciZdTos.s:2126   .bss.hadc1:00000000 hadc1
  C:\Temp\cciZdTos.s:910    .text.MX_TIM7_Init:00000000 $t
  C:\Temp\cciZdTos.s:915    .text.MX_TIM7_Init:00000000 MX_TIM7_Init
  C:\Temp\cciZdTos.s:989    .text.MX_TIM7_Init:00000044 $d
  C:\Temp\cciZdTos.s:2049   .bss.htim7:00000000 htim7
  C:\Temp\cciZdTos.s:995    .text.MX_TIM6_Init:00000000 $t
  C:\Temp\cciZdTos.s:1000   .text.MX_TIM6_Init:00000000 MX_TIM6_Init
  C:\Temp\cciZdTos.s:1074   .text.MX_TIM6_Init:00000044 $d
  C:\Temp\cciZdTos.s:2056   .bss.htim6:00000000 htim6
  C:\Temp\cciZdTos.s:1080   .text.MX_I2C2_Init:00000000 $t
  C:\Temp\cciZdTos.s:1085   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
  C:\Temp\cciZdTos.s:1142   .text.MX_I2C2_Init:0000002c $d
  C:\Temp\cciZdTos.s:2105   .bss.hi2c2:00000000 hi2c2
  C:\Temp\cciZdTos.s:1149   .text.MX_TIM4_Init:00000000 $t
  C:\Temp\cciZdTos.s:1154   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
  C:\Temp\cciZdTos.s:1254   .text.MX_TIM4_Init:00000064 $d
  C:\Temp\cciZdTos.s:2070   .bss.htim4:00000000 htim4
  C:\Temp\cciZdTos.s:1260   .text.MX_TIM1_Init:00000000 $t
  C:\Temp\cciZdTos.s:1265   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
  C:\Temp\cciZdTos.s:1449   .text.MX_TIM1_Init:000000c0 $d
  C:\Temp\cciZdTos.s:2091   .bss.htim1:00000000 htim1
  C:\Temp\cciZdTos.s:1455   .text.MX_TIM3_Init:00000000 $t
  C:\Temp\cciZdTos.s:1460   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
  C:\Temp\cciZdTos.s:1652   .text.MX_TIM3_Init:000000d4 $d
  C:\Temp\cciZdTos.s:2077   .bss.htim3:00000000 htim3
  C:\Temp\cciZdTos.s:1658   .text.MX_TIM5_Init:00000000 $t
  C:\Temp\cciZdTos.s:1663   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
  C:\Temp\cciZdTos.s:1762   .text.MX_TIM5_Init:00000060 $d
  C:\Temp\cciZdTos.s:2063   .bss.htim5:00000000 htim5
  C:\Temp\cciZdTos.s:1768   .text.SystemClock_Config:00000000 $t
  C:\Temp\cciZdTos.s:1774   .text.SystemClock_Config:00000000 SystemClock_Config
  C:\Temp\cciZdTos.s:1918   .text.SystemClock_Config:00000098 $d
ARM GAS  C:\Temp\cciZdTos.s 			page 68


  C:\Temp\cciZdTos.s:1924   .text.main:00000000 $t
  C:\Temp\cciZdTos.s:1930   .text.main:00000000 main
  C:\Temp\cciZdTos.s:2014   .bss.POTS:00000000 POTS
  C:\Temp\cciZdTos.s:2011   .bss.POTS:00000000 $d
  C:\Temp\cciZdTos.s:2018   .bss.huart4:00000000 $d
  C:\Temp\cciZdTos.s:2028   .bss.hdma_tim3_ch4_up:00000000 hdma_tim3_ch4_up
  C:\Temp\cciZdTos.s:2025   .bss.hdma_tim3_ch4_up:00000000 $d
  C:\Temp\cciZdTos.s:2035   .bss.hdma_tim3_ch3:00000000 hdma_tim3_ch3
  C:\Temp\cciZdTos.s:2032   .bss.hdma_tim3_ch3:00000000 $d
  C:\Temp\cciZdTos.s:2042   .bss.hdma_tim2_up_ch3:00000000 hdma_tim2_up_ch3
  C:\Temp\cciZdTos.s:2039   .bss.hdma_tim2_up_ch3:00000000 $d
  C:\Temp\cciZdTos.s:2046   .bss.htim7:00000000 $d
  C:\Temp\cciZdTos.s:2053   .bss.htim6:00000000 $d
  C:\Temp\cciZdTos.s:2060   .bss.htim5:00000000 $d
  C:\Temp\cciZdTos.s:2067   .bss.htim4:00000000 $d
  C:\Temp\cciZdTos.s:2074   .bss.htim3:00000000 $d
  C:\Temp\cciZdTos.s:2081   .bss.htim2:00000000 $d
  C:\Temp\cciZdTos.s:2088   .bss.htim1:00000000 $d
  C:\Temp\cciZdTos.s:2098   .bss.hdma_i2c1_rx:00000000 hdma_i2c1_rx
  C:\Temp\cciZdTos.s:2095   .bss.hdma_i2c1_rx:00000000 $d
  C:\Temp\cciZdTos.s:2102   .bss.hi2c2:00000000 $d
  C:\Temp\cciZdTos.s:2109   .bss.hi2c1:00000000 $d
  C:\Temp\cciZdTos.s:2119   .bss.hdma_adc1:00000000 hdma_adc1
  C:\Temp\cciZdTos.s:2116   .bss.hdma_adc1:00000000 $d
  C:\Temp\cciZdTos.s:2123   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_I2C_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_IC_Init
HAL_TIM_IC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
init_7SegDisplay
init_IMU
readAccel
setFloatNumber
HAL_Delay
