ARM GAS  C:\Temp\ccYV7AEq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"CurrentMonitor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/CurrentMonitor.c"
  20              		.section	.text.WriteMem,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	WriteMem:
  27              	.LVL0:
  28              	.LFB235:
   1:Core/Src/CurrentMonitor.c **** //********************************************************************
   2:Core/Src/CurrentMonitor.c **** //*                      Mech Educational Board                      *
   3:Core/Src/CurrentMonitor.c **** //*                     Current Monitors Library                     *
   4:Core/Src/CurrentMonitor.c **** //*==================================================================*
   5:Core/Src/CurrentMonitor.c **** //* @author:    Jesse Jabez Arendse                                  *
   6:Core/Src/CurrentMonitor.c **** //* @date:      24-10-2023                                           *
   7:Core/Src/CurrentMonitor.c **** //*==================================================================*
   8:Core/Src/CurrentMonitor.c **** 
   9:Core/Src/CurrentMonitor.c **** #include "main.h"
  10:Core/Src/CurrentMonitor.c **** #include "CurrentMonitor.h"
  11:Core/Src/CurrentMonitor.c **** 
  12:Core/Src/CurrentMonitor.c **** extern I2C_HandleTypeDef hi2c1; 														//change this to whichever one you're using
  13:Core/Src/CurrentMonitor.c **** 
  14:Core/Src/CurrentMonitor.c **** uint16_t vbus, vshunt, current, power;
  15:Core/Src/CurrentMonitor.c **** 
  16:Core/Src/CurrentMonitor.c **** //custom since INA219 Mem is 2x 8-bit
  17:Core/Src/CurrentMonitor.c **** static void WriteMem(uint8_t devAddress, uint8_t RegisterAddress, uint16_t Value)
  18:Core/Src/CurrentMonitor.c **** {
  29              		.loc 1 18 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 18 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              		.cfi_def_cfa_offset 32
  19:Core/Src/CurrentMonitor.c **** 	uint8_t addr[2];
  39              		.loc 1 19 2 is_stmt 1 view .LVU2
ARM GAS  C:\Temp\ccYV7AEq.s 			page 2


  20:Core/Src/CurrentMonitor.c **** 	addr[0] = (Value >> 8) & 0xff;  // upper byte
  40              		.loc 1 20 2 view .LVU3
  41              		.loc 1 20 10 is_stmt 0 view .LVU4
  42 0004 130A     		lsrs	r3, r2, #8
  43 0006 8DF81430 		strb	r3, [sp, #20]
  21:Core/Src/CurrentMonitor.c **** 	addr[1] = (Value >> 0) & 0xff; // lower byte
  44              		.loc 1 21 2 is_stmt 1 view .LVU5
  45              		.loc 1 21 10 is_stmt 0 view .LVU6
  46 000a 8DF81520 		strb	r2, [sp, #21]
  22:Core/Src/CurrentMonitor.c **** 	HAL_I2C_Mem_Write(&hi2c1, (devAddress<<1)+0, RegisterAddress, 1, (uint8_t*)addr, 2, HAL_MAX_DELAY)
  47              		.loc 1 22 2 is_stmt 1 view .LVU7
  48 000e 4FF0FF33 		mov	r3, #-1
  49 0012 0293     		str	r3, [sp, #8]
  50 0014 0223     		movs	r3, #2
  51 0016 0193     		str	r3, [sp, #4]
  52 0018 05AB     		add	r3, sp, #20
  53 001a 0093     		str	r3, [sp]
  54 001c 0123     		movs	r3, #1
  55 001e 0A46     		mov	r2, r1
  56              	.LVL1:
  57              		.loc 1 22 2 is_stmt 0 view .LVU8
  58 0020 00FA03F1 		lsl	r1, r0, r3
  59              	.LVL2:
  60              		.loc 1 22 2 view .LVU9
  61 0024 0248     		ldr	r0, .L3
  62              	.LVL3:
  63              		.loc 1 22 2 view .LVU10
  64 0026 FFF7FEFF 		bl	HAL_I2C_Mem_Write
  65              	.LVL4:
  23:Core/Src/CurrentMonitor.c **** }
  66              		.loc 1 23 1 view .LVU11
  67 002a 07B0     		add	sp, sp, #28
  68              		.cfi_def_cfa_offset 4
  69              		@ sp needed
  70 002c 5DF804FB 		ldr	pc, [sp], #4
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0030 00000000 		.word	hi2c1
  75              		.cfi_endproc
  76              	.LFE235:
  78              		.section	.text.ReadMem,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	ReadMem:
  85              	.LVL5:
  86              	.LFB236:
  24:Core/Src/CurrentMonitor.c **** 
  25:Core/Src/CurrentMonitor.c **** static uint16_t ReadMem(uint8_t devAddress, uint8_t RegisterAddress)
  26:Core/Src/CurrentMonitor.c **** {
  87              		.loc 1 26 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 26 1 is_stmt 0 view .LVU13
ARM GAS  C:\Temp\ccYV7AEq.s 			page 3


  92 0000 00B5     		push	{lr}
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 14, -4
  95 0002 87B0     		sub	sp, sp, #28
  96              		.cfi_def_cfa_offset 32
  97 0004 0A46     		mov	r2, r1
  27:Core/Src/CurrentMonitor.c **** 	uint8_t Value[2];
  98              		.loc 1 27 2 is_stmt 1 view .LVU14
  28:Core/Src/CurrentMonitor.c **** 
  29:Core/Src/CurrentMonitor.c **** 	HAL_I2C_Mem_Read(&hi2c1, (devAddress<<1)+1, RegisterAddress, 1, Value, 2, 1000);
  99              		.loc 1 29 2 view .LVU15
 100              		.loc 1 29 38 is_stmt 0 view .LVU16
 101 0006 4000     		lsls	r0, r0, #1
 102              	.LVL6:
 103              		.loc 1 29 2 view .LVU17
 104 0008 4FF47A73 		mov	r3, #1000
 105 000c 0293     		str	r3, [sp, #8]
 106 000e 0223     		movs	r3, #2
 107 0010 0193     		str	r3, [sp, #4]
 108 0012 05AB     		add	r3, sp, #20
 109 0014 0093     		str	r3, [sp]
 110 0016 0123     		movs	r3, #1
 111 0018 C118     		adds	r1, r0, r3
 112              	.LVL7:
 113              		.loc 1 29 2 view .LVU18
 114 001a 0648     		ldr	r0, .L7
 115 001c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 116              	.LVL8:
  30:Core/Src/CurrentMonitor.c **** 
  31:Core/Src/CurrentMonitor.c **** 	return ((Value[0] << 8) | Value[1]);
 117              		.loc 1 31 2 is_stmt 1 view .LVU19
 118              		.loc 1 31 16 is_stmt 0 view .LVU20
 119 0020 9DF81400 		ldrb	r0, [sp, #20]	@ zero_extendqisi2
 120              		.loc 1 31 33 view .LVU21
 121 0024 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
  32:Core/Src/CurrentMonitor.c **** }
 122              		.loc 1 32 1 view .LVU22
 123 0028 43EA0020 		orr	r0, r3, r0, lsl #8
 124 002c 07B0     		add	sp, sp, #28
 125              		.cfi_def_cfa_offset 4
 126              		@ sp needed
 127 002e 5DF804FB 		ldr	pc, [sp], #4
 128              	.L8:
 129 0032 00BF     		.align	2
 130              	.L7:
 131 0034 00000000 		.word	hi2c1
 132              		.cfi_endproc
 133              	.LFE236:
 135              		.section	.text.calibrate,"ax",%progbits
 136              		.align	1
 137              		.global	calibrate
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	calibrate:
 143              	.LVL9:
 144              	.LFB237:
ARM GAS  C:\Temp\ccYV7AEq.s 			page 4


  33:Core/Src/CurrentMonitor.c **** 
  34:Core/Src/CurrentMonitor.c **** 
  35:Core/Src/CurrentMonitor.c **** void calibrate(uint8_t devAddress , uint16_t calRegister){                              //this is f
 145              		.loc 1 35 58 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		.loc 1 35 58 is_stmt 0 view .LVU24
 150 0000 08B5     		push	{r3, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 154 0002 0A46     		mov	r2, r1
  36:Core/Src/CurrentMonitor.c ****     WriteMem(devAddress, SENSOR_CALBRATION_MEM_ADDR, calRegister);                      
 155              		.loc 1 36 5 is_stmt 1 view .LVU25
 156 0004 0521     		movs	r1, #5
 157              	.LVL10:
 158              		.loc 1 36 5 is_stmt 0 view .LVU26
 159 0006 FFF7FEFF 		bl	WriteMem
 160              	.LVL11:
  37:Core/Src/CurrentMonitor.c **** }
 161              		.loc 1 37 1 view .LVU27
 162 000a 08BD     		pop	{r3, pc}
 163              		.cfi_endproc
 164              	.LFE237:
 166              		.section	.text.signNumber,"ax",%progbits
 167              		.align	1
 168              		.global	signNumber
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	signNumber:
 174              	.LVL12:
 175              	.LFB238:
  38:Core/Src/CurrentMonitor.c **** 
  39:Core/Src/CurrentMonitor.c **** int16_t signNumber(uint16_t unsignedValue){
 176              		.loc 1 39 43 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
  40:Core/Src/CurrentMonitor.c **** 	int16_t signedValue;
 181              		.loc 1 40 2 view .LVU29
  41:Core/Src/CurrentMonitor.c **** 
  42:Core/Src/CurrentMonitor.c **** 	if (unsignedValue <= INT16_MAX) {
 182              		.loc 1 42 2 view .LVU30
  43:Core/Src/CurrentMonitor.c ****         signedValue = (int16_t)unsignedValue; // No change needed, it fits in the signed range.
  44:Core/Src/CurrentMonitor.c ****     } else {
  45:Core/Src/CurrentMonitor.c ****         signedValue = -((int16_t)(UINT16_MAX - unsignedValue + 1));
  46:Core/Src/CurrentMonitor.c ****     }
  47:Core/Src/CurrentMonitor.c **** 
  48:Core/Src/CurrentMonitor.c **** 	return signedValue;
 183              		.loc 1 48 2 view .LVU31
  49:Core/Src/CurrentMonitor.c **** }
 184              		.loc 1 49 1 is_stmt 0 view .LVU32
 185 0000 00B2     		sxth	r0, r0
 186              		.loc 1 49 1 view .LVU33
ARM GAS  C:\Temp\ccYV7AEq.s 			page 5


 187 0002 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE238:
 191              		.section	.text.toBusVoltage,"ax",%progbits
 192              		.align	1
 193              		.global	toBusVoltage
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	toBusVoltage:
 199              	.LVL13:
 200              	.LFB239:
  50:Core/Src/CurrentMonitor.c **** 
  51:Core/Src/CurrentMonitor.c **** int16_t toBusVoltage(uint16_t regValue)
  52:Core/Src/CurrentMonitor.c **** {
 201              		.loc 1 52 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
  53:Core/Src/CurrentMonitor.c **** 	return ((regValue >> 3  ) * 4);
 206              		.loc 1 53 2 view .LVU35
 207              		.loc 1 53 28 is_stmt 0 view .LVU36
 208 0000 C008     		lsrs	r0, r0, #3
 209              	.LVL14:
  54:Core/Src/CurrentMonitor.c **** 
  55:Core/Src/CurrentMonitor.c **** }
 210              		.loc 1 55 1 view .LVU37
 211 0002 8000     		lsls	r0, r0, #2
 212 0004 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE239:
 216              		.section	.text.toCurrent_raw,"ax",%progbits
 217              		.align	1
 218              		.global	toCurrent_raw
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	toCurrent_raw:
 224              	.LVL15:
 225              	.LFB240:
  56:Core/Src/CurrentMonitor.c **** 
  57:Core/Src/CurrentMonitor.c **** int16_t toCurrent_raw(uint16_t regValue)
  58:Core/Src/CurrentMonitor.c **** {
 226              		.loc 1 58 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
  59:Core/Src/CurrentMonitor.c **** 	return (regValue-30*25);
 231              		.loc 1 59 2 view .LVU39
 232              		.loc 1 59 18 is_stmt 0 view .LVU40
 233 0000 A0F2EE20 		subw	r0, r0, #750
 234              	.LVL16:
  60:Core/Src/CurrentMonitor.c **** }
 235              		.loc 1 60 1 view .LVU41
 236 0004 00B2     		sxth	r0, r0
ARM GAS  C:\Temp\ccYV7AEq.s 			page 6


 237 0006 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE240:
 241              		.section	.text.toCurrent,"ax",%progbits
 242              		.align	1
 243              		.global	toCurrent
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	toCurrent:
 249              	.LVL17:
 250              	.LFB241:
  61:Core/Src/CurrentMonitor.c **** 
  62:Core/Src/CurrentMonitor.c **** int16_t toCurrent(uint16_t regValue)
  63:Core/Src/CurrentMonitor.c **** {
 251              		.loc 1 63 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		.loc 1 63 1 is_stmt 0 view .LVU43
 256 0000 08B5     		push	{r3, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
  64:Core/Src/CurrentMonitor.c **** 	int16_t result = toCurrent_raw(regValue);
 260              		.loc 1 64 2 is_stmt 1 view .LVU44
 261              		.loc 1 64 19 is_stmt 0 view .LVU45
 262 0002 FFF7FEFF 		bl	toCurrent_raw
 263              	.LVL18:
  65:Core/Src/CurrentMonitor.c **** 
  66:Core/Src/CurrentMonitor.c **** 	return (result /25 );
 264              		.loc 1 66 2 is_stmt 1 view .LVU46
 265              		.loc 1 66 17 is_stmt 0 view .LVU47
 266 0006 044B     		ldr	r3, .L16
 267 0008 83FB0023 		smull	r2, r3, r3, r0
 268 000c C017     		asrs	r0, r0, #31
 269              	.LVL19:
 270              		.loc 1 66 17 view .LVU48
 271 000e C0EBE300 		rsb	r0, r0, r3, asr #3
  67:Core/Src/CurrentMonitor.c **** }
 272              		.loc 1 67 1 view .LVU49
 273 0012 00B2     		sxth	r0, r0
 274 0014 08BD     		pop	{r3, pc}
 275              	.L17:
 276 0016 00BF     		.align	2
 277              	.L16:
 278 0018 1F85EB51 		.word	1374389535
 279              		.cfi_endproc
 280              	.LFE241:
 282              		.section	.text.toShuntVolage,"ax",%progbits
 283              		.align	1
 284              		.global	toShuntVolage
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	toShuntVolage:
 290              	.LVL20:
ARM GAS  C:\Temp\ccYV7AEq.s 			page 7


 291              	.LFB242:
  68:Core/Src/CurrentMonitor.c **** 
  69:Core/Src/CurrentMonitor.c **** int16_t toShuntVolage(uint16_t regValue)
  70:Core/Src/CurrentMonitor.c **** {
 292              		.loc 1 70 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		.loc 1 70 1 is_stmt 0 view .LVU51
 297 0000 08B5     		push	{r3, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
  71:Core/Src/CurrentMonitor.c **** 
  72:Core/Src/CurrentMonitor.c **** 	return (signNumber(regValue) );
 301              		.loc 1 72 2 is_stmt 1 view .LVU52
 302              		.loc 1 72 10 is_stmt 0 view .LVU53
 303 0002 FFF7FEFF 		bl	signNumber
 304              	.LVL21:
  73:Core/Src/CurrentMonitor.c **** }
 305              		.loc 1 73 1 view .LVU54
 306 0006 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE242:
 310              		.global	__aeabi_i2d
 311              		.global	__aeabi_ddiv
 312              		.global	__aeabi_d2uiz
 313              		.section	.text.getCurrent,"ax",%progbits
 314              		.align	1
 315              		.global	getCurrent
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	getCurrent:
 321              	.LFB243:
  74:Core/Src/CurrentMonitor.c **** 
  75:Core/Src/CurrentMonitor.c **** //all milli values
  76:Core/Src/CurrentMonitor.c **** uint16_t vbus = 0;           
  77:Core/Src/CurrentMonitor.c **** uint16_t vshunt = 0;         
  78:Core/Src/CurrentMonitor.c **** uint16_t current = 0;        
  79:Core/Src/CurrentMonitor.c **** uint16_t power = 0;          
  80:Core/Src/CurrentMonitor.c **** 
  81:Core/Src/CurrentMonitor.c **** int16_t getCurrent(){
 322              		.loc 1 81 21 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 70B5     		push	{r4, r5, r6, lr}
 327              		.cfi_def_cfa_offset 16
 328              		.cfi_offset 4, -16
 329              		.cfi_offset 5, -12
 330              		.cfi_offset 6, -8
 331              		.cfi_offset 14, -4
  82:Core/Src/CurrentMonitor.c **** 	int16_t rollingCurrent = 0;
 332              		.loc 1 82 2 view .LVU56
 333              	.LVL22:
  83:Core/Src/CurrentMonitor.c **** 		
ARM GAS  C:\Temp\ccYV7AEq.s 			page 8


  84:Core/Src/CurrentMonitor.c **** 		for (int i = 0 ; i < SENSOR_AVERAGING_NUMBER ; i++){
 334              		.loc 1 84 3 view .LVU57
 335              	.LBB2:
 336              		.loc 1 84 8 view .LVU58
 337              		.loc 1 84 12 is_stmt 0 view .LVU59
 338 0002 0024     		movs	r4, #0
 339              	.LBE2:
  82:Core/Src/CurrentMonitor.c **** 	int16_t rollingCurrent = 0;
 340              		.loc 1 82 10 view .LVU60
 341 0004 2646     		mov	r6, r4
 342              	.LBB3:
 343              		.loc 1 84 3 view .LVU61
 344 0006 26E0     		b	.L21
 345              	.LVL23:
 346              	.L22:
  85:Core/Src/CurrentMonitor.c **** 				vshunt = toShuntVolage(ReadMem(BARREL_SENSE_ADDRESS,SENSOR_VSHUNT_MEM_ADDR));
 347              		.loc 1 85 5 is_stmt 1 discriminator 3 view .LVU62
 348              		.loc 1 85 14 is_stmt 0 discriminator 3 view .LVU63
 349 0008 0121     		movs	r1, #1
 350 000a 4420     		movs	r0, #68
 351 000c FFF7FEFF 		bl	ReadMem
 352              	.LVL24:
 353 0010 FFF7FEFF 		bl	toShuntVolage
 354              	.LVL25:
 355              		.loc 1 85 12 discriminator 3 view .LVU64
 356 0014 164D     		ldr	r5, .L24+8
 357 0016 2880     		strh	r0, [r5]	@ movhi
  86:Core/Src/CurrentMonitor.c **** 				vbus = toBusVoltage(ReadMem(BARREL_SENSE_ADDRESS,SENSOR_VBUS_MEM_ADDR));
 358              		.loc 1 86 5 is_stmt 1 discriminator 3 view .LVU65
 359              		.loc 1 86 12 is_stmt 0 discriminator 3 view .LVU66
 360 0018 0221     		movs	r1, #2
 361 001a 4420     		movs	r0, #68
 362 001c FFF7FEFF 		bl	ReadMem
 363              	.LVL26:
 364 0020 FFF7FEFF 		bl	toBusVoltage
 365              	.LVL27:
 366              		.loc 1 86 10 discriminator 3 view .LVU67
 367 0024 134B     		ldr	r3, .L24+12
 368 0026 1880     		strh	r0, [r3]	@ movhi
  87:Core/Src/CurrentMonitor.c **** 		HAL_Delay(10);
 369              		.loc 1 87 3 is_stmt 1 discriminator 3 view .LVU68
 370 0028 0A20     		movs	r0, #10
 371 002a FFF7FEFF 		bl	HAL_Delay
 372              	.LVL28:
  88:Core/Src/CurrentMonitor.c **** 		current = ((vshunt)*1000/ACCURATE_SHUNT_RESISTOR_VALUE);                                         
 373              		.loc 1 88 3 discriminator 3 view .LVU69
 374              		.loc 1 88 22 is_stmt 0 discriminator 3 view .LVU70
 375 002e 2B88     		ldrh	r3, [r5]
 376              		.loc 1 88 27 discriminator 3 view .LVU71
 377 0030 4FF47A70 		mov	r0, #1000
 378 0034 03FB00F0 		mul	r0, r3, r0
 379 0038 FFF7FEFF 		bl	__aeabi_i2d
 380              	.LVL29:
 381 003c 0AA3     		adr	r3, .L24
 382 003e D3E90023 		ldrd	r2, [r3]
 383 0042 FFF7FEFF 		bl	__aeabi_ddiv
 384              	.LVL30:
ARM GAS  C:\Temp\ccYV7AEq.s 			page 9


 385              		.loc 1 88 11 discriminator 3 view .LVU72
 386 0046 FFF7FEFF 		bl	__aeabi_d2uiz
 387              	.LVL31:
 388 004a 80B2     		uxth	r0, r0
 389 004c 0A4B     		ldr	r3, .L24+16
 390 004e 1880     		strh	r0, [r3]	@ movhi
  89:Core/Src/CurrentMonitor.c **** 		rollingCurrent = rollingCurrent + current;
 391              		.loc 1 89 3 is_stmt 1 discriminator 3 view .LVU73
 392              		.loc 1 89 35 is_stmt 0 discriminator 3 view .LVU74
 393 0050 3044     		add	r0, r0, r6
 394              		.loc 1 89 18 discriminator 3 view .LVU75
 395 0052 06B2     		sxth	r6, r0
 396              	.LVL32:
  84:Core/Src/CurrentMonitor.c **** 				vshunt = toShuntVolage(ReadMem(BARREL_SENSE_ADDRESS,SENSOR_VSHUNT_MEM_ADDR));
 397              		.loc 1 84 51 is_stmt 1 discriminator 3 view .LVU76
 398 0054 0134     		adds	r4, r4, #1
 399              	.LVL33:
 400              	.L21:
  84:Core/Src/CurrentMonitor.c **** 				vshunt = toShuntVolage(ReadMem(BARREL_SENSE_ADDRESS,SENSOR_VSHUNT_MEM_ADDR));
 401              		.loc 1 84 22 discriminator 1 view .LVU77
 402 0056 052C     		cmp	r4, #5
 403 0058 D6DD     		ble	.L22
 404              	.LBE3:
  90:Core/Src/CurrentMonitor.c **** 		}
  91:Core/Src/CurrentMonitor.c **** 
  92:Core/Src/CurrentMonitor.c **** 	return rollingCurrent/SENSOR_AVERAGING_NUMBER;
 405              		.loc 1 92 2 view .LVU78
 406              		.loc 1 92 23 is_stmt 0 view .LVU79
 407 005a 0848     		ldr	r0, .L24+20
 408 005c 80FB0630 		smull	r3, r0, r0, r6
 409 0060 A0EBE670 		sub	r0, r0, r6, asr #31
  93:Core/Src/CurrentMonitor.c **** 
  94:Core/Src/CurrentMonitor.c **** }
 410              		.loc 1 94 1 view .LVU80
 411 0064 00B2     		sxth	r0, r0
 412 0066 70BD     		pop	{r4, r5, r6, pc}
 413              	.LVL34:
 414              	.L25:
 415              		.loc 1 94 1 view .LVU81
 416              		.align	3
 417              	.L24:
 418 0068 00000000 		.word	0
 419 006c 00B05940 		.word	1079619584
 420 0070 00000000 		.word	vshunt
 421 0074 00000000 		.word	vbus
 422 0078 00000000 		.word	current
 423 007c ABAAAA2A 		.word	715827883
 424              		.cfi_endproc
 425              	.LFE243:
 427              		.section	.text.getPower,"ax",%progbits
 428              		.align	1
 429              		.global	getPower
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	getPower:
 435              	.LFB244:
ARM GAS  C:\Temp\ccYV7AEq.s 			page 10


  95:Core/Src/CurrentMonitor.c **** 
  96:Core/Src/CurrentMonitor.c **** int16_t getPower(){
 436              		.loc 1 96 19 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
  97:Core/Src/CurrentMonitor.c **** 	return current*vshunt;
 441              		.loc 1 97 2 view .LVU83
 442              		.loc 1 97 16 is_stmt 0 view .LVU84
 443 0000 034B     		ldr	r3, .L27
 444 0002 1888     		ldrh	r0, [r3]
 445 0004 034B     		ldr	r3, .L27+4
 446 0006 1B88     		ldrh	r3, [r3]
 447 0008 10FB03F0 		smulbb	r0, r0, r3
  98:Core/Src/CurrentMonitor.c **** }
 448              		.loc 1 98 1 view .LVU85
 449 000c 00B2     		sxth	r0, r0
 450 000e 7047     		bx	lr
 451              	.L28:
 452              		.align	2
 453              	.L27:
 454 0010 00000000 		.word	current
 455 0014 00000000 		.word	vshunt
 456              		.cfi_endproc
 457              	.LFE244:
 459              		.section	.text.init_currentMonitor,"ax",%progbits
 460              		.align	1
 461              		.global	init_currentMonitor
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	init_currentMonitor:
 467              	.LVL35:
 468              	.LFB245:
  99:Core/Src/CurrentMonitor.c **** 
 100:Core/Src/CurrentMonitor.c **** 
 101:Core/Src/CurrentMonitor.c **** void init_currentMonitor(uint8_t INA219_Address){
 469              		.loc 1 101 49 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		.loc 1 101 49 is_stmt 0 view .LVU87
 474 0000 10B5     		push	{r4, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478 0002 0446     		mov	r4, r0
 102:Core/Src/CurrentMonitor.c **** 
 103:Core/Src/CurrentMonitor.c ****     WriteMem(INA219_Address,SENSOR_CONFIGURATION_MEM_ADDR,SENSOR_CONFIGURATION_RESET);             
 479              		.loc 1 103 5 is_stmt 1 view .LVU88
 480 0004 4FF40042 		mov	r2, #32768
 481 0008 0021     		movs	r1, #0
 482 000a FFF7FEFF 		bl	WriteMem
 483              	.LVL36:
 104:Core/Src/CurrentMonitor.c **** 	calibrate(INA219_Address,SENSOR_CALIBRATION);
 484              		.loc 1 104 2 view .LVU89
ARM GAS  C:\Temp\ccYV7AEq.s 			page 11


 485 000e 4FF6FF71 		movw	r1, #65535
 486 0012 2046     		mov	r0, r4
 487 0014 FFF7FEFF 		bl	calibrate
 488              	.LVL37:
 105:Core/Src/CurrentMonitor.c **** 
 106:Core/Src/CurrentMonitor.c **** }
 489              		.loc 1 106 1 is_stmt 0 view .LVU90
 490 0018 10BD     		pop	{r4, pc}
 491              		.cfi_endproc
 492              	.LFE245:
 494              		.global	power
 495              		.section	.bss.power,"aw",%nobits
 496              		.align	1
 499              	power:
 500 0000 0000     		.space	2
 501              		.global	current
 502              		.section	.bss.current,"aw",%nobits
 503              		.align	1
 506              	current:
 507 0000 0000     		.space	2
 508              		.global	vshunt
 509              		.section	.bss.vshunt,"aw",%nobits
 510              		.align	1
 513              	vshunt:
 514 0000 0000     		.space	2
 515              		.global	vbus
 516              		.section	.bss.vbus,"aw",%nobits
 517              		.align	1
 520              	vbus:
 521 0000 0000     		.space	2
 522              		.text
 523              	.Letext0:
 524              		.file 2 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 525              		.file 3 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 526              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 527              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 528              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 529              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 530              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Temp\ccYV7AEq.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 CurrentMonitor.c
  C:\Temp\ccYV7AEq.s:21     .text.WriteMem:00000000 $t
  C:\Temp\ccYV7AEq.s:26     .text.WriteMem:00000000 WriteMem
  C:\Temp\ccYV7AEq.s:74     .text.WriteMem:00000030 $d
  C:\Temp\ccYV7AEq.s:79     .text.ReadMem:00000000 $t
  C:\Temp\ccYV7AEq.s:84     .text.ReadMem:00000000 ReadMem
  C:\Temp\ccYV7AEq.s:131    .text.ReadMem:00000034 $d
  C:\Temp\ccYV7AEq.s:136    .text.calibrate:00000000 $t
  C:\Temp\ccYV7AEq.s:142    .text.calibrate:00000000 calibrate
  C:\Temp\ccYV7AEq.s:167    .text.signNumber:00000000 $t
  C:\Temp\ccYV7AEq.s:173    .text.signNumber:00000000 signNumber
  C:\Temp\ccYV7AEq.s:192    .text.toBusVoltage:00000000 $t
  C:\Temp\ccYV7AEq.s:198    .text.toBusVoltage:00000000 toBusVoltage
  C:\Temp\ccYV7AEq.s:217    .text.toCurrent_raw:00000000 $t
  C:\Temp\ccYV7AEq.s:223    .text.toCurrent_raw:00000000 toCurrent_raw
  C:\Temp\ccYV7AEq.s:242    .text.toCurrent:00000000 $t
  C:\Temp\ccYV7AEq.s:248    .text.toCurrent:00000000 toCurrent
  C:\Temp\ccYV7AEq.s:278    .text.toCurrent:00000018 $d
  C:\Temp\ccYV7AEq.s:283    .text.toShuntVolage:00000000 $t
  C:\Temp\ccYV7AEq.s:289    .text.toShuntVolage:00000000 toShuntVolage
  C:\Temp\ccYV7AEq.s:314    .text.getCurrent:00000000 $t
  C:\Temp\ccYV7AEq.s:320    .text.getCurrent:00000000 getCurrent
  C:\Temp\ccYV7AEq.s:418    .text.getCurrent:00000068 $d
  C:\Temp\ccYV7AEq.s:513    .bss.vshunt:00000000 vshunt
  C:\Temp\ccYV7AEq.s:520    .bss.vbus:00000000 vbus
  C:\Temp\ccYV7AEq.s:506    .bss.current:00000000 current
  C:\Temp\ccYV7AEq.s:428    .text.getPower:00000000 $t
  C:\Temp\ccYV7AEq.s:434    .text.getPower:00000000 getPower
  C:\Temp\ccYV7AEq.s:454    .text.getPower:00000010 $d
  C:\Temp\ccYV7AEq.s:460    .text.init_currentMonitor:00000000 $t
  C:\Temp\ccYV7AEq.s:466    .text.init_currentMonitor:00000000 init_currentMonitor
  C:\Temp\ccYV7AEq.s:499    .bss.power:00000000 power
  C:\Temp\ccYV7AEq.s:496    .bss.power:00000000 $d
  C:\Temp\ccYV7AEq.s:503    .bss.current:00000000 $d
  C:\Temp\ccYV7AEq.s:510    .bss.vshunt:00000000 $d
  C:\Temp\ccYV7AEq.s:517    .bss.vbus:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_I2C_Mem_Read
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2uiz
HAL_Delay
