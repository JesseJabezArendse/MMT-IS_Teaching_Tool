ARM GAS  C:\Temp\ccATudmE.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ServoMotors.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/ServoMotors.c"
  20              		.section	.text.angleToCCR,"ax",%progbits
  21              		.align	1
  22              		.global	angleToCCR
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	angleToCCR:
  28              	.LVL0:
  29              	.LFB235:
   1:Core/Src/ServoMotors.c **** //********************************************************************
   2:Core/Src/ServoMotors.c **** //*                      Mech Educational Board                      *
   3:Core/Src/ServoMotors.c **** //*                       Servo Motor Library                        *
   4:Core/Src/ServoMotors.c **** //*==================================================================*
   5:Core/Src/ServoMotors.c **** //* @author:    Jesse Jabez Arendse                                  *
   6:Core/Src/ServoMotors.c **** //* @date:      20-11-2023                                           *
   7:Core/Src/ServoMotors.c **** //*==================================================================*
   8:Core/Src/ServoMotors.c **** 
   9:Core/Src/ServoMotors.c **** #include "main.h"
  10:Core/Src/ServoMotors.c **** #include "ServoMotors.h"
  11:Core/Src/ServoMotors.c **** 
  12:Core/Src/ServoMotors.c **** extern TIM_HandleTypeDef htim3;
  13:Core/Src/ServoMotors.c **** 
  14:Core/Src/ServoMotors.c **** int mainARR = 20000;
  15:Core/Src/ServoMotors.c **** int maxAngle = 200;
  16:Core/Src/ServoMotors.c **** int mainStartingTime = 0;
  17:Core/Src/ServoMotors.c **** 
  18:Core/Src/ServoMotors.c **** int angleToCCR(int angle) {
  30              		.loc 1 18 27 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  19:Core/Src/ServoMotors.c ****     int outCCR = angle*1000/maxAngle + mainStartingTime;
  35              		.loc 1 19 5 view .LVU1
  36              		.loc 1 19 23 is_stmt 0 view .LVU2
  37 0000 4FF47A73 		mov	r3, #1000
  38 0004 00FB03F3 		mul	r3, r0, r3
  39              		.loc 1 19 28 view .LVU3
ARM GAS  C:\Temp\ccATudmE.s 			page 2


  40 0008 074A     		ldr	r2, .L4
  41 000a 1268     		ldr	r2, [r2]
  42 000c 93FBF2F3 		sdiv	r3, r3, r2
  43              		.loc 1 19 38 view .LVU4
  44 0010 064A     		ldr	r2, .L4+4
  45 0012 1068     		ldr	r0, [r2]
  46              	.LVL1:
  47              		.loc 1 19 9 view .LVU5
  48 0014 0344     		add	r3, r3, r0
  49              	.LVL2:
  20:Core/Src/ServoMotors.c ****     if (outCCR < mainStartingTime ){return mainStartingTime;}
  50              		.loc 1 20 5 is_stmt 1 view .LVU6
  51              		.loc 1 20 8 is_stmt 0 view .LVU7
  52 0016 9842     		cmp	r0, r3
  53 0018 04DC     		bgt	.L1
  21:Core/Src/ServoMotors.c ****     else if (outCCR > (mainStartingTime + 1000)){return (mainStartingTime + 1000);}
  54              		.loc 1 21 10 is_stmt 1 view .LVU8
  55              		.loc 1 21 41 is_stmt 0 view .LVU9
  56 001a 00F57A70 		add	r0, r0, #1000
  57              		.loc 1 21 13 view .LVU10
  58 001e 9842     		cmp	r0, r3
  59 0020 00DB     		blt	.L1
  22:Core/Src/ServoMotors.c ****     else return outCCR;
  60              		.loc 1 22 17 view .LVU11
  61 0022 1846     		mov	r0, r3
  62              	.L1:
  23:Core/Src/ServoMotors.c **** }
  63              		.loc 1 23 1 view .LVU12
  64 0024 7047     		bx	lr
  65              	.L5:
  66 0026 00BF     		.align	2
  67              	.L4:
  68 0028 00000000 		.word	maxAngle
  69 002c 00000000 		.word	mainStartingTime
  70              		.cfi_endproc
  71              	.LFE235:
  73              		.section	.text.init_ServoMotor,"ax",%progbits
  74              		.align	1
  75              		.global	init_ServoMotor
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	init_ServoMotor:
  81              	.LVL3:
  82              	.LFB236:
  24:Core/Src/ServoMotors.c **** 
  25:Core/Src/ServoMotors.c **** void init_ServoMotor( int servoNumber , int frequency , int angleRange , int startingTime){
  83              		.loc 1 25 91 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  26:Core/Src/ServoMotors.c ****     if (frequency == SERVO_FREQUENCY_50  ){ //if suitable servo frequency, not accomodated for yet,
  87              		.loc 1 26 5 view .LVU14
  88              		.loc 1 26 8 is_stmt 0 view .LVU15
  89 0000 3229     		cmp	r1, #50
  90 0002 00D0     		beq	.L15
  91 0004 7047     		bx	lr
ARM GAS  C:\Temp\ccATudmE.s 			page 3


  92              	.L15:
  25:Core/Src/ServoMotors.c ****     if (frequency == SERVO_FREQUENCY_50  ){ //if suitable servo frequency, not accomodated for yet,
  93              		.loc 1 25 91 view .LVU16
  94 0006 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
  98 0008 0446     		mov	r4, r0
  27:Core/Src/ServoMotors.c **** 
  28:Core/Src/ServoMotors.c ****         maxAngle = angleRange;
  99              		.loc 1 28 9 is_stmt 1 view .LVU17
 100              		.loc 1 28 18 is_stmt 0 view .LVU18
 101 000a 1249     		ldr	r1, .L20
 102              	.LVL4:
 103              		.loc 1 28 18 view .LVU19
 104 000c 0A60     		str	r2, [r1]
  29:Core/Src/ServoMotors.c ****         mainStartingTime = startingTime*10;
 105              		.loc 1 29 9 is_stmt 1 view .LVU20
 106              		.loc 1 29 40 is_stmt 0 view .LVU21
 107 000e 03EB8303 		add	r3, r3, r3, lsl #2
 108              	.LVL5:
 109              		.loc 1 29 40 view .LVU22
 110 0012 5B00     		lsls	r3, r3, #1
 111              		.loc 1 29 26 view .LVU23
 112 0014 104A     		ldr	r2, .L20+4
 113              	.LVL6:
 114              		.loc 1 29 26 view .LVU24
 115 0016 1360     		str	r3, [r2]
  30:Core/Src/ServoMotors.c **** 
  31:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M1){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);}
 116              		.loc 1 31 9 is_stmt 1 view .LVU25
 117              		.loc 1 31 12 is_stmt 0 view .LVU26
 118 0018 0128     		cmp	r0, #1
 119 001a 06D0     		beq	.L16
 120              	.LVL7:
 121              	.L8:
  32:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M2){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);}
 122              		.loc 1 32 9 is_stmt 1 view .LVU27
 123              		.loc 1 32 12 is_stmt 0 view .LVU28
 124 001c 022C     		cmp	r4, #2
 125 001e 09D0     		beq	.L17
 126              	.L9:
  33:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M3){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);}
 127              		.loc 1 33 9 is_stmt 1 view .LVU29
 128              		.loc 1 33 12 is_stmt 0 view .LVU30
 129 0020 032C     		cmp	r4, #3
 130 0022 0CD0     		beq	.L18
 131              	.L10:
  34:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M4){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);}
 132              		.loc 1 34 9 is_stmt 1 view .LVU31
 133              		.loc 1 34 12 is_stmt 0 view .LVU32
 134 0024 042C     		cmp	r4, #4
 135 0026 0FD0     		beq	.L19
 136              	.L6:
  35:Core/Src/ServoMotors.c **** 
  36:Core/Src/ServoMotors.c **** 
  37:Core/Src/ServoMotors.c ****     }
ARM GAS  C:\Temp\ccATudmE.s 			page 4


  38:Core/Src/ServoMotors.c ****     
  39:Core/Src/ServoMotors.c **** }
 137              		.loc 1 39 1 view .LVU33
 138 0028 10BD     		pop	{r4, pc}
 139              	.LVL8:
 140              	.L16:
  31:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M2){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);}
 141              		.loc 1 31 38 is_stmt 1 discriminator 1 view .LVU34
 142 002a 0021     		movs	r1, #0
  31:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M2){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);}
 143              		.loc 1 31 38 is_stmt 0 discriminator 1 view .LVU35
 144 002c 0B48     		ldr	r0, .L20+8
 145              	.LVL9:
  31:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M2){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);}
 146              		.loc 1 31 38 discriminator 1 view .LVU36
 147 002e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 148              	.LVL10:
  31:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M2){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);}
 149              		.loc 1 31 38 discriminator 1 view .LVU37
 150 0032 F3E7     		b	.L8
 151              	.L17:
  32:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M3){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);}
 152              		.loc 1 32 38 is_stmt 1 discriminator 1 view .LVU38
 153 0034 0421     		movs	r1, #4
 154 0036 0948     		ldr	r0, .L20+8
 155 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 156              	.LVL11:
 157 003c F0E7     		b	.L9
 158              	.L18:
  33:Core/Src/ServoMotors.c ****         if (servoNumber == SERVO_M4){HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);}
 159              		.loc 1 33 38 discriminator 1 view .LVU39
 160 003e 0821     		movs	r1, #8
 161 0040 0648     		ldr	r0, .L20+8
 162 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 163              	.LVL12:
 164 0046 EDE7     		b	.L10
 165              	.L19:
  34:Core/Src/ServoMotors.c **** 
 166              		.loc 1 34 38 discriminator 1 view .LVU40
 167 0048 0C21     		movs	r1, #12
 168 004a 0448     		ldr	r0, .L20+8
 169 004c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 170              	.LVL13:
 171              		.loc 1 39 1 is_stmt 0 discriminator 1 view .LVU41
 172 0050 EAE7     		b	.L6
 173              	.L21:
 174 0052 00BF     		.align	2
 175              	.L20:
 176 0054 00000000 		.word	maxAngle
 177 0058 00000000 		.word	mainStartingTime
 178 005c 00000000 		.word	htim3
 179              		.cfi_endproc
 180              	.LFE236:
 182              		.section	.text.setServoAngle,"ax",%progbits
 183              		.align	1
 184              		.global	setServoAngle
 185              		.syntax unified
ARM GAS  C:\Temp\ccATudmE.s 			page 5


 186              		.thumb
 187              		.thumb_func
 189              	setServoAngle:
 190              	.LVL14:
 191              	.LFB237:
  40:Core/Src/ServoMotors.c **** 
  41:Core/Src/ServoMotors.c **** void setServoAngle(int servoNumber , int angle){
 192              		.loc 1 41 48 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 41 48 is_stmt 0 view .LVU43
 197 0000 38B5     		push	{r3, r4, r5, lr}
 198              		.cfi_def_cfa_offset 16
 199              		.cfi_offset 3, -16
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 5, -8
 202              		.cfi_offset 14, -4
 203 0002 0446     		mov	r4, r0
 204 0004 0D46     		mov	r5, r1
  42:Core/Src/ServoMotors.c ****     if (servoNumber == SERVO_M1){
 205              		.loc 1 42 5 is_stmt 1 view .LVU44
 206              		.loc 1 42 8 is_stmt 0 view .LVU45
 207 0006 0128     		cmp	r0, #1
 208 0008 06D0     		beq	.L28
 209              	.LVL15:
 210              	.L23:
  43:Core/Src/ServoMotors.c ****         TIM3 -> CCR1 = angleToCCR(angle);
  44:Core/Src/ServoMotors.c ****     }
  45:Core/Src/ServoMotors.c ****     if (servoNumber == SERVO_M2){
 211              		.loc 1 45 5 is_stmt 1 view .LVU46
 212              		.loc 1 45 8 is_stmt 0 view .LVU47
 213 000a 022C     		cmp	r4, #2
 214 000c 0AD0     		beq	.L29
 215              	.L24:
  46:Core/Src/ServoMotors.c ****         TIM3 -> CCR2 = angleToCCR(angle);
  47:Core/Src/ServoMotors.c ****     }
  48:Core/Src/ServoMotors.c ****     if (servoNumber == SERVO_M3){
 216              		.loc 1 48 5 is_stmt 1 view .LVU48
 217              		.loc 1 48 8 is_stmt 0 view .LVU49
 218 000e 032C     		cmp	r4, #3
 219 0010 0ED0     		beq	.L30
 220              	.L25:
  49:Core/Src/ServoMotors.c ****         TIM3 -> CCR3 = angleToCCR(angle);
  50:Core/Src/ServoMotors.c ****     }
  51:Core/Src/ServoMotors.c ****     if (servoNumber == SERVO_M4){
 221              		.loc 1 51 5 is_stmt 1 view .LVU50
 222              		.loc 1 51 8 is_stmt 0 view .LVU51
 223 0012 042C     		cmp	r4, #4
 224 0014 12D0     		beq	.L31
 225              	.L22:
  52:Core/Src/ServoMotors.c ****         TIM3 -> CCR4 = angleToCCR(angle);
  53:Core/Src/ServoMotors.c ****     }
  54:Core/Src/ServoMotors.c ****     
  55:Core/Src/ServoMotors.c **** }...
 226              		.loc 1 55 1 view .LVU52
 227 0016 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Temp\ccATudmE.s 			page 6


 228              	.LVL16:
 229              	.L28:
  43:Core/Src/ServoMotors.c ****         TIM3 -> CCR1 = angleToCCR(angle);
 230              		.loc 1 43 9 is_stmt 1 view .LVU53
  43:Core/Src/ServoMotors.c ****         TIM3 -> CCR1 = angleToCCR(angle);
 231              		.loc 1 43 24 is_stmt 0 view .LVU54
 232 0018 0846     		mov	r0, r1
 233              	.LVL17:
  43:Core/Src/ServoMotors.c ****         TIM3 -> CCR1 = angleToCCR(angle);
 234              		.loc 1 43 24 view .LVU55
 235 001a FFF7FEFF 		bl	angleToCCR
 236              	.LVL18:
  43:Core/Src/ServoMotors.c ****         TIM3 -> CCR1 = angleToCCR(angle);
 237              		.loc 1 43 22 view .LVU56
 238 001e 0A4B     		ldr	r3, .L32
 239 0020 5863     		str	r0, [r3, #52]
 240 0022 F2E7     		b	.L23
 241              	.L29:
  46:Core/Src/ServoMotors.c ****         TIM3 -> CCR2 = angleToCCR(angle);
 242              		.loc 1 46 9 is_stmt 1 view .LVU57
  46:Core/Src/ServoMotors.c ****         TIM3 -> CCR2 = angleToCCR(angle);
 243              		.loc 1 46 24 is_stmt 0 view .LVU58
 244 0024 2846     		mov	r0, r5
 245 0026 FFF7FEFF 		bl	angleToCCR
 246              	.LVL19:
  46:Core/Src/ServoMotors.c ****         TIM3 -> CCR2 = angleToCCR(angle);
 247              		.loc 1 46 22 view .LVU59
 248 002a 074B     		ldr	r3, .L32
 249 002c 9863     		str	r0, [r3, #56]
 250 002e EEE7     		b	.L24
 251              	.L30:
  49:Core/Src/ServoMotors.c ****         TIM3 -> CCR3 = angleToCCR(angle);
 252              		.loc 1 49 9 is_stmt 1 view .LVU60
  49:Core/Src/ServoMotors.c ****         TIM3 -> CCR3 = angleToCCR(angle);
 253              		.loc 1 49 24 is_stmt 0 view .LVU61
 254 0030 2846     		mov	r0, r5
 255 0032 FFF7FEFF 		bl	angleToCCR
 256              	.LVL20:
  49:Core/Src/ServoMotors.c ****         TIM3 -> CCR3 = angleToCCR(angle);
 257              		.loc 1 49 22 view .LVU62
 258 0036 044B     		ldr	r3, .L32
 259 0038 D863     		str	r0, [r3, #60]
 260 003a EAE7     		b	.L25
 261              	.L31:
  52:Core/Src/ServoMotors.c ****         TIM3 -> CCR4 = angleToCCR(angle);
 262              		.loc 1 52 9 is_stmt 1 view .LVU63
  52:Core/Src/ServoMotors.c ****         TIM3 -> CCR4 = angleToCCR(angle);
 263              		.loc 1 52 24 is_stmt 0 view .LVU64
 264 003c 2846     		mov	r0, r5
 265 003e FFF7FEFF 		bl	angleToCCR
 266              	.LVL21:
  52:Core/Src/ServoMotors.c ****         TIM3 -> CCR4 = angleToCCR(angle);
 267              		.loc 1 52 22 view .LVU65
 268 0042 014B     		ldr	r3, .L32
 269 0044 1864     		str	r0, [r3, #64]
 270              		.loc 1 55 1 view .LVU66
 271 0046 E6E7     		b	.L22
ARM GAS  C:\Temp\ccATudmE.s 			page 7


 272              	.L33:
 273              		.align	2
 274              	.L32:
 275 0048 00040040 		.word	1073742848
 276              		.cfi_endproc
 277              	.LFE237:
 279              		.global	mainStartingTime
 280              		.section	.bss.mainStartingTime,"aw",%nobits
 281              		.align	2
 284              	mainStartingTime:
 285 0000 00000000 		.space	4
 286              		.global	maxAngle
 287              		.section	.data.maxAngle,"aw"
 288              		.align	2
 291              	maxAngle:
 292 0000 C8000000 		.word	200
 293              		.global	mainARR
 294              		.section	.data.mainARR,"aw"
 295              		.align	2
 298              	mainARR:
 299 0000 204E0000 		.word	20000
 300              		.text
 301              	.Letext0:
 302              		.file 2 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 303              		.file 3 "c:\\users\\jesse arendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vsco
 304              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 305              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 306              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 307              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  C:\Temp\ccATudmE.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 ServoMotors.c
  C:\Temp\ccATudmE.s:21     .text.angleToCCR:00000000 $t
  C:\Temp\ccATudmE.s:27     .text.angleToCCR:00000000 angleToCCR
  C:\Temp\ccATudmE.s:68     .text.angleToCCR:00000028 $d
  C:\Temp\ccATudmE.s:291    .data.maxAngle:00000000 maxAngle
  C:\Temp\ccATudmE.s:284    .bss.mainStartingTime:00000000 mainStartingTime
  C:\Temp\ccATudmE.s:74     .text.init_ServoMotor:00000000 $t
  C:\Temp\ccATudmE.s:80     .text.init_ServoMotor:00000000 init_ServoMotor
  C:\Temp\ccATudmE.s:176    .text.init_ServoMotor:00000054 $d
  C:\Temp\ccATudmE.s:183    .text.setServoAngle:00000000 $t
  C:\Temp\ccATudmE.s:189    .text.setServoAngle:00000000 setServoAngle
  C:\Temp\ccATudmE.s:275    .text.setServoAngle:00000048 $d
  C:\Temp\ccATudmE.s:281    .bss.mainStartingTime:00000000 $d
  C:\Temp\ccATudmE.s:288    .data.maxAngle:00000000 $d
  C:\Temp\ccATudmE.s:298    .data.mainARR:00000000 mainARR
  C:\Temp\ccATudmE.s:295    .data.mainARR:00000000 $d

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim3
