ARM GAS  C:\Temp\ccFeN9n3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB235:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** // #include "main.c"
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Temp\ccFeN9n3.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim2_up_ch3;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  64:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  66:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  67:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim8;
  68:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim14;
  69:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_uart4_rx;
  70:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart4;
  71:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  72:Core/Src/stm32f4xx_it.c **** 
  73:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  74:Core/Src/stm32f4xx_it.c **** 
  75:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  77:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  78:Core/Src/stm32f4xx_it.c **** /**
  79:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  80:Core/Src/stm32f4xx_it.c ****   */
  81:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  82:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 82 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Temp\ccFeN9n3.s 			page 3


  34              		@ link register save eliminated.
  35              	.L2:
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 87 3 discriminator 1 view .LVU1
  88:Core/Src/stm32f4xx_it.c ****   {
  89:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 89 3 discriminator 1 view .LVU2
  87:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 87 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE235:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB236:
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  91:Core/Src/stm32f4xx_it.c **** }
  92:Core/Src/stm32f4xx_it.c **** 
  93:Core/Src/stm32f4xx_it.c **** /**
  94:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  95:Core/Src/stm32f4xx_it.c ****   */
  96:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  97:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 97 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  98:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c **** 
 100:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 101 3 discriminator 1 view .LVU5
 102:Core/Src/stm32f4xx_it.c ****   {
 103:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c ****     // display_char('E',0);
 105:Core/Src/stm32f4xx_it.c ****     // display_char('r',1);
 106:Core/Src/stm32f4xx_it.c ****     // display_char('r',2);
 107:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 108 3 discriminator 1 view .LVU6
 101:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 101 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE236:
ARM GAS  C:\Temp\ccFeN9n3.s 			page 4


  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB237:
 109:Core/Src/stm32f4xx_it.c **** }
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c **** /**
 112:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 113:Core/Src/stm32f4xx_it.c ****   */
 114:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 115:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 115 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 116:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 119 3 discriminator 1 view .LVU9
 120:Core/Src/stm32f4xx_it.c ****   {
 121:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 123 3 discriminator 1 view .LVU10
 119:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 119 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE237:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB238:
 124:Core/Src/stm32f4xx_it.c **** }
 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c **** /**
 127:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 128:Core/Src/stm32f4xx_it.c ****   */
 129:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 130:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 130 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Temp\ccFeN9n3.s 			page 5


 103              		@ link register save eliminated.
 104              	.L8:
 131:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 134 3 discriminator 1 view .LVU13
 135:Core/Src/stm32f4xx_it.c ****   {
 136:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 138 3 discriminator 1 view .LVU14
 134:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 134 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE238:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB239:
 139:Core/Src/stm32f4xx_it.c **** }
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c **** /**
 142:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 143:Core/Src/stm32f4xx_it.c ****   */
 144:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 145:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 145 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 146:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 149 3 discriminator 1 view .LVU17
 150:Core/Src/stm32f4xx_it.c ****   {
 151:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 153 3 discriminator 1 view .LVU18
 149:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 149 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE239:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
ARM GAS  C:\Temp\ccFeN9n3.s 			page 6


 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB240:
 154:Core/Src/stm32f4xx_it.c **** }
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c **** /**
 157:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 158:Core/Src/stm32f4xx_it.c ****   */
 159:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 160:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 160 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 167:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 167 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE240:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB241:
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c **** /**
 170:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 171:Core/Src/stm32f4xx_it.c ****   */
 172:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 173:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 173 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 180:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 180 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
ARM GAS  C:\Temp\ccFeN9n3.s 			page 7


 171              	.LFE241:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB242:
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c **** /**
 183:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 184:Core/Src/stm32f4xx_it.c ****   */
 185:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 186:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 186 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 193:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 193 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE242:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB243:
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c **** /**
 196:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 197:Core/Src/stm32f4xx_it.c ****   */
 198:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 199:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 199 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
ARM GAS  C:\Temp\ccFeN9n3.s 			page 8


 209              		.loc 1 203 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** }
 212              		.loc 1 207 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE243:
 217              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	DMA1_Stream1_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	DMA1_Stream1_IRQHandler:
 225              	.LFB244:
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 210:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 211:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 212:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 213:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 214:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c **** /**
 217:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 218:Core/Src/stm32f4xx_it.c ****   */
 219:Core/Src/stm32f4xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 220:Core/Src/stm32f4xx_it.c **** {
 226              		.loc 1 220 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 224:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 234              		.loc 1 224 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 237              	.LVL1:
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 228:Core/Src/stm32f4xx_it.c **** }
 238              		.loc 1 228 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
ARM GAS  C:\Temp\ccFeN9n3.s 			page 9


 243 000c 00000000 		.word	hdma_tim2_up_ch3
 244              		.cfi_endproc
 245              	.LFE244:
 247              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	DMA1_Stream2_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	DMA1_Stream2_IRQHandler:
 255              	.LFB245:
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c **** /**
 231:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 232:Core/Src/stm32f4xx_it.c ****   */
 233:Core/Src/stm32f4xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 234:Core/Src/stm32f4xx_it.c **** {
 256              		.loc 1 234 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 238:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart4_rx);
 264              		.loc 1 238 3 view .LVU33
 265 0002 0248     		ldr	r0, .L22
 266 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 267              	.LVL2:
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 242:Core/Src/stm32f4xx_it.c **** }
 268              		.loc 1 242 1 is_stmt 0 view .LVU34
 269 0008 08BD     		pop	{r3, pc}
 270              	.L23:
 271 000a 00BF     		.align	2
 272              	.L22:
 273 000c 00000000 		.word	hdma_uart4_rx
 274              		.cfi_endproc
 275              	.LFE245:
 277              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	TIM1_CC_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	TIM1_CC_IRQHandler:
 285              	.LFB246:
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c **** /**
 245:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 246:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  C:\Temp\ccFeN9n3.s 			page 10


 247:Core/Src/stm32f4xx_it.c **** void TIM1_CC_IRQHandler(void)
 248:Core/Src/stm32f4xx_it.c **** {
 286              		.loc 1 248 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 252:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 294              		.loc 1 252 3 view .LVU36
 295 0002 0248     		ldr	r0, .L26
 296 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 297              	.LVL3:
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 256:Core/Src/stm32f4xx_it.c **** }
 298              		.loc 1 256 1 is_stmt 0 view .LVU37
 299 0008 08BD     		pop	{r3, pc}
 300              	.L27:
 301 000a 00BF     		.align	2
 302              	.L26:
 303 000c 00000000 		.word	htim1
 304              		.cfi_endproc
 305              	.LFE246:
 307              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 308              		.align	1
 309              		.global	TIM2_IRQHandler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	TIM2_IRQHandler:
 315              	.LFB247:
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c **** /**
 259:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 260:Core/Src/stm32f4xx_it.c ****   */
 261:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 262:Core/Src/stm32f4xx_it.c **** {
 316              		.loc 1 262 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 266:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 324              		.loc 1 266 3 view .LVU39
ARM GAS  C:\Temp\ccFeN9n3.s 			page 11


 325 0002 0248     		ldr	r0, .L30
 326 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 327              	.LVL4:
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 270:Core/Src/stm32f4xx_it.c **** }
 328              		.loc 1 270 1 is_stmt 0 view .LVU40
 329 0008 08BD     		pop	{r3, pc}
 330              	.L31:
 331 000a 00BF     		.align	2
 332              	.L30:
 333 000c 00000000 		.word	htim2
 334              		.cfi_endproc
 335              	.LFE247:
 337              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 338              		.align	1
 339              		.global	TIM4_IRQHandler
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	TIM4_IRQHandler:
 345              	.LFB248:
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c **** /**
 273:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 274:Core/Src/stm32f4xx_it.c ****   */
 275:Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 276:Core/Src/stm32f4xx_it.c **** {
 346              		.loc 1 276 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 280:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 354              		.loc 1 280 3 view .LVU42
 355 0002 0248     		ldr	r0, .L34
 356 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 357              	.LVL5:
 281:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 282:Core/Src/stm32f4xx_it.c **** 
 283:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 284:Core/Src/stm32f4xx_it.c **** }
 358              		.loc 1 284 1 is_stmt 0 view .LVU43
 359 0008 08BD     		pop	{r3, pc}
 360              	.L35:
 361 000a 00BF     		.align	2
 362              	.L34:
 363 000c 00000000 		.word	htim4
 364              		.cfi_endproc
 365              	.LFE248:
ARM GAS  C:\Temp\ccFeN9n3.s 			page 12


 367              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 368              		.align	1
 369              		.global	EXTI15_10_IRQHandler
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	EXTI15_10_IRQHandler:
 375              	.LFB249:
 285:Core/Src/stm32f4xx_it.c **** 
 286:Core/Src/stm32f4xx_it.c **** /**
 287:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 288:Core/Src/stm32f4xx_it.c ****   */
 289:Core/Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 290:Core/Src/stm32f4xx_it.c **** {
 376              		.loc 1 290 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 294:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(IMU_INT_Pin);
 384              		.loc 1 294 3 view .LVU45
 385 0002 4FF40040 		mov	r0, #32768
 386 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 387              	.LVL6:
 295:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 296:Core/Src/stm32f4xx_it.c **** 
 297:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 298:Core/Src/stm32f4xx_it.c **** }
 388              		.loc 1 298 1 is_stmt 0 view .LVU46
 389 000a 08BD     		pop	{r3, pc}
 390              		.cfi_endproc
 391              	.LFE249:
 393              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 394              		.align	1
 395              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	TIM8_TRG_COM_TIM14_IRQHandler:
 401              	.LFB250:
 299:Core/Src/stm32f4xx_it.c **** 
 300:Core/Src/stm32f4xx_it.c **** /**
 301:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt
 302:Core/Src/stm32f4xx_it.c ****   */
 303:Core/Src/stm32f4xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 304:Core/Src/stm32f4xx_it.c **** {
 402              		.loc 1 304 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Temp\ccFeN9n3.s 			page 13


 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 308:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 410              		.loc 1 308 3 view .LVU48
 411 0002 0348     		ldr	r0, .L40
 412 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 413              	.LVL7:
 309:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 414              		.loc 1 309 3 view .LVU49
 415 0008 0248     		ldr	r0, .L40+4
 416 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 417              	.LVL8:
 310:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 311:Core/Src/stm32f4xx_it.c **** 
 312:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 313:Core/Src/stm32f4xx_it.c **** }
 418              		.loc 1 313 1 is_stmt 0 view .LVU50
 419 000e 08BD     		pop	{r3, pc}
 420              	.L41:
 421              		.align	2
 422              	.L40:
 423 0010 00000000 		.word	htim8
 424 0014 00000000 		.word	htim14
 425              		.cfi_endproc
 426              	.LFE250:
 428              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 429              		.align	1
 430              		.global	TIM5_IRQHandler
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	TIM5_IRQHandler:
 436              	.LFB251:
 314:Core/Src/stm32f4xx_it.c **** 
 315:Core/Src/stm32f4xx_it.c **** /**
 316:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 317:Core/Src/stm32f4xx_it.c ****   */
 318:Core/Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 319:Core/Src/stm32f4xx_it.c **** {
 437              		.loc 1 319 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 08B5     		push	{r3, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
 320:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 321:Core/Src/stm32f4xx_it.c **** 
 322:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 323:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 445              		.loc 1 323 3 view .LVU52
 446 0002 0248     		ldr	r0, .L44
ARM GAS  C:\Temp\ccFeN9n3.s 			page 14


 447 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 448              	.LVL9:
 324:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 325:Core/Src/stm32f4xx_it.c **** 
 326:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 327:Core/Src/stm32f4xx_it.c **** }
 449              		.loc 1 327 1 is_stmt 0 view .LVU53
 450 0008 08BD     		pop	{r3, pc}
 451              	.L45:
 452 000a 00BF     		.align	2
 453              	.L44:
 454 000c 00000000 		.word	htim5
 455              		.cfi_endproc
 456              	.LFE251:
 458              		.section	.text.UART4_IRQHandler,"ax",%progbits
 459              		.align	1
 460              		.global	UART4_IRQHandler
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	UART4_IRQHandler:
 466              	.LFB252:
 328:Core/Src/stm32f4xx_it.c **** 
 329:Core/Src/stm32f4xx_it.c **** /**
 330:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART4 global interrupt.
 331:Core/Src/stm32f4xx_it.c ****   */
 332:Core/Src/stm32f4xx_it.c **** void UART4_IRQHandler(void)
 333:Core/Src/stm32f4xx_it.c **** {
 467              		.loc 1 333 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 08B5     		push	{r3, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 3, -8
 474              		.cfi_offset 14, -4
 334:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 335:Core/Src/stm32f4xx_it.c **** 
 336:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 337:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 475              		.loc 1 337 3 view .LVU55
 476 0002 0248     		ldr	r0, .L48
 477 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 478              	.LVL10:
 338:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 339:Core/Src/stm32f4xx_it.c **** 
 340:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 341:Core/Src/stm32f4xx_it.c **** }
 479              		.loc 1 341 1 is_stmt 0 view .LVU56
 480 0008 08BD     		pop	{r3, pc}
 481              	.L49:
 482 000a 00BF     		.align	2
 483              	.L48:
 484 000c 00000000 		.word	huart4
 485              		.cfi_endproc
 486              	.LFE252:
 488              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
ARM GAS  C:\Temp\ccFeN9n3.s 			page 15


 489              		.align	1
 490              		.global	TIM6_DAC_IRQHandler
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	TIM6_DAC_IRQHandler:
 496              	.LFB253:
 342:Core/Src/stm32f4xx_it.c **** 
 343:Core/Src/stm32f4xx_it.c **** /**
 344:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 345:Core/Src/stm32f4xx_it.c ****   */
 346:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 347:Core/Src/stm32f4xx_it.c **** {
 497              		.loc 1 347 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 348:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 349:Core/Src/stm32f4xx_it.c **** 
 350:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 351:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 505              		.loc 1 351 3 view .LVU58
 506 0002 0248     		ldr	r0, .L52
 507 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 508              	.LVL11:
 352:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 353:Core/Src/stm32f4xx_it.c **** 
 354:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 355:Core/Src/stm32f4xx_it.c **** }
 509              		.loc 1 355 1 is_stmt 0 view .LVU59
 510 0008 08BD     		pop	{r3, pc}
 511              	.L53:
 512 000a 00BF     		.align	2
 513              	.L52:
 514 000c 00000000 		.word	htim6
 515              		.cfi_endproc
 516              	.LFE253:
 518              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 519              		.align	1
 520              		.global	TIM7_IRQHandler
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 525              	TIM7_IRQHandler:
 526              	.LFB254:
 356:Core/Src/stm32f4xx_it.c **** 
 357:Core/Src/stm32f4xx_it.c **** /**
 358:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 359:Core/Src/stm32f4xx_it.c ****   */
 360:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 361:Core/Src/stm32f4xx_it.c **** {
 527              		.loc 1 361 1 is_stmt 1 view -0
 528              		.cfi_startproc
ARM GAS  C:\Temp\ccFeN9n3.s 			page 16


 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531 0000 08B5     		push	{r3, lr}
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 3, -8
 534              		.cfi_offset 14, -4
 362:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 363:Core/Src/stm32f4xx_it.c **** 
 364:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 365:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 535              		.loc 1 365 3 view .LVU61
 536 0002 0248     		ldr	r0, .L56
 537 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 538              	.LVL12:
 366:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 367:Core/Src/stm32f4xx_it.c **** 
 368:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 369:Core/Src/stm32f4xx_it.c **** }
 539              		.loc 1 369 1 is_stmt 0 view .LVU62
 540 0008 08BD     		pop	{r3, pc}
 541              	.L57:
 542 000a 00BF     		.align	2
 543              	.L56:
 544 000c 00000000 		.word	htim7
 545              		.cfi_endproc
 546              	.LFE254:
 548              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 549              		.align	1
 550              		.global	DMA2_Stream0_IRQHandler
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 555              	DMA2_Stream0_IRQHandler:
 556              	.LFB255:
 370:Core/Src/stm32f4xx_it.c **** 
 371:Core/Src/stm32f4xx_it.c **** /**
 372:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 373:Core/Src/stm32f4xx_it.c ****   */
 374:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 375:Core/Src/stm32f4xx_it.c **** {
 557              		.loc 1 375 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561 0000 08B5     		push	{r3, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 3, -8
 564              		.cfi_offset 14, -4
 376:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 377:Core/Src/stm32f4xx_it.c **** 
 378:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 379:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 565              		.loc 1 379 3 view .LVU64
 566 0002 0248     		ldr	r0, .L60
 567 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 568              	.LVL13:
 380:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
ARM GAS  C:\Temp\ccFeN9n3.s 			page 17


 381:Core/Src/stm32f4xx_it.c **** 
 382:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 383:Core/Src/stm32f4xx_it.c **** }
 569              		.loc 1 383 1 is_stmt 0 view .LVU65
 570 0008 08BD     		pop	{r3, pc}
 571              	.L61:
 572 000a 00BF     		.align	2
 573              	.L60:
 574 000c 00000000 		.word	hdma_adc1
 575              		.cfi_endproc
 576              	.LFE255:
 578              		.text
 579              	.Letext0:
 580              		.file 2 "c:\\users\\jessejabezarendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-
 581              		.file 3 "c:\\users\\jessejabezarendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-
 582              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 583              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 584              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 585              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 586              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 587              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 588              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Temp\ccFeN9n3.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
  C:\Temp\ccFeN9n3.s:21     .text.NMI_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:27     .text.NMI_Handler:00000000 NMI_Handler
  C:\Temp\ccFeN9n3.s:44     .text.HardFault_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
  C:\Temp\ccFeN9n3.s:67     .text.MemManage_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
  C:\Temp\ccFeN9n3.s:90     .text.BusFault_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
  C:\Temp\ccFeN9n3.s:113    .text.UsageFault_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
  C:\Temp\ccFeN9n3.s:136    .text.SVC_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:142    .text.SVC_Handler:00000000 SVC_Handler
  C:\Temp\ccFeN9n3.s:155    .text.DebugMon_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
  C:\Temp\ccFeN9n3.s:174    .text.PendSV_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
  C:\Temp\ccFeN9n3.s:193    .text.SysTick_Handler:00000000 $t
  C:\Temp\ccFeN9n3.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
  C:\Temp\ccFeN9n3.s:218    .text.DMA1_Stream1_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:224    .text.DMA1_Stream1_IRQHandler:00000000 DMA1_Stream1_IRQHandler
  C:\Temp\ccFeN9n3.s:243    .text.DMA1_Stream1_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:248    .text.DMA1_Stream2_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:254    .text.DMA1_Stream2_IRQHandler:00000000 DMA1_Stream2_IRQHandler
  C:\Temp\ccFeN9n3.s:273    .text.DMA1_Stream2_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:278    .text.TIM1_CC_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:284    .text.TIM1_CC_IRQHandler:00000000 TIM1_CC_IRQHandler
  C:\Temp\ccFeN9n3.s:303    .text.TIM1_CC_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:308    .text.TIM2_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:314    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
  C:\Temp\ccFeN9n3.s:333    .text.TIM2_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:338    .text.TIM4_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:344    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
  C:\Temp\ccFeN9n3.s:363    .text.TIM4_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:368    .text.EXTI15_10_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:374    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
  C:\Temp\ccFeN9n3.s:394    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:400    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 TIM8_TRG_COM_TIM14_IRQHandler
  C:\Temp\ccFeN9n3.s:423    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000010 $d
  C:\Temp\ccFeN9n3.s:429    .text.TIM5_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:435    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
  C:\Temp\ccFeN9n3.s:454    .text.TIM5_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:459    .text.UART4_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:465    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
  C:\Temp\ccFeN9n3.s:484    .text.UART4_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:489    .text.TIM6_DAC_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:495    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
  C:\Temp\ccFeN9n3.s:514    .text.TIM6_DAC_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:519    .text.TIM7_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:525    .text.TIM7_IRQHandler:00000000 TIM7_IRQHandler
  C:\Temp\ccFeN9n3.s:544    .text.TIM7_IRQHandler:0000000c $d
  C:\Temp\ccFeN9n3.s:549    .text.DMA2_Stream0_IRQHandler:00000000 $t
  C:\Temp\ccFeN9n3.s:555    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
  C:\Temp\ccFeN9n3.s:574    .text.DMA2_Stream0_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
ARM GAS  C:\Temp\ccFeN9n3.s 			page 19


HAL_IncTick
HAL_DMA_IRQHandler
hdma_tim2_up_ch3
hdma_uart4_rx
HAL_TIM_IRQHandler
htim1
htim2
htim4
HAL_GPIO_EXTI_IRQHandler
htim8
htim14
htim5
HAL_UART_IRQHandler
huart4
htim6
htim7
hdma_adc1
